[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "SPIDER-seq",
    "section": "",
    "text": "SPIDER-seq\nSingle-cell Projectome-transcriptome In situ Deciphering Sequencing",
    "crumbs": [
      "SPIDER-seq"
    ]
  },
  {
    "objectID": "index.html#summary",
    "href": "index.html#summary",
    "title": "SPIDER-seq",
    "section": "Summary",
    "text": "Summary\nDeciphering the connectivity, transcriptome, and spatial-omics integrated multi-module brain atlas and the underlying organization principles remains challenging. We developed a cost-effective Single-cell Projectome-transcriptome In situ Deciphering Sequencing (SPIDER-Seq) method by combining viral barcoding tracing with single-cell sequencing and spatial-omics. Leveraging SPIDER-Seq, we delineated a comprehensive integrated single-cell spatial molecular, cellular and projectomic atlas of mouse prefrontal cortex (PFC). The projectomic and transcriptomic cell clusters display distinct organization principle, but are coordinately configured in PFC. These projection neurons gradiently distributed in PFC aligning with their wiring patterns, and importantly, show higher co-projection probability to the downstream nuclei with reciprocal circuit connections. Moreover, we depicted PFC neural transmission map, in which neural transmission molecues (neurotransmitter/neuropeptide and the receptors) distinctly express in different circuits. Finally, we predicted neuron projections by integrated gene profile and spatial information with high accuracy via machine learning. Our study could greatly facilitate to delineating brain multi-module network and understanding neural computation.\n\n\n\nmovie",
    "crumbs": [
      "SPIDER-seq"
    ]
  },
  {
    "objectID": "index.html#data-visualization",
    "href": "index.html#data-visualization",
    "title": "SPIDER-seq",
    "section": "Data Visualization",
    "text": "Data Visualization\nWe developed is a shiny application SPIDER-web that allows users to interactively access our data. You can access our online website at https://huggingface.co/spaces/TigerZheng/SPIDER-web",
    "crumbs": [
      "SPIDER-seq"
    ]
  },
  {
    "objectID": "index.html#code-view",
    "href": "index.html#code-view",
    "title": "SPIDER-seq",
    "section": "Code View",
    "text": "Code View\nThe code of this project can be viewed at https://zhengtiger.github.io/SPIDER-seq",
    "crumbs": [
      "SPIDER-seq"
    ]
  },
  {
    "objectID": "index.html#citation",
    "href": "index.html#citation",
    "title": "SPIDER-seq",
    "section": "Citation",
    "text": "Citation\nOur project has been released in the following publication:",
    "crumbs": [
      "SPIDER-seq"
    ]
  },
  {
    "objectID": "Figure1.html",
    "href": "Figure1.html",
    "title": "1  Figure1",
    "section": "",
    "text": "1.1 Figure_1A\nCode\nknitr::include_graphics(\"images/Figure_1A.jpg\", dpi = 300)",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Figure1</span>"
    ]
  },
  {
    "objectID": "Figure1.html#figure_1b",
    "href": "Figure1.html#figure_1b",
    "title": "1  Figure1",
    "section": "1.2 Figure_1B",
    "text": "1.2 Figure_1B\n\n\nCode\nseu &lt;- all.Adult\ncluster_order &lt;- c(\"Excitatory\", \"Inhibitory\", \"Astro\", \"Endo\", \"Microglia\",\n                   \"Oligo\", \"OPC\")\nseu$MainType &lt;- factor(seu$MainType, levels = cluster_order)\nIdents(seu) &lt;- \"MainType\"\n\nFigure_1B &lt;- \n  DimPlot_scCustom(\n    seurat_object = seu,\n    reduction = 'umap',\n    colors_use = col_MainType,\n    figure_plot = TRUE,\n    label = T\n    ) +\n  coord_fixed()\n\nFigure_1B\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure1/Figure_1B.pdf\", plot = Figure_1B,\n       height = 5, width = 6, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Figure1</span>"
    ]
  },
  {
    "objectID": "Figure1.html#figure_1c",
    "href": "Figure1.html#figure_1c",
    "title": "1  Figure1",
    "section": "1.3 Figure_1C",
    "text": "1.3 Figure_1C\n\n\nCode\nseu &lt;- all.Adult\nIdents(seu) &lt;- \"BC_label\"\n\nFigure_1C &lt;- \n  DimPlot(\n    seu,\n    cols = col_BC_label,\n    reduction = 'umap'\n    ) +\n  theme_bw() +\n  theme(panel.grid = element_blank(), \n        axis.text = element_blank(), axis.ticks = element_blank(),\n        panel.border = element_rect(color = \"black\", size = 1)) +\n  labs(x=\"\", y=\"\") +\n  coord_fixed()\n\nFigure_1C\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure1/Figure_1C.pdf\", plot = Figure_1C,\n       height = 4, width = 6, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Figure1</span>"
    ]
  },
  {
    "objectID": "Figure1.html#figure_1d",
    "href": "Figure1.html#figure_1d",
    "title": "1  Figure1",
    "section": "1.4 Figure_1D",
    "text": "1.4 Figure_1D\n\n\nCode\nseu &lt;- Adult.Ex\ncluster_order &lt;- c(\"L2/3_IT_1\",\"L2/3_IT_2\",\"L4/5_IT_1\",\"L4/5_IT_2\",\"L5_IT_1\",\n                   \"L5_IT_2\",\"L6_IT_1\",\"L6_IT_2\",\"L5_PT_1\",\"L5_PT_2\",\"L5_NP\",\n                   \"L6_CT_1\",\"L6_CT_2\")\nseu$SubType &lt;- factor(seu$SubType, levels = cluster_order)\nIdents(seu) &lt;- seu$SubType\n\nFigure_1D &lt;- \n  DimPlot_scCustom(\n    seurat_object = seu,\n    reduction = 'umap',\n    colors_use = col_SubType,\n    figure_plot = F,\n    label = F\n    ) +\n  theme_void() +\n  theme(legend.text = element_text(size = 15)) +\n  guides(color = guide_legend(ncol = 1, override.aes = list(size = 5))) +\n  coord_fixed()\n\nFigure_1D\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure1/Figure_1D.pdf\", plot = Figure_1D, \n       height = 4, width = 6, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Figure1</span>"
    ]
  },
  {
    "objectID": "Figure1.html#figure_1e",
    "href": "Figure1.html#figure_1e",
    "title": "1  Figure1",
    "section": "1.5 Figure_1E",
    "text": "1.5 Figure_1E\n\n\nCode\nseu &lt;- subset(Adult.Ex, cells = colnames(Adult.Ex)[which(!(Adult.Ex$sample %in% c(\"Adult2\",\"Adult3\") & Adult.Ex$Ex_subtype == \"PT\" & Adult.Ex$BC_num &gt; 0))])\nseu &lt;- subset(seu, cells = colnames(seu)[which(!(seu$BC_num &gt; 0 & seu$Ex_subtype %in% c(\"CT\", \"NP\")))])\n\ndf &lt;- data.frame(\n  \"UMAP_1\" = seu@reductions$umap@cell.embeddings[,\"UMAP_1\"],\n  \"UMAP_2\" = seu@reductions$umap@cell.embeddings[,\"UMAP_2\"]\n)\ndf$`ACB-I` &lt;- seu$`ACB-I`\ndf$`CP-I` &lt;- seu$`CP-I`\ndf$`BLA-I` &lt;- seu$`BLA-I`\ndf$`RSP-I` &lt;- seu$`RSP-I`\ndf$`AId-I` &lt;- seu$`AId-I`\ndf$`AUD-I` &lt;- seu$`AUD-I`\ndf$`ECT-I` &lt;- seu$`ECT-I`\ndf$`SSp-I` &lt;- seu$`SSp-I`\ndf$`DR-I` &lt;- seu$`DR-I`\ndf$`LHA-I` &lt;- seu$`LHA-I`\n\nBC_col &lt;- c(\"ACB-I\"=\"#ff6e40\",\"BLA-I\"=\"#ffab40\",\"AId-I\"=\"#ffff00\",\"DR-I\"=\"#ff8a80\",\n            \"CP-I\"=\"#448aff\",\"RSP-I\"=\"#84ffff\",\"AUD-I\"=\"#18ffff\",\"LHA-I\"=\"#ff4081\")\n\ndf &lt;- df[which(df$UMAP_1&lt;7),]\nmax_limits &lt;- c(200,100,100,100,\n                200,100,50,100)\n\nplist &lt;- list()\nplist_legend &lt;- list()\nfor (i in 1:8){\n  df_i &lt;- df[which(df[,names(BC_col)[i]]&gt;0.1),]\n  df_i &lt;- df_i[,c(\"UMAP_1\",\"UMAP_2\",names(BC_col)[i])]\n  colnames(df_i) &lt;- c(\"UMAP_1\",\"UMAP_2\",\"Value\")\n  col &lt;- pal_scircolor(100)\n  plist[[i]] &lt;- \n    ggplot() +\n    geom_point(df, mapping = aes(x = UMAP_1, y = UMAP_2), color=\"black\", size=0.5) +\n    geom_pointdensity(df_i, mapping = aes(x = UMAP_1, y = UMAP_2), size=0.5) +\n    #geom_point(df_i, mapping = aes(x = UMAP_1, y = UMAP_2), color=Value, size=0.5) +\n    scale_color_gradientn(colours = col,\n                          na.value = col[length(col)],\n                          limits = c(0,max_limits[i]), \n                          breaks = c(0,max_limits[i])\n                          ) +\n    coord_fixed() +\n    ggdark::dark_theme_bw() +\n    labs(title = names(BC_col)[i], x=\"\", y=\"\", colour = \"\") +\n    theme(plot.title = element_text(hjust = 0.5),\n          axis.ticks = element_blank(), axis.text = element_blank(),\n          panel.grid = element_blank(),\n          legend.position = \"right\",\n          legend.key.width  = unit(0.5, \"lines\"),\n          legend.key.height = unit(2, \"lines\"))\n  #ggsave(paste(\"../pdf/Figure1/Figure_1E/\",names(BC_col)[i],\".png\",sep=\"\"), \n  #       plot = plist[[i]], height = 3, width = 3, units = \"in\")\n}\n\nFigure_1E &lt;- plot_grid(plotlist = plist, ncol = 4)\nFigure_1E\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure1/Figure_1E.pdf\", plot = Figure_1E, \n       height = 6, width = 12, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Figure1</span>"
    ]
  },
  {
    "objectID": "Figure1.html#figure_1f",
    "href": "Figure1.html#figure_1f",
    "title": "1  Figure1",
    "section": "1.6 Figure_1F",
    "text": "1.6 Figure_1F\n\n\nCode\nknitr::include_graphics(\"images/Figure_1F.png\", dpi = 300)",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Figure1</span>"
    ]
  },
  {
    "objectID": "Figure1.html#figure_1g",
    "href": "Figure1.html#figure_1g",
    "title": "1  Figure1",
    "section": "1.7 Figure_1G",
    "text": "1.7 Figure_1G\n\n\nCode\nbg3d(color = \"black\")\npar3d(userMatrix = rotationMatrix(-pi/6, -1, 1, 0), zoom = 0.6)\nacr.list &lt;- c(\"MOs\",\"PL\",\"ORBm\",\"ACAd\",\"ILA\",\"DP\",\"ACAv\")\n\nfor(acr in acr.list){\n  mesh &lt;- mesh3d.allen.annot.from.id(id.from.acronym(acr))\n  #to.del &lt;- which(mesh$vb[1,] &lt; 0)\n  to.del &lt;- NA\n  mesh$it &lt;- mesh$it[,!is.element(mesh$it[1,], to.del) & !is.element(mesh$it[2,], to.del) & !is.element(mesh$it[3,], to.del)]\n  #col &lt;- color.from.acronym(acr)\n  col &lt;- \"lightgray\"\n  #col &lt;- col_Region[acr]\n  wire3d(mesh, col = col, material = list(lit=FALSE), alpha = 0.2)\n}\n\ndf_plot &lt;- sp.PFC@meta.data\nfor (i in c(1:13)){\n  idx_cluster = rownames(df_plot)[which(\n    df_plot$SubType==names(col_SubType)[i]\n    )]\n  spheres3d(x = df_plot[idx_cluster,]$ML_new, \n            y = df_plot[idx_cluster,]$DV_new,\n            z = df_plot[idx_cluster,]$AP_new,\n            col = col_SubType[i], radius=0.01, alpha=1)\n}\n\nrgl.snapshot('../pdf/Figure1/Figure_1G.png', top = TRUE)\n\n\n\n\nCode\nknitr::include_graphics(\"images/Figure_1G.png\", dpi = 300)",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Figure1</span>"
    ]
  },
  {
    "objectID": "Figure1.html#figure_1h",
    "href": "Figure1.html#figure_1h",
    "title": "1  Figure1",
    "section": "1.8 Figure_1H",
    "text": "1.8 Figure_1H\n\n\nCode\nbg3d(color = \"black\")\npar3d(userMatrix = rotationMatrix(-pi/6, -1, 1, 0), zoom = 0.6)\nacr.list &lt;- c(\"MOs\",\"PL\",\"ORBm\",\"ACAd\",\"ILA\",\"DP\",\"ACAv\")\n\nfor(acr in acr.list){\n  mesh &lt;- mesh3d.allen.annot.from.id(id.from.acronym(acr))\n  #to.del &lt;- which(mesh$vb[1,] &lt; 0)\n  to.del &lt;- NA\n  mesh$it &lt;- mesh$it[,!is.element(mesh$it[1,], to.del) & !is.element(mesh$it[2,], to.del) & !is.element(mesh$it[3,], to.del)]\n  #col &lt;- color.from.acronym(acr)\n  col &lt;- \"lightgray\"\n  #col &lt;- col_Region[acr]\n  wire3d(mesh, col = col, material = list(lit=FALSE), alpha = 0.2)\n}\n\ndf_plot &lt;- sp.PFC@meta.data\nfor (i in c(1)){\n  idx_cluster = rownames(df_plot)[which(\n    df_plot$SubType==names(col_SubType)[i]\n    )]\n  spheres3d(x = df_plot[idx_cluster,]$ML_new, \n            y = df_plot[idx_cluster,]$DV_new,\n            z = df_plot[idx_cluster,]$AP_new,\n            col = col_SubType[i], radius=0.01, alpha=1)\n}\n\nrgl.snapshot('../pdf/Figure1/Figure_1H/01.L23_IT_1_3d.png', top = TRUE)\n\n\n\n\nCode\ndf &lt;- sp.PFC@meta.data\ndf &lt;- df[which(df$slice=='IT_slice_10'),]\nSubType &lt;- \"L2/3_IT_1\"\n\nFigure_1H &lt;- ggplot() +\n  geom_point(df, mapping=aes(x=X, y=Y), color=\"#00204DFF\", size=1) +\n  geom_point(df[which(df$SubType==SubType),], \n             mapping=aes(x=X, y=Y), color=\"#FFEA46FF\", size=1) +\n  coord_fixed() +\n  ggdark::dark_theme_void() +\n  theme(plot.title = element_text(size = 20, hjust = 0.5),\n        legend.position = 'none')\nFigure_1H\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure1/Figure_1H/01.L23_IT_1_2d.png\", plot = Figure_1H, \n       height = 4, width = 4.29, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Figure1</span>"
    ]
  },
  {
    "objectID": "Figure1.html#figure_i",
    "href": "Figure1.html#figure_i",
    "title": "1  Figure1",
    "section": "1.9 Figure_I",
    "text": "1.9 Figure_I\n\n\nCode\nbg3d(color = \"black\")\npar3d(userMatrix = rotationMatrix(-pi/6, -1, 1, 0), zoom = 0.6)\nacr.list &lt;- c(\"MOs\",\"PL\",\"ORBm\",\"ACAd\",\"ILA\",\"DP\",\"ACAv\")\n\nfor(acr in acr.list){\n  mesh &lt;- mesh3d.allen.annot.from.id(id.from.acronym(acr))\n  #to.del &lt;- which(mesh$vb[1,] &lt; 0)\n  to.del &lt;- NA\n  mesh$it &lt;- mesh$it[,!is.element(mesh$it[1,], to.del) & !is.element(mesh$it[2,], to.del) & !is.element(mesh$it[3,], to.del)]\n  #col &lt;- color.from.acronym(acr)\n  col &lt;- \"lightgray\"\n  #col &lt;- col_Region[acr]\n  wire3d(mesh, col = col, material = list(lit=FALSE), alpha = 0.2)\n}\n\nbarcode &lt;- c(\"VIS-I\",\"ACB-I\",\"CP-C\",\"AId-I\",\"CP-I\",\"ECT-C\",\"AId-C\",\"ECT-I\",\n             \"BLA-I\",\"AUD-I\",\"RSP-C\",\"SSp-I\",\"RSP-I\",\"ACB-C\",\"LHA-I\")\ndf_plot &lt;- sp.PFC@meta.data\ndf_plot &lt;- df_plot[df_plot$ABA_PFC==\"PFC\" & df_plot$BC_num&gt;0,]\ndf_plot$first_target &lt;- barcode[apply(df_plot[,barcode], 1, which.max)]\n\nfor (i in 1:length(barcode)){\n  idx_cluster = rownames(df_plot)[which(\n    df_plot$first_target==barcode[i]\n    )]\n  col &lt;- col_Barcode[gsub('.','-',barcode[i],fixed = T)]\n  spheres3d(x = df_plot[idx_cluster,]$ML_new, \n            y = df_plot[idx_cluster,]$DV_new,\n            z = df_plot[idx_cluster,]$AP_new,\n            col = col, radius=0.01, alpha=1)\n}\n\nrgl.snapshot('../pdf/Figure1/Figure_I.png', top = TRUE)\n\n\n\n\nCode\nknitr::include_graphics(\"images/Figure_1I.png\", dpi = 300)",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Figure1</span>"
    ]
  },
  {
    "objectID": "Figure1.html#figure_1j",
    "href": "Figure1.html#figure_1j",
    "title": "1  Figure1",
    "section": "1.10 Figure_1J",
    "text": "1.10 Figure_1J\n\n\nCode\nbg3d(color = \"black\")\npar3d(userMatrix = rotationMatrix(-pi/6, -1, 1, 0), zoom = 0.6)\nacr.list &lt;- c(\"MOs\",\"PL\",\"ORBm\",\"ACAd\",\"ILA\",\"DP\",\"ACAv\")\n\nfor(acr in acr.list){\n  mesh &lt;- mesh3d.allen.annot.from.id(id.from.acronym(acr))\n  #to.del &lt;- which(mesh$vb[1,] &lt; 0)\n  to.del &lt;- NA\n  mesh$it &lt;- mesh$it[,!is.element(mesh$it[1,], to.del) & !is.element(mesh$it[2,], to.del) & !is.element(mesh$it[3,], to.del)]\n  #col &lt;- color.from.acronym(acr)\n  col &lt;- \"lightgray\"\n  #col &lt;- col_Region[acr]\n  wire3d(mesh, col = col, material = list(lit=FALSE), alpha = 0.2)\n}\n\nbarcode &lt;- c(\"VIS-I\",\"ACB-I\",\"CP-C\",\"AId-I\",\"CP-I\",\"ECT-C\",\"AId-C\",\"ECT-I\",\n             \"BLA-I\",\"AUD-I\",\"RSP-C\",\"SSp-I\",\"RSP-I\",\"ACB-C\",\"LHA-I\")\ndf_plot &lt;- sp.PFC@meta.data\ndf_plot &lt;- df_plot[df_plot$ABA_PFC==\"PFC\" & df_plot$BC_num&gt;0,]\ndf_plot$first_target &lt;- barcode[apply(df_plot[,barcode], 1, which.max)]\n\nfor (i in c(1)){\n  idx_cluster = rownames(df_plot)[which(\n    df_plot$first_target==barcode[i]\n    )]\n  col &lt;- col_Barcode[gsub('.','-',barcode[i],fixed = T)]\n  spheres3d(x = df_plot[idx_cluster,]$ML_new, \n            y = df_plot[idx_cluster,]$DV_new,\n            z = df_plot[idx_cluster,]$AP_new,\n            col = col, radius=0.01, alpha=1)\n}\n\nrgl.snapshot('../pdf/Figure1/Figure_1J/01.VIS-I.3d.png', top = TRUE)\n\n\n\n\nCode\ndf &lt;- sp.PFC@meta.data\ndf &lt;- df[which(df$slice=='IT_slice_10'),]\nBarcode &lt;- \"VIS-I\"\n\nFigure_1J &lt;- ggplot() +\n  geom_point(df, mapping=aes(x=X, y=Y), color=\"#00204DFF\", size=1) +\n  geom_point(df[which(df[,Barcode]&gt;0),], \n             mapping=aes(x=X, y=Y), color=\"#FFEA46FF\", size=1) +\n  coord_fixed() +\n  ggdark::dark_theme_void() +\n  theme(plot.title = element_text(size = 20, hjust = 0.5),\n        legend.position = 'none')\nFigure_1J\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure1/Figure_1J/01.VIS-I.2d.png\", plot = Figure_1J, \n       height = 4, width = 4.29, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Figure1</span>"
    ]
  },
  {
    "objectID": "Figure2.html",
    "href": "Figure2.html",
    "title": "2  Figure2",
    "section": "",
    "text": "2.1 Figure2_A\nCode\nbarcode &lt;- c(\"SSp-I\",\"AUD-I\",\"RSP-I\",\"VIS-I\",\"CP-I\",\n             \"ECT-I\",\"AId-I\",\"BLA-I\",\"ACB-I\",\"LHA-I\")\nseu &lt;- subset(sp.PFC, cells=colnames(sp.PFC)[which(\n  sp.PFC$ABA_hemisphere==\"Left\" & sp.PFC$BC_num&gt;0)])\nbc_slice &lt;- seu@meta.data[,c(barcode, 'Y')]\nbc_slice &lt;- \n  bc_slice |&gt;\n  mutate(bin = cut(Y, breaks = 36))\nbin &lt;- sort(unique(bc_slice$bin))\nbc_slice$bin_index &lt;- match(bc_slice$bin, bin)\n\nbc_slice_mean &lt;- \n  bc_slice[,c(barcode,\"bin_index\")] |&gt;\n  group_by(bin_index) |&gt;\n  dplyr::summarize(across(1:length(barcode), ~sum(.x&gt;0, na.rm = TRUE))) |&gt;\n  as.data.frame()\nfor (i in 1:36){\n  bc_slice_mean[i,2:11] &lt;- bc_slice_mean[i,2:11]/length(which(bc_slice$bin_index==i))\n}\nbc_slice_mean &lt;- bc_slice_mean[,2:11]\nbc_slice_mean &lt;- t(scale(bc_slice_mean))\n\nannotation_row = data.frame(\n  Proj_module = rep(c(\"ITi-D\",\"ITi-V\"),c(5,5))\n)\nrownames(annotation_row) &lt;- rownames(bc_slice_mean)\nann_colors = list(\n  Proj_module = c('ITi-D'='#1f77b4','ITi-V'='#ff7f0e')\n)\n\nFigure2_A &lt;- \n  pheatmap(bc_slice_mean[barcode, rev(1:36)], \n         color = colorRampPalette(c(\"white\",\"#1f77b4\"))(200), \n         breaks = seq(-1,1,0.01), show_colnames = F, treeheight_row=10,\n         cluster_rows = F, cluster_cols = F, annotation_row=annotation_row,\n         annotation_colors = ann_colors, annotation_names_row=F,\n         annotation_legend=F\n         )\nFigure2_A\nCode\nggsave(\"../pdf/Figure2/Figure2_A.pdf\", plot = Figure2_A, \n       height = 3, width = 7, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Figure2</span>"
    ]
  },
  {
    "objectID": "Figure2.html#figure2_b",
    "href": "Figure2.html#figure2_b",
    "title": "2  Figure2",
    "section": "2.2 Figure2_B",
    "text": "2.2 Figure2_B\n\n\nCode\nbarcode &lt;- c(\"SSp-I\",\"AUD-I\",\"RSP-I\",\"VIS-I\",\"CP-I\",\n             \"ECT-I\",\"AId-I\",\"BLA-I\",\"ACB-I\",\"LHA-I\")\nseu &lt;- subset(sp.PFC, cells=colnames(sp.PFC)[which(\n  sp.PFC$ABA_hemisphere==\"Left\" & sp.PFC$BC_num&gt;0)])\nbc_slice &lt;- seu@meta.data[,c(barcode, 'slice')]\nbc_slice_mean &lt;- \n  bc_slice |&gt;\n  group_by(slice) |&gt;\n  dplyr::summarize(across(1:length(barcode), ~sum(.x&gt;0, na.rm = TRUE))) |&gt;\n  as.data.frame()\nfor (i in 1:36) {\n  bc_slice_mean[i,2:11] &lt;- bc_slice_mean[i,2:11]/length(which(bc_slice$slice==bc_slice_mean$slice[i]))\n}\nrownames(bc_slice_mean) &lt;- bc_slice_mean$slice\nbc_slice_mean &lt;- bc_slice_mean[,2:11]\nbc_slice_mean &lt;- t(scale(bc_slice_mean))\n\nannotation_row = data.frame(\n  Proj_module = rep(c(\"ITi-D\",\"ITi-V\"),c(5,5))\n)\nrownames(annotation_row) &lt;- rownames(bc_slice_mean)\nann_colors = list(\n  Proj_module = c('ITi-D'='#1f77b4','ITi-V'='#ff7f0e')\n)\n\nFigure2_B &lt;- \n  pheatmap(bc_slice_mean[barcode,], \n         color = colorRampPalette(c(\"white\",\"#d62728\"))(200), \n         breaks = seq(-1,1,0.01), show_colnames = F, treeheight_row=10,\n         cluster_rows = F, cluster_cols = F, annotation_row=annotation_row,\n         annotation_colors = ann_colors, annotation_names_row=F,\n         annotation_legend=F\n         )\nFigure2_B\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure2/Figure2_B.pdf\", plot = Figure2_B, \n       height = 3, width = 7, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Figure2</span>"
    ]
  },
  {
    "objectID": "Figure2.html#figure2_c",
    "href": "Figure2.html#figure2_c",
    "title": "2  Figure2",
    "section": "2.3 Figure2_C",
    "text": "2.3 Figure2_C\n\n\nCode\nslice &lt;- 'IT_slice_05'\nbarcode &lt;- 'RSP-I'\nlimits &lt;- c(0,3)\n\nseu &lt;- subset(sp.PFC, cells=colnames(sp.PFC)[which(sp.PFC$ABA_hemisphere==\"Left\")])\ndf &lt;- data.frame(\n  X = seu$X,\n  Y = seu$Y,\n  Zscore = scale(log1p(seu@meta.data[,barcode]))\n)\ndf &lt;- df[which(seu$slice==slice),]\ndf$Zscore[df$Zscore&lt;limits[1]] &lt;- limits[1]\ndf$Zscore[df$Zscore&gt;limits[2]] &lt;- limits[2]\ndf &lt;- df[order(df$Zscore),]\n\nFigure2_C &lt;- \n  ggplot(df, aes(x=X,y=Y)) +\n  geom_point(aes(colour=Zscore), size=1) +\n  scale_color_gradientn(colours = viridis(n = 256, option = \"E\", direction = 1),\n                       limits = limits) +\n  ggdark::dark_theme_void() +\n  labs(title = \"\") +\n  theme(plot.title = element_blank(), legend.position = \"none\") +\n  coord_fixed()\nFigure2_C\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure2/Figure2_C/RSP_slice05.png\", plot = Figure2_C, \n       height = 4, width = 4, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Figure2</span>"
    ]
  },
  {
    "objectID": "Figure2.html#figure2_d",
    "href": "Figure2.html#figure2_d",
    "title": "2  Figure2",
    "section": "2.4 Figure2_D",
    "text": "2.4 Figure2_D\n\n\nCode\nseu &lt;- subset(sp.PFC, cells=colnames(sp.PFC)[which(sp.PFC$ABA_hemisphere==\"Left\")])\nslice &lt;- unique(seu$slice)\ndf &lt;- data.frame('slice'=slice)\nfor (i in 1:length(slice)){\n  df$`BLA-I`[i] &lt;- length(which(seu$slice==slice[i] &\n                              seu$`BLA-I`&gt;0))/\n    length(which(seu$slice==slice[i] & seu$BC_num&gt;0))\n  df$`RSP-I`[i] &lt;- length(which(seu$slice==slice[i] &\n                              seu$`RSP-I`&gt;0))/\n    length(which(seu$slice==slice[i] & seu$BC_num&gt;0))\n}\ndf$x &lt;- c(1:36)\ndf &lt;- pivot_longer(df, 2:3, names_to = \"target\", values_to = \"value\")\n# RSP.I=\"#6BD76BFF\" BLA=\"#D595A7FF\"\nFigure2_D_1 &lt;- \n  ggplot(df, aes(x=x, y=value, color=target)) +\n  #geom_line(color=\"#D595A7FF\",size=1) +\n  geom_point(alpha=0.5, size=3) +\n  geom_smooth(se = F, linewidth=1.5) +\n  theme_bw() +\n  scale_x_continuous(breaks = seq(0,35,5)) +\n  scale_color_manual(values = c('RSP-I'=\"#1f77b4\", 'BLA-I'=\"#ff7f0e\")) +\n  theme(text = element_text(size=15), \n        plot.title = element_text(size = 20, hjust = 0.5)) +\n  labs(x='A → P',y='Cell proportion')\nFigure2_D_1\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure2/Figure2_D_1.pdf\", plot = Figure2_D_1, \n       height = 2.5, width = 6, units = \"in\")\n\n\n\n\nCode\nbarcode &lt;- c(\"VIS-I\",\"ACB-I\",\"AId-I\",\"CP-I\",\"ECT-I\",\n             \"BLA-I\",\"AUD-I\",\"SSp-I\",\"RSP-I\",\"LHA-I\")\nseu &lt;- subset(sp.PFC, cells=colnames(sp.PFC)[which(sp.PFC$ABA_hemisphere==\"Left\")])\nbc_slice &lt;- seu@meta.data[,c(barcode, 'Y','BC_num')]\nbc_slice &lt;- \n  bc_slice |&gt;\n  mutate(bin = cut(Y, breaks = 36))\nbin &lt;- sort(unique(bc_slice$bin))\nbc_slice$bin_index &lt;- match(bc_slice$bin, bin)\n\n\ndf &lt;- data.frame('bin_index'=c(1:36))\nfor (i in 1:36){\n  df$`BLA-I`[i] &lt;- length(which(bc_slice$bin_index==i & bc_slice$`BLA-I`&gt;0))/\n    length(which(bc_slice$bin_index==i & bc_slice$BC_num&gt;0))\n  df$`RSP-I`[i] &lt;- length(which(bc_slice$bin_index==i &\n                              bc_slice$`RSP-I`&gt;0))/\n    length(which(bc_slice$bin_index==i & bc_slice$BC_num&gt;0))\n}\ndf$x &lt;- c(1:36)\ndf &lt;- pivot_longer(df, 2:3, names_to = \"target\", values_to = \"value\")\n# RSP.I=\"#6BD76BFF\" BLA=\"#D595A7FF\"\nFigure2_D_2 &lt;- \n  ggplot(df, aes(x=x, y=value, color=target)) +\n  #geom_line(color=\"#D595A7FF\",size=1) +\n  geom_point(alpha=0.5, size=3) +\n  geom_smooth(se = F, linewidth=1.5) +\n  theme_bw() +\n  scale_x_continuous(breaks = seq(0,35,5)) +\n  scale_color_manual(values = c('RSP-I'=\"#1f77b4\", 'BLA-I'=\"#ff7f0e\")) +\n  theme(text = element_text(size=15), \n        plot.title = element_text(size = 20, hjust = 0.5)) +\n  labs(x='V → D',y='Cell proportion')\nFigure2_D_2\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure2/Figure2_D_2.pdf\", plot = Figure2_D_2, \n       height = 2.5, width = 6, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Figure2</span>"
    ]
  },
  {
    "objectID": "Figure2.html#figure2_e",
    "href": "Figure2.html#figure2_e",
    "title": "2  Figure2",
    "section": "2.5 Figure2_E",
    "text": "2.5 Figure2_E\n\n\nCode\nlibrary(networkD3)\n\nIT_SubType &lt;- c(\"L2/3_IT_1\", \"L4/5_IT_1\", \"L5_IT_1\", \"L6_IT_1\",\n                \"L2/3_IT_2\",\"L4/5_IT_2\", \"L5_IT_2\", \"L6_IT_2\")\nseu &lt;- subset(Adult.IT.PT.barcode, cells=colnames(Adult.IT.PT.barcode)[which(Adult.IT.PT.barcode$SubType %in% IT_SubType)])\nmat &lt;- matrix(nrow = 2, ncol = length(IT_SubType))\nrownames(mat) &lt;- c(\"RSP-I\", \"BLA-I\")\ncolnames(mat) &lt;- IT_SubType\n\nfor (i in 1:2){\n  mat[i,] &lt;- as.numeric(table(seu$SubType[which(seu@meta.data[,rownames(mat)[i]]&gt;0)])[IT_SubType])\n}\nmat &lt;- mat/rowSums(mat)\nmat &lt;- as.data.frame(mat)\nmat$Target &lt;- rownames(mat)\n\nlinks &lt;- pivot_longer(mat, !Target, names_to = \"SubType\", values_to = \"value\")\ncolnames(links) &lt;- c('target', 'source', 'value')\n\nlinks &lt;- links[which(links$value != 0),]\nnodes &lt;- c(IT_SubType,\"RSP-I\",\"BLA-I\")\nnodes &lt;- data.frame(name=nodes)\nnodes$index &lt;- 0:(nrow(nodes) - 1)\nlinks &lt;- merge(links, nodes, by.x=\"source\", by.y=\"name\")\nlinks &lt;- merge(links, nodes, by.x=\"target\", by.y=\"name\")\nnames(links) &lt;- c(\"target\",\"source\",\"Value\",\"IDsource\",\"IDtarget\")\n\nnodes.colour &lt;- c(\n  \"L2/3_IT_1\"='#ffd600',\"L4/5_IT_1\"='#ff6d00',\"L5_IT_1\"='#0091ea',\"L6_IT_1\"='#c51162',\"L2/3_IT_2\"='#ffff8d',\"L4/5_IT_2\"='#ffd180',\"L5_IT_2\"='#80d8ff',\"L6_IT_2\"='#ff80ab','RSP-I'=\"#1f77b4\", 'BLA-I'=\"#ff7f0e\")\npastecolor &lt;- paste('d3.scaleOrdinal() .domain([\"', nodes$name[1], sep = '')\nfor (i in 2:length(nodes$name)){\n  pastecolor &lt;- paste(pastecolor, '\", \"', nodes$name[i], sep = '')\n}\npastecolor &lt;- paste(pastecolor, '\"]) .range([\"', sep = '')\npastecolor &lt;- paste(pastecolor, nodes.colour[1], sep = '')\nfor (i in 2:length(nodes.colour)){\n  pastecolor &lt;- paste(pastecolor,'\", \"', nodes.colour[i], sep = '')\n  }\npastecolor &lt;- paste(pastecolor,'\"])', sep = '')\ncolourScale &lt;- pastecolor\n\n\nlinks$Group &lt;- links$target\nlinks$Group &lt;- as.factor(links$Group)\ncolnames(links) &lt;- c(\"source\", \"target\", \"Value\", \"IDtarget\", \"IDsource\", \"Group\")\n\nFigure2_E &lt;- \n  sankeyNetwork(Links=links, Nodes=nodes, Source=\"IDsource\", Target=\"IDtarget\",\n              Value=\"Value\", NodeID=\"name\", fontSize=20,\n              nodeWidth=30, nodePadding=10, margin=NULL,\n              height=600, width=400, sinksRight=TRUE,\n              colourScale=colourScale, LinkGroup=\"Group\",iterations=0)\nFigure2_E\n\n\n\n\n\n\n\n\nCode\nsaveNetwork(Figure_2L,\"../pdf/Figure2/Figure2_E/Figure2_E.html\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Figure2</span>"
    ]
  },
  {
    "objectID": "Figure2.html#figure2_f",
    "href": "Figure2.html#figure2_f",
    "title": "2  Figure2",
    "section": "2.6 Figure2_F",
    "text": "2.6 Figure2_F\n\n\nCode\n#seu &lt;- Adult.IT.PT.barcode\n#BLA_I &lt;- colnames(seu)[which(seu$`BLA-I`&gt;0 & seu$`RSP-I`==0)]\n#RSP_I &lt;- colnames(seu)[which(seu$`RSP-I`&gt;0 & seu$`BLA-I`==0)]\n#DEGs &lt;- FindMarkers(seu, ident.1 = BLA_I, ident.2 = RSP_I, logfc.threshold = 0)\n#saveRDS(DEGs, '../data/rds/DEGs_BLA_VS_RSP.rds')\nDEGs &lt;- readRDS('../data/rds/DEGs_BLA_VS_RSP.rds')\n\n\n\n\nCode\nDEGs$label &lt;- \"\"\ntop5_gene &lt;- rownames(DEGs)[which(DEGs$avg_log2FC&gt;0.5 & DEGs$p_val_adj&lt;1e-2)]\nif(length(top5_gene)&gt;5){\n  top5_gene &lt;- top5_gene[1:10]\n  }\ndown5_gene &lt;- rownames(DEGs)[which(DEGs$avg_log2FC &lt; -0.5 &\n                                   DEGs$p_val_adj &lt; 1e-2)]\nif(length(down5_gene)&gt;5){\n  down5_gene &lt;- down5_gene[1:10]\n  }\n\n#top5_gene &lt;- c(top5_gene,\"Cnr1\")\n#down5_gene &lt;- c(down5_gene,\"Bdnf\")\n\nDEGs$label[match(top5_gene, rownames(DEGs))] &lt;- top5_gene\nDEGs$label[match(down5_gene, rownames(DEGs))] &lt;- down5_gene\nDEGs$Type &lt;- 'not significant'\nDEGs$Type[which(DEGs$avg_log2FC&gt;0.5 & DEGs$p_val_adj&lt;1e-2)] &lt;- \"Up\"\nDEGs$Type[which(DEGs$avg_log2FC &lt; -0.5 & DEGs$p_val_adj&lt;1e-2)] &lt;- \"Down\"\n  \nFigure2_F &lt;- \n  ggplot(DEGs, aes(x=avg_log2FC, y= -log10(p_val_adj))) +\n  geom_point(aes(color=Type), size=0.5) +\n  geom_vline(aes(xintercept=0.5), colour=\"black\", linetype=\"dashed\", \n               linewidth = 0.5) +\n    geom_vline(aes(xintercept = -0.5), colour=\"black\", linetype=\"dashed\", \n               linewidth = 0.5) +\n    geom_text_repel(aes(label=label, color=Type), size=3, max.overlaps=100) +\n    theme_classic() +\n    theme(plot.title = element_text(size = 20, hjust = 0.5),\n          text = element_text(size = 15), legend.position = \"none\") +\n    scale_color_manual(values = c(\"Up\"='#c82423', \"Down\"='#2878b5',\n                                  'not significant'='lightgray')) +\n    xlim(min(DEGs$avg_log2FC), max(DEGs$avg_log2FC)) +\n    ylim(0,100) +\n    labs(title = \"\", x = 'log2FC', y = '-log10(P value)')\nFigure2_F\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure2/Figure2_F.pdf\", plot = Figure2_F, \n       height = 3, width = 4, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Figure2</span>"
    ]
  },
  {
    "objectID": "Figure2.html#figure2_g",
    "href": "Figure2.html#figure2_g",
    "title": "2  Figure2",
    "section": "2.7 Figure2_G",
    "text": "2.7 Figure2_G\n\n\nCode\nknitr::include_graphics(\"images/Figure2_G.png\", dpi = 300)",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Figure2</span>"
    ]
  },
  {
    "objectID": "Figure2.html#figure2_h",
    "href": "Figure2.html#figure2_h",
    "title": "2  Figure2",
    "section": "2.8 Figure2_H",
    "text": "2.8 Figure2_H\n\n\nCode\nBarcode &lt;- c('VIS-I','SSp-I','CP-I','AUD-I','RSP-I',\n             'BLA-I','ACB-I','ENTl-I','AId-I','ECT-I',\n             'ACB-C','PL-C','ECT-C','ENTl-C',\n             'BLA-C','CP-C','AId-C','RSP-C',\n             'MD-I','RE-I','DR-I','VTA-I','LHA-I','SC-I')\ncluster_order &lt;- c(1,14,17,22,23,25,26,27,28,29,31,\n                   7,8,9,10,15,16,18,19,20,21,\n                   2,3,11,12,13,24,30,32,33,\n                   4,5,6)\nEx_BC_mat &lt;- Adult.Ex.barcode@meta.data[,Barcode]\nEx_BC_mat[is.na(Ex_BC_mat)] &lt;- 0\nEx_BC_mat &lt;- scale(Ex_BC_mat)\nEx_BC_mat &lt;- Ex_BC_mat[Adult.Ex.barcode$BC_num &gt; 1,]\nset.seed(20240422)\numap_out &lt;- umap(Ex_BC_mat)\n\numap_result &lt;- as.data.frame(umap_out$layout)\ncolnames(umap_result) = c(\"UMAP_1\",\"UMAP_2\")\numap_result$Proj_subtype &lt;-\n  factor(Adult.Ex.barcode@meta.data[rownames(Ex_BC_mat),'Proj_subtype'],\n         levels = cluster_order)\nlabel &lt;- umap_result |&gt;\n  group_by(Proj_subtype) |&gt;\n  dplyr::summarise(UMAP_1 = median(UMAP_1), UMAP_2 = median(UMAP_2))\n\nFigure2_H &lt;- \n  ggplot(umap_result, aes(UMAP_1, UMAP_2, color=Proj_subtype, fill=Proj_subtype)) + \n  geom_point(size=1, alpha=0.8) +\n  scale_color_manual(values = col_Proj_subtype) +\n  theme_dr(xlength = 0.2, ylength = 0.2,\n           arrow = grid::arrow(length = unit(0.1, \"inches\"),\n                               ends = 'last', type = \"closed\")) +\n  theme(panel.grid = element_blank()) +\n  guides(color = guide_legend(override.aes = list(size = 5))) +\n  coord_fixed()\n\nFigure2_H\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure2/Figure2_H.pdf\", plot = Figure2_H, \n       height = 5, width = 6, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Figure2</span>"
    ]
  },
  {
    "objectID": "Figure2.html#figure2_i",
    "href": "Figure2.html#figure2_i",
    "title": "2  Figure2",
    "section": "2.9 Figure2_I",
    "text": "2.9 Figure2_I\n\n\nCode\nbg3d(color = \"white\")\n#bg3d(color = \"black\")\npar3d(userMatrix = rotationMatrix(-pi/6, -1, 1, 0), zoom = 0.6)\nacr.list &lt;- c(\"MOs\",\"PL\",\"ORBm\",\"ACAd\",\"ILA\",\"DP\",\"ACAv\")\n\nfor(acr in acr.list){\n  mesh &lt;- mesh3d.allen.annot.from.id(id.from.acronym(acr))\n  #to.del &lt;- which(mesh$vb[1,] &lt; 0)\n  to.del &lt;- NA\n  mesh$it &lt;- mesh$it[,!is.element(mesh$it[1,], to.del) & !is.element(mesh$it[2,], to.del) & !is.element(mesh$it[3,], to.del)]\n  #col &lt;- color.from.acronym(acr)\n  col &lt;- \"lightgray\"\n  #col &lt;- col_Region[acr]\n  wire3d(mesh, col = col, material = list(lit=FALSE), alpha = 0.2)\n}\n\ndf_plot &lt;- sp.PFC@meta.data\nfor (i in c(4)){\n  idx_cluster = rownames(df_plot)[which(\n    df_plot$Proj_module==names(col_Proj_module)[i]\n    )]\n  spheres3d(x = df_plot[idx_cluster,]$ML_new, \n            y = df_plot[idx_cluster,]$DV_new,\n            z = df_plot[idx_cluster,]$AP_new,\n            col = col_Proj_module[i], radius=0.01, alpha=1)\n}\n\nrgl.snapshot('../pdf/Figure2/Figure2_I/PTi_white.png', top = TRUE)\n\n\n\n\nCode\nknitr::include_graphics(\"images/Figure2_I.png\", dpi = 300)",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Figure2</span>"
    ]
  },
  {
    "objectID": "Figure2.html#figure2_j",
    "href": "Figure2.html#figure2_j",
    "title": "2  Figure2",
    "section": "2.10 Figure2_J",
    "text": "2.10 Figure2_J\n\n\nCode\nseu &lt;- Adult.IT.PT.barcode\ncluster_order &lt;- c('L2/3_IT_1', 'L4/5_IT_1', 'L5_IT_1', 'L6_IT_1', \n                   'L2/3_IT_2', 'L4/5_IT_2','L5_IT_2', 'L6_IT_2',\n                   'L5_PT_1',  'L5_PT_2')\nseu$Ex_finetype &lt;- factor(seu$SubType, levels = cluster_order)\nseu$Proj_module &lt;- factor(seu$Proj_module, \n                          levels = c(\"ITi-D\",\"ITi-V\",\"ITc\",\"PTi\"))\ndf &lt;- table(seu$Proj_module, seu$Ex_finetype)\ndf_norm &lt;- as.data.frame(apply(df,2,function(x){x/sum(x)}))\ndf_norm$Type &lt;- rownames(df_norm)\ndf_norm_long &lt;- \n  df_norm |&gt;\n  pivot_longer(!Type, names_to = \"Cluster\", values_to = \"Value\")\n\ndf_norm_long$Cluster &lt;- factor(\n  df_norm_long$Cluster, \n  levels = cluster_order)\ndf_norm_long$Type &lt;- factor(df_norm_long$Type, \n                            levels = c(\"ITi-D\",\"ITi-V\",\"ITc\",\"PTi\"))\n\nlabel &lt;- round(df_norm_long$Value,2)\nlabel[which(label&lt;0.05)] &lt;- ''\nFigure2_J &lt;- \n  ggplot(df_norm_long, aes(x = Cluster, y = Value, fill = Type)) + \n  geom_bar(stat = \"identity\", width = 0.7) +\n  scale_fill_manual(values = col_Proj_module) +\n  geom_text(label = label, color = \"black\", size = 3,\n            position = position_stack(0.5)) +\n  labs(x='', y='', title='') +\n  theme_classic() +\n  theme(panel.grid = element_blank(),\n        text = element_text(size = 12),\n        axis.text.x = element_text(angle = 45, hjust = 1),\n        legend.title = element_blank(),\n        legend.key.size = unit(1, \"cm\"))\nFigure2_J\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure2/Figure2_J.pdf\", plot = Figure2_J, \n       height = 4, width = 6, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Figure2</span>"
    ]
  },
  {
    "objectID": "Figure2.html#figure2_k",
    "href": "Figure2.html#figure2_k",
    "title": "2  Figure2",
    "section": "2.11 Figure2_K",
    "text": "2.11 Figure2_K\n\n\nCode\nseu &lt;- subset(sp.PFC, cells = colnames(sp.PFC)[which(sp.PFC$ABA_hemisphere == \"Left\")])\n\nseu$D_V_enrich &lt;- \"other\"\nseu$D_V_enrich[which(seu$SubType %in% c(\"L2/3_IT_1\", \"L4/5_IT_1\", \"L5_IT_1\", \"L6_IT_1\"))] &lt;- \"dmPFC-enrich IT\"\nseu$D_V_enrich[which(seu$SubType %in% c(\"L2/3_IT_2\", \"L4/5_IT_2\", \"L5_IT_2\", \"L6_IT_2\"))] &lt;- \"vmPFC-enrich IT\"\n\ndf &lt;- seu@meta.data[which(seu$slice==\"IT_slice_15\" & seu$D_V_enrich != \"other\"),\n                    c(\"ML_new\", \"DV_new\",\"D_V_enrich\")]\n\nFigure2_K_1 &lt;- \n  ggplot(df) +\n  geom_point_blur(data = df[which(df$D_V_enrich==\"vmPFC-enrich IT\"),], \n             aes(x=ML_new, y=DV_new),\n             color=\"#fe02fd\", size=2) +\n  geom_point_blur(data = df[which(df$D_V_enrich==\"dmPFC-enrich IT\"),], \n             aes(x=ML_new, y=DV_new),\n             color=\"#02ffff\", size=2) +\n  ggdark::dark_theme_void() +\n  coord_fixed() +\n  theme(plot.title = element_text(size = 20, hjust = 0.5))\nFigure2_K_1\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure2/Figure2_K_1.png\", plot = Figure2_K_1, \n       height = 8, width = 4.58, units = \"in\")\n\n\n\n\nCode\nseu &lt;- subset(sp.PFC, cells = colnames(sp.PFC)[which(sp.PFC$ABA_hemisphere == \"Left\")])\n\ndf &lt;- seu@meta.data[which(seu$slice==\"IT_slice_15\" & seu$Proj_module %in% c(\"ITi-V\",\"ITi-D\")), c(\"ML_new\", \"DV_new\",\"Proj_module\")]\n\nFigure2_K_2 &lt;- \n  ggplot(df) +\n  geom_point_blur(data = df[which(df$Proj_module==\"ITi-V\"),], \n             aes(x=ML_new, y=DV_new),\n             color=\"#ff7f0e\", size=2) +\n  geom_point_blur(data = df[which(df$Proj_module==\"ITi-D\"),], \n             aes(x=ML_new, y=DV_new),\n             color=\"#1f77b4\", size=2) +\n  ggdark::dark_theme_void() +\n  coord_fixed() +\n  theme(plot.title = element_text(size = 20, hjust = 0.5))\nFigure2_K_2\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure2/Figure2_K_2.png\", plot = Figure2_K_2, \n       height = 8, width = 4.39, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Figure2</span>"
    ]
  },
  {
    "objectID": "Figure2.html#figure2_l",
    "href": "Figure2.html#figure2_l",
    "title": "2  Figure2",
    "section": "2.12 Figure2_L",
    "text": "2.12 Figure2_L\n\n\nCode\nseu &lt;- subset(sp.PFC, cells = colnames(sp.PFC)[which(sp.PFC$ABA_hemisphere == \"Left\")])\n\nseu$D_V_enrich &lt;- \"other\"\nseu$D_V_enrich[which(seu$SubType %in% c(\"L2/3_IT_1\", \"L4/5_IT_1\", \"L5_IT_1\", \"L6_IT_1\"))] &lt;- \"dmPFC-enrich cluster\"\nseu$D_V_enrich[which(seu$SubType %in% c(\"L2/3_IT_2\", \"L4/5_IT_2\", \"L5_IT_2\", \"L6_IT_2\"))] &lt;- \"vmPFC-enrich cluster\"\n\nbc_slice &lt;- seu@meta.data[\n  which(seu$D_V_enrich !=\"other\" & seu$Proj_module %in% c(\"ITi-D\",\"ITi-V\")),\n  c(\"D_V_enrich\",\"Proj_module\", 'Y')]\nbc_slice &lt;- \n  bc_slice |&gt;\n  mutate(bin = cut(Y, breaks = 36))\nbin &lt;- sort(unique(bc_slice$bin))\nbc_slice$bin_index &lt;- match(bc_slice$bin, bin)\n\n\ndf &lt;- data.frame('bin_index'=c(1:36))\nfor (i in 1:36){\n  df$`dmPFC-enrich-cluster`[i] &lt;- length(which(bc_slice$bin_index==i & bc_slice$D_V_enrich==\"dmPFC-enrich cluster\"))/\n    length(which(bc_slice$bin_index==i))\n  df$`vmPFC-enrich-cluster`[i] &lt;- length(which(bc_slice$bin_index==i & bc_slice$D_V_enrich==\"vmPFC-enrich cluster\"))/\n    length(which(bc_slice$bin_index==i))\n  df$`ITi-D`[i] &lt;- length(which(bc_slice$bin_index==i & bc_slice$Proj_module==\"ITi-D\"))/\n    length(which(bc_slice$bin_index==i))\n    df$`ITi-V`[i] &lt;- length(which(bc_slice$bin_index==i & bc_slice$Proj_module==\"ITi-V\"))/\n    length(which(bc_slice$bin_index==i))\n}\ndf$x &lt;- c(1:36)\ndf &lt;- pivot_longer(df, 2:5, names_to = \"type\", values_to = \"value\")\ndf$type &lt;- factor(df$type, levels = c(\"dmPFC-enrich-cluster\",\"vmPFC-enrich-cluster\",\"ITi-D\",\"ITi-V\"))\n\nFigure2_L &lt;- \n  ggplot(df, aes(x=x, y=value, color=type)) +\n  #geom_line(color=\"#D595A7FF\",size=1) +\n  geom_point(alpha=0.5, size=3) +\n  geom_smooth(se = F, linewidth=1.5) +\n  theme_bw() +\n  scale_x_continuous(breaks = seq(0,35,5)) +\n  scale_color_manual(values = c(\"dmPFC-enrich-cluster\"=\"#02ffff\",\n                                \"vmPFC-enrich-cluster\"=\"#fe02fd\",\n                                \"ITi-D\"=\"#1f77b4\",\n                                \"ITi-V\"=\"#ff7f0e\")) +\n  theme(text = element_text(size=15),  legend.position = \"none\",\n        plot.title = element_text(size = 20, hjust = 0.5)) +\n  labs(x='D → V',y='Cell proportion') +\n  xlim(36, 0)\nFigure2_L\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure2/Figure2_L.pdf\", plot = Figure2_L, \n       height = 3, width = 6, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Figure2</span>"
    ]
  },
  {
    "objectID": "Figure3.html",
    "href": "Figure3.html",
    "title": "3  Figure3",
    "section": "",
    "text": "3.1 Figure3_A\nCode\n# scRNAseq projection motifs\nBarcode &lt;- c('VIS-I','SSp-I','CP-I','AUD-I','RSP-I',\n             'BLA-I','ACB-I','AId-I','ECT-I',\n             'ACB-C','ECT-C',\n             'CP-C','AId-C','RSP-C',\n             'LHA-I')\nseu &lt;- Adult.IT.PT.barcode\nseu$BC_motif &lt;- apply(seu@meta.data[,Barcode], 1, function(x){\n  paste(names(x)[which(x&gt;0)], collapse = ',')\n})\n\nsc_motif &lt;- table(seu$BC_motif)\nsc_motif &lt;- sc_motif[order(sc_motif, decreasing = T)]\nsc_motif &lt;- sc_motif[which(sc_motif&gt;=10 & names(sc_motif) != \"\")]\nsc_seu &lt;- subset(seu, cells=colnames(seu)[which(seu$BC_motif %in% names(sc_motif))])\n\n# spatial projection motifs\nseu &lt;- sp.PFC.Left.ITPT.barcode\nseu$BC_motif &lt;- apply(seu@meta.data[,Barcode], 1, function(x){\n  paste(names(x)[which(x&gt;0)], collapse = ',')\n})\nsp_motif &lt;- table(seu$BC_motif)\nsp_motif &lt;- sp_motif[order(sp_motif, decreasing = T)]\nsp_motif &lt;- sp_motif[which(sp_motif&gt;=10)]\nsp_seu &lt;- subset(seu, cells=colnames(seu)[which(seu$BC_motif %in% names(sp_motif))])\n\n\n# scRNAseq and spatial common projection motifs\ntop50_motif &lt;- names(sc_motif)\ntop50_motif &lt;- top50_motif[which(top50_motif %in% unique(sp_seu$BC_motif))]\ntop50_motif &lt;- top50_motif[1:50]\nsc_seu &lt;- subset(sc_seu, cells=colnames(sc_seu)[which(sc_seu$BC_motif %in% top50_motif)])\nsp_seu &lt;- subset(sp_seu, cells=colnames(sp_seu)[which(sp_seu$BC_motif %in% top50_motif)])\n\n# motifs sort by transcriptome subtype\ndf_transcriptom &lt;- as.data.frame.array(table(sc_seu$BC_motif, sc_seu$SubType))\ndf_transcriptom &lt;- df_transcriptom/rowSums(df_transcriptom)\ndf_order &lt;- data.frame(\n  \"motifs\" = rownames(df_transcriptom),\n  \"max_subtype\" = apply(df_transcriptom, 1, function(x){\n    colnames(df_transcriptom)[which.max(x)]\n  }),\n  \"max_value\" = apply(df_transcriptom, 1, function(x){\n    max(x)\n  })\n)\ndf_order$max_subtype &lt;- factor(\n  df_order$max_subtype, \n  levels = c(\"L2/3_IT_1\",\"L2/3_IT_2\",\"L4/5_IT_1\",\"L4/5_IT_2\",\"L5_IT_1\",\"L5_IT_2\",\n             \"L6_IT_1\",\"L6_IT_2\",\"L5_PT_1\",\"L5_PT_2\"))\ndf_order &lt;- arrange(df_order, max_subtype, desc(max_value))\nmotifs_order &lt;- df_order$motifs\n\nsp_seu$BC_motif &lt;- factor(sp_seu$BC_motif, levels = motifs_order)\ndf_spatial &lt;- as.data.frame.array(table(sp_seu$BC_motif, sp_seu$ABA_metaRegion))\ndf_spatial &lt;- df_spatial/rowSums(df_spatial)\nCode\n# projectom plot\nBarcode_use &lt;- c('VIS-I','SSp-I','CP-I','RSP-I',\n             'BLA-I','ACB-I','AId-I','ECT-I',\n             'ACB-C',\n             'CP-C','AId-C',\n             'LHA-I')\nmat &lt;- matrix(0, nrow = length(Barcode_use), ncol = length(motifs_order))\nrownames(mat) &lt;- Barcode_use\ncolnames(mat) &lt;- motifs_order\n\nfor (j in 1:ncol(mat)){\n  for (i in 1:nrow(mat)){\n    if (rownames(mat)[i] %in% strsplit(colnames(mat)[j],',')[[1]]){\n      mat[i,j] &lt;- 1\n    }\n  }\n}\n\ndf1 &lt;- data.frame(\n  'X'=rep(colnames(mat), each=nrow(mat)),\n  'Y'=rep(rownames(mat), ncol(mat)),\n  'value'=as.vector(mat)\n  )\ndf1$value &lt;- factor(df1$value, levels = c(0,1))\n#df1$X &lt;- factor(df1$X, levels = colnames(mat))\ndf1$Y &lt;- factor(df1$Y, levels = rev(Barcode_use))\n\ndf1 &lt;- df1[which(df1$X %in% motifs_order),]\ndf1$X &lt;- factor(df1$X, levels = motifs_order)\n\np1 &lt;- ggplot(df1) +\n  geom_point(aes(x=X, y=Y, colour=value), size=3.8) +\n  theme_minimal() +\n  scale_color_manual(values = c('#d7d8da','black')) +\n  labs(x='', y='Projectome') +\n  theme(panel.grid=element_blank(), plot.margin = margin(0,0,0,0),\n        axis.ticks.x=element_blank(), axis.text.x = element_blank(),\n        plot.title = element_blank(), legend.position = \"none\")\nCode\n# spatial plot\n\ndf_spatial$motifs &lt;- rownames(df_spatial)\ndf2 &lt;- pivot_longer(df_spatial, !motifs, names_to = \"Region\", values_to = \"Value\")\nRegion &lt;- c(\"MOs\",\"ILA\",\"PL\",\"ACAd\",\"ORBm\",\"ACAv\", \"DP\")\n\ndf2$Value[is.nan(df2$Value)] &lt;- 0\ndf2$motifs &lt;- factor(df2$motifs, levels = motifs_order)\ndf2$Region &lt;- factor(df2$Region, levels = c(\"MOs\",\"ACAd\",\"ACAv\",\"PL\",\"ORBm\",\"ILA\",\"DP\"))\n\np2 &lt;- \n  ggplot(df2, aes(x = motifs, y = Value, fill = Region)) + \n  geom_bar(stat = \"identity\", width = 0.7) +\n  scale_fill_manual(values = col_subreagion) +\n  labs(x='', y='', title='') +\n  theme_classic() +\n  theme(panel.grid=element_blank(), plot.margin = margin(0,0,0,0),\n        axis.text.x = element_blank(), \n        axis.ticks.x = element_blank(),\n        #axis.text.x = element_text(angle = 45, hjust = 1, size = 6),\n        plot.title = element_blank()) +\n  labs(y=\"Spatial region\")\nCode\n# Transcriptom plot\n\nSubType &lt;- c(\"L2/3_IT_1\",\"L2/3_IT_2\",\"L4/5_IT_1\",\"L4/5_IT_2\",\"L5_IT_1\",\n             \"L5_IT_2\",\"L6_IT_1\",\"L6_IT_2\",\"L5_PT_1\",\"L5_PT_2\")\ndf3 &lt;- df_transcriptom\ndf3$motifs &lt;- rownames(df3)\ndf3_long &lt;- pivot_longer(df3, !motifs, names_to = \"SubType\",\n                    values_to = \"Value\")\ndf3_long$motifs &lt;- factor(df3_long$motifs, levels = motifs_order)\ndf3_long$SubType &lt;- factor(df3_long$SubType, levels = rev(SubType))\ndf3_long$label &lt;- \"\"\ndf3_long$label[which(df3_long$Value&gt;0.25)] &lt;- \"*\"\n\nbreaks &lt;- seq(0,0.5,0.01)\np3 &lt;- ggplot(df3_long, aes(x=motifs, y=SubType, fill=Value)) +\n  geom_raster() +\n  geom_text(aes(label=label),col =\"black\",size = 5) +\n  scale_fill_gradientn(limits=c(0,0.5), colours = colorRampPalette(c(\"navy\",\"white\",\"firebrick3\"))(100), na.value=\"firebrick3\") +\n  theme_bw() +\n  theme(axis.text.x = element_blank(), \n        axis.ticks.x = element_blank(),\n        panel.grid = element_blank(),\n        panel.border = element_rect(color = \"black\", linewidth = 1)) +\n  labs(x=\"\", y=\"Transcriptome\")\nCode\nFigure3_A &lt;- \n  p3 %&gt;%\n  insert_top(p1, height=1.3) %&gt;%\n  insert_bottom(p2, height=0.8)\n\nFigure3_A\nCode\nggsave(\"../pdf/Figure3/Figure3_A.pdf\", plot = Figure3_A,\n       height = 5, width = 12, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Figure3</span>"
    ]
  },
  {
    "objectID": "Figure3.html#figure3_b",
    "href": "Figure3.html#figure3_b",
    "title": "3  Figure3",
    "section": "3.2 Figure3_B",
    "text": "3.2 Figure3_B\n\n\nCode\nseu &lt;- subset(\n  Adult.Ex, \n  cells=colnames(Adult.Ex)[which(Adult.Ex$Ex_subtype==\"IT\" &\n                                 Adult.Ex$BC_num&gt;0)])\n\nseu$group &lt;- \"Other\"\nseu$group[which(seu$`AId-I`&gt;0 & seu$`ACB-I`&gt;0 & seu$`BLA-I`&gt;0 & seu$BC_num==3)] &lt;- \"AId-I + ACB-I + BLA-I\"\nseu$group[which(seu$`AId-I`&gt;0 & seu$`ACB-I`&gt;0 & seu$BC_num==2)] &lt;- \"AId-I + ACB-I\"\nseu$group[which(seu$`AId-I`&gt;0 & seu$`ACB-I`&gt;0 & seu$`CP-I`&gt;0 & seu$BC_num==3)] &lt;- \"AId-I + ACB-I + CP-I\"\nseu$group[which(seu$`AId-I`&gt;0 & seu$`ACB-I`&gt;0 & seu$`CP-I`&gt;0 & seu$`ACB-C`&gt;0 & seu$`CP-C`&gt;0 & seu$`AId-C`&gt;0 & seu$BC_num==6)] &lt;- \"AId-I,ACB-I,CP-I,AId-C,ACB-C,CP-C\"\nseu$group[which(seu$`AId-I`&gt;0 & seu$`CP-I`&gt;0 & seu$BC_num==2)] &lt;- \"AId-I + CP-I\"\n\nseu$group &lt;- factor(seu$group, levels = c(\"AId-I + ACB-I + BLA-I\",\"AId-I + ACB-I\",\"AId-I + ACB-I + CP-I\",\"AId-I,ACB-I,CP-I,AId-C,ACB-C,CP-C\",\"AId-I + CP-I\",\"Other\"))\n\n#Idents(seu) &lt;- \"group\"\n#DEGs &lt;- FindAllMarkers(seu, logfc.threshold = 0.1, min.pct = 0.1, only.pos = T)\n#DEGs$Group &lt;- \"not\"\n#DEGs$Group[which(DEGs$avg_log2FC&gt;0.5 & DEGs$p_val_adj &lt; 0.01)] &lt;- \"Up\"\n#DEGs &lt;- DEGs[which(DEGs$cluster != \"Other\"),]\n#saveRDS(DEGs, '../data/rds/DEGs_AId_motifs.rds')\nDEGs &lt;- readRDS('../data/rds/DEGs_AId_motifs.rds')\n\n\n\n\nCode\nFigure3_B_1 &lt;- \n  jjVolcano(diffData = DEGs,\n          #myMarkers = mygene,\n          topGeneN = 3,\n          tile.col = rep(\"lightgray\",6),\n          aesCol = c(\"navy\",\"firebrick3\"),\n          angle=0,\n          size=3,\n          pSize=1.5,\n          log2FC.cutoff = 0.1,\n          fontface = 'italic',\n          legend.position = c(0.8,0.2),\n          flip = F,\n          min.segment.length = 0) +\n  theme(legend.position = \"none\")\nFigure3_B_1\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure3/Figure3_B_1.pdf\", plot = Figure3_B_1,\n       height = 4, width = 12, units = \"in\")\n\n\n\n\nCode\nseu &lt;- sp_seu\ndf &lt;- seu@meta.data[,c(\"ML_new\",\"DV_new\",\"slice\",\"BC_motif\")]\n# \"BLA-I,ACB-I,AId-I\"  \"ACB-I,AId-I\"  \"CP-I,ACB-I,AId-I \"  \"CP-I,ACB-I,AId-I,ACB-C,CP-C,AId-C\"  \"CP-I,AId-I\"\ndf_motif &lt;- df[which(df$BC_motif==\"BLA-I,ACB-I,AId-I\"),]\n\nrf &lt;- colorRampPalette(rev(brewer.pal(11,'Spectral')))\ncolormap &lt;- colorRampPalette(rev(brewer.pal(11,'Spectral')))(85)\n\nFigure3_B_2 &lt;- \n  ggplot(df, aes(ML_new, DV_new)) +\n  geom_point(color=\"black\", size=1) +\n  stat_density2d(data=df_motif, geom = \"raster\", \n                 aes(fill = ..density..), \n                 contour = FALSE,na.rm = TRUE) +\n  scale_fill_gradientn(colours = c(rep(\"transparent\",15),colormap)) +\n  theme_void() +\n  #theme(legend.position = \"none\") +\n  ylim(-5,0) +\n  xlim(0,3) +\n  coord_fixed()\nFigure3_B_2\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure3/Figure3_B_2/BLA-I,ACB-I,AId-I.pdf\", plot = Figure3_B_2,\n       height = 6, width = 6, units = \"in\", bg=\"transparent\")\n\n\n\n\nCode\nAId_motif &lt;- c(\"BLA-I,ACB-I,AId-I\",\"ACB-I,AId-I\",\"CP-I,ACB-I,AId-I\",\n               \"CP-I,ACB-I,AId-I,ACB-C,CP-C,AId-C\",\"CP-I,AId-I\")\nseu &lt;- subset(sp_seu, cells = colnames(sp_seu)[which(sp_seu$BC_motif %in% AId_motif)])\nseu$ABA_metaRegion &lt;- factor(\n  seu$ABA_metaRegion, \n  levels = c(\"MOs\",\"ACAd\",\"ACAv\",\"PL\",\"ORBm\",\"ILA\",\"DP\"))\nmat &lt;- table(seu$BC_motif, seu$ABA_metaRegion)\nmat &lt;- t(apply(mat, 1, function(x){(x-min(x))/(max(x)-min(x))}))\nmat &lt;- mat[AId_motif,]\nmat &lt;- as_tibble(mat, rownames = \"group\")\n\nplist &lt;- list()\nfor (i in 1:length(AId_motif)){\n  plist[[i]] &lt;- \n    ggradar(mat[i,], fill = T,\n        group.point.size = 2, group.line.width = 0.5,\n        background.circle.colour = \"white\", \n        group.colours = \"blue\") +\n    theme(plot.title = element_text(hjust=0.5))\n}\nFigure3_B_3 &lt;- plot_grid(plotlist=plist, ncol=5)\nFigure3_B_3\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure3/Figure3_B_3.pdf\", plot = Figure3_B_3,\n       height = 3, width = 16, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Figure3</span>"
    ]
  },
  {
    "objectID": "Figure3.html#figure3_c",
    "href": "Figure3.html#figure3_c",
    "title": "3  Figure3",
    "section": "3.3 Figure3_C",
    "text": "3.3 Figure3_C\n\n\nCode\nknitr::include_graphics(\"images/Figure3_C.png\", dpi = 300)",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Figure3</span>"
    ]
  },
  {
    "objectID": "Figure3.html#figure3_d",
    "href": "Figure3.html#figure3_d",
    "title": "3  Figure3",
    "section": "3.4 Figure3_D",
    "text": "3.4 Figure3_D\n\n\nCode\nbg3d(color = \"white\")\n#bg3d(color = \"black\")\npar3d(userMatrix = rotationMatrix(0, 0, 0, 0), zoom = 0.7)\nacr.list &lt;- c(\"MOs\",\"PL\",\"ORBm\",\"ACAd\",\"ILA\",\"DP\",\"ACAv\")\n\nfor(acr in acr.list){\n  mesh &lt;- mesh3d.allen.annot.from.id(id.from.acronym(acr))\n  to.del &lt;- which(mesh$vb[1,] &lt; 0)\n  #to.del &lt;- NA\n  mesh$it &lt;- mesh$it[,!is.element(mesh$it[1,], to.del) & !is.element(mesh$it[2,], to.del) & !is.element(mesh$it[3,], to.del)]\n  #col &lt;- color.from.acronym(acr)\n  col &lt;- \"lightgray\"\n  #col &lt;- col_Region[acr]\n  wire3d(mesh, col = col, material = list(lit=FALSE), alpha = 0.2)\n  #shade3d(mesh, col = col, material = list(lit=FALSE), alpha = 0.2)\n}\n\nbarcode &lt;- c(\"VIS-I\",\"ACB-I\",\"CP-C\",\"AId-I\",\"CP-I\",\"ECT-C\",\"AId-C\",\"ECT-I\",\n             \"BLA-I\",\"AUD-I\",\"RSP-C\",\"SSp-I\",\"RSP-I\",\"ACB-C\",\"LHA-I\")\ncortex &lt;- c(\"VIS-I\",\"AId-I\",\"ECT-C\",\"AId-C\",\"ECT-I\",\n             \"BLA-I\",\"AUD-I\",\"RSP-C\",\"SSp-I\",\"RSP-I\")\ndf_plot &lt;- sp.PFC@meta.data\ndf_plot &lt;- df_plot[df_plot$ABA_hemisphere==\"Left\" & df_plot$BC_num&gt;0,]\ndf_plot$group &lt;- \"\"\ndf_plot$group[which(df_plot$`ACB-I`&gt;0 & df_plot$`CP-I`==0 &\n                    rowSums(df_plot[,cortex],na.rm = T)&gt;0)] &lt;- \"ACB-I + cortex\"\ndf_plot$group[which(df_plot$`ACB-I`==0 & df_plot$`CP-I`&gt;0 &\n                    rowSums(df_plot[,cortex],na.rm = T)&gt;0)] &lt;- \"CP-I + cortex\"\ndf_plot$group[which(df_plot$`ACB-I`&gt;0 & df_plot$`CP-I`&gt;0 &\n                    rowSums(df_plot[,cortex],na.rm = T)&gt;0)] &lt;- \"ACB-I + CP-I + cortex\"\n\nproj_type &lt;- c(\"CP-I + cortex\", \"ACB-I + cortex\", \"ACB-I + CP-I + cortex\")\ncol &lt;- c(\"red\",\"green\",\"blue\")\nfor (i in c(1:3)){\n  idx_cluster = rownames(df_plot)[which(\n    df_plot$group==proj_type[i]\n    )]\n  spheres3d(x = df_plot[idx_cluster,]$ML_new, \n            y = df_plot[idx_cluster,]$DV_new,\n            z = df_plot[idx_cluster,]$AP_new,\n            col = col[i], radius=0.01, alpha=1)\n}\n\nrgl.snapshot('../pdf/Figure3/Figure3_D_1.png', top = TRUE)\n\n\n\n\nCode\nknitr::include_graphics(\"images/Figure3_D_1.png\", dpi = 300)\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- df_plot[which(!df_plot$group==\"\"),]\nFigure3_D_2 &lt;- \n  ggplot(df, aes(DV_new)) +\n  geom_density(aes(fill = group), alpha = 0.6) +\n  scale_fill_manual(values = c(\"green\",\"blue\",\"red\")) +\n  labs(x=\"\",y=\"\") +\n  theme_classic() +\n  theme(legend.position = \"none\",\n        axis.line.y = element_blank(),axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),axis.text.x = element_blank(),\n        axis.ticks.x = element_blank())\nFigure3_D_2\n\n\n\n\nCode\nggsave(\"../pdf/Figure3/Figure3_D_2.pdf\", plot = Figure3_D_2,\n       height = 2, width = 8, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Figure3</span>"
    ]
  },
  {
    "objectID": "Figure3.html#figure3_e",
    "href": "Figure3.html#figure3_e",
    "title": "3  Figure3",
    "section": "3.5 Figure3_E",
    "text": "3.5 Figure3_E\n\n\nCode\ncortex &lt;- c('VIS-I','SSp-I','AUD-I','RSP-I',\n             'BLA-I','ENTl-I','AId-I','ECT-I',\n            'PL-C','ECT-C','ENTl-C','BLA-C','AId-C','RSP-C')\nstriatal &lt;- c('CP-I','ACB-I','ACB-C','CP-C')\n\nseu &lt;- Adult.IT.barcode\n\nseu$group &lt;- \"\"\nseu$group[which(seu$`ACB-I`&gt;0 & seu$`CP-I`==0 &\n                rowSums(seu@meta.data[,cortex],na.rm = T)&gt;0)] &lt;- \"ACB-I + cortex\"\nseu$group[which(seu$`ACB-I`==0 & seu$`CP-I`&gt;0 &\n                rowSums(seu@meta.data[,cortex],na.rm = T)&gt;0)] &lt;- \"CP-I + cortex\"\nseu$group[which(seu$`ACB-I`&gt;0 & seu$`CP-I`&gt;0 &\n                rowSums(seu@meta.data[,cortex],na.rm = T)&gt;0)] &lt;- \"ACB-I + CP-I + cortex\"\n\nIdents(seu) &lt;- \"group\"\nUMAP &lt;- seu@reductions$umap@cell.embeddings\nseu &lt;- subset(seu, cells = colnames(seu)[which(UMAP[,'UMAP_1']&lt;2 & UMAP[,'UMAP_2'] &gt; -3)])\ndf &lt;- data.frame(\n  \"UMAP_1\" = seu@reductions$umap@cell.embeddings[,\"UMAP_1\"],\n  \"UMAP_2\" = seu@reductions$umap@cell.embeddings[,\"UMAP_2\"],\n  \"Group\" = seu$group\n)\n\ngroup &lt;- c(\"CP-I + cortex\", \"ACB-I + CP-I + cortex\", \"ACB-I + cortex\")\ncol &lt;- c(\"#ff6666\",\"#6666ff\",\"#66ff66\")\ncol &lt;- c(\"red\",\"blue\",\"green\")\n\nplist &lt;- list()\nplist_legend &lt;- list()\nfor (i in 1:3){\n  df_i &lt;- df[which(df$Group == group[i]),]\n  plist[[i]] &lt;- \n    ggplot() +\n    geom_point(df, mapping = aes(x = UMAP_1, y = UMAP_2), color=\"lightgray\", size=1) +\n    geom_pointdensity(df_i, mapping = aes(x = UMAP_1, y = UMAP_2), size=1) +\n    #geom_point(df_i, mapping = aes(x = UMAP_1, y = UMAP_2), color=Value, size=0.5) +\n    scale_color_gradientn(colours = c(\"white\",col[i]),\n                          na.value = col[i],\n                          limits = c(0,50), \n                          breaks = c(0,50)\n                          ) +\n    coord_fixed() +\n    theme_void() +\n    labs(title = group[i], x=\"\", y=\"\", colour = \"\") +\n    theme(plot.title = element_text(hjust = 0.5),\n          axis.ticks = element_blank(), axis.text = element_blank(),\n          panel.grid = element_blank(),\n          legend.position = \"right\",\n          legend.key.width  = unit(0.5, \"lines\"),\n          legend.key.height = unit(2, \"lines\"))\n}\n\nFigure3_E &lt;- plot_grid(plotlist = plist, ncol = 3)\nFigure3_E\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure3/Figure3_E.pdf\", plot = Figure3_E,\n       height = 3, width = 15, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Figure3</span>"
    ]
  },
  {
    "objectID": "Figure3.html#figure3_f",
    "href": "Figure3.html#figure3_f",
    "title": "3  Figure3",
    "section": "3.6 Figure3_F",
    "text": "3.6 Figure3_F\n\n\nCode\ncortex &lt;- c('VIS-I','SSp-I','AUD-I','RSP-I',\n             'BLA-I','ENTl-I','AId-I','ECT-I',\n            'PL-C','ECT-C','ENTl-C','BLA-C','AId-C','RSP-C')\nstriatal &lt;- c('CP-I','ACB-I','ACB-C','CP-C')\nseu &lt;- subset(\n  Adult.Ex, \n  cells=colnames(Adult.Ex)[which(Adult.Ex$Ex_subtype==\"IT\" &\n                                 Adult.Ex$BC_num&gt;0)])\n\nseu$group &lt;- \"\"\nseu$group[which(seu$`ACB-I`&gt;0 & seu$`CP-I`==0 &\n                  rowSums(seu@meta.data[,cortex],na.rm = T)&gt;0)] &lt;- \"ACB-I + cortex\"\nseu$group[which(seu$`ACB-I`==0 & seu$`CP-I`&gt;0 &\n                    rowSums(seu@meta.data[,cortex],na.rm = T)&gt;0)] &lt;- \"CP-I + cortex\"\nseu$group[which(seu$`ACB-I`&gt;0 & seu$`CP-I`&gt;0 &\n                    rowSums(seu@meta.data[,cortex],na.rm = T)&gt;0)] &lt;- \"ACB-I + CP-I + cortex\"\nseu &lt;- subset(seu, cells=colnames(seu)[which(!seu$group==\"\")])\n\n#Idents(seu) &lt;- \"group\"\n#DEGs &lt;- FindAllMarkers(seu, logfc.threshold = 0.1, min.pct = 0.1, only.pos = T)\n#saveRDS(DEGs, '../data/rds/DEGs_ACB_CP_cortex.rds')\nDEGs &lt;- readRDS('../data/rds/DEGs_ACB_CP_cortex.rds')\n\n\n\n\nCode\nmygene &lt;- c('Cbln2','Ptn',\"Nnat\",\"Efnb3\",\"Cmss1\",\"Adamts9\")\nFigure3_F &lt;- \n  jjVolcano(diffData = DEGs,\n          myMarkers = mygene,\n          tile.col = c(\"#ff6666\",\"#6666ff\",\"#66ff66\"),\n          aesCol = c(\"navy\",\"firebrick3\"),\n          angle=90,\n          size=6,\n          pSize=1.5,\n          log2FC.cutoff = 0.1,\n          fontface = 'italic',\n          legend.position = c(0.8,0.2),\n          flip = F,\n          min.segment.length = 0) +\n  theme(legend.position = \"none\")\nFigure3_F\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure3/Figure3_F.pdf\", plot = Figure3_F,\n       height = 6, width = 6, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Figure3</span>"
    ]
  },
  {
    "objectID": "Figure3.html#figure3_g",
    "href": "Figure3.html#figure3_g",
    "title": "3  Figure3",
    "section": "3.7 Figure3_G",
    "text": "3.7 Figure3_G\n\n\nCode\nslice &lt;- 'IT_slice_15'\n# 'Cbln2','Ptn',\"Nnat\",\"Efnb3\"\ngene &lt;- 'Cbln2'\nlimits &lt;- c(0,3)\n\ndf &lt;- data.frame(\n  X = sp.PFC$X,\n  Y = sp.PFC$Y,\n  Zscore = scale(log1p(sp.PFC@assays$RNA@counts[gene,]))\n)\ndf &lt;- df[which(sp.PFC$slice==slice & sp.PFC$ABA_PFC=='PFC'),]\ndf$Zscore[df$Zscore&lt;limits[1]] &lt;- limits[1]\ndf$Zscore[df$Zscore&gt;limits[2]] &lt;- limits[2]\ndf &lt;- df[order(df$Zscore),]\nFigure3_G &lt;- \n  ggplot(df,aes(x=X,y=Y)) +\n  geom_point(aes(colour=Zscore), size=1) +\n  scale_color_gradientn(colours = viridis(n = 256, option = \"D\", direction = 1),\n                       limits = limits) +\n  ggdark::dark_theme_void() +\n  labs(title = gene) +\n  theme(plot.title = element_text(size = 20, hjust = 0.5)) +\n  coord_fixed()\nFigure3_G\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure3/Figure3_G/Cbln2.png\", plot = Figure3_G,\n       height = 4, width = 4.22, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Figure3</span>"
    ]
  },
  {
    "objectID": "Figure3.html#figure3_h",
    "href": "Figure3.html#figure3_h",
    "title": "3  Figure3",
    "section": "3.8 Figure3_H",
    "text": "3.8 Figure3_H\n\n\nCode\nsp_seu$BC_motif &lt;- as.character(sp_seu$BC_motif)\nspatial &lt;- sp_seu@meta.data[,c(\"ML_new\", \"DV_new\", \"AP_new\", \"BC_motif\")]\nspatial &lt;- \n  spatial |&gt;\n  group_by(BC_motif) |&gt;\n  dplyr::summarize(across(1:3, ~ mean(.x, na.rm = TRUE)))\n\ntranscriptom &lt;- as.data.frame(sc_seu@reductions$pca@cell.embeddings)\ntranscriptom$BC_motif &lt;- sc_seu$BC_motif\ntranscriptom &lt;- \n  transcriptom |&gt;\n  group_by(BC_motif) |&gt;\n  dplyr::summarize(across(1:50, ~ mean(.x, na.rm = TRUE)))\n\nprojectom &lt;- sc_seu@meta.data[,c(Barcode, \"BC_motif\")]\nprojectom &lt;- \n  projectom |&gt;\n  group_by(BC_motif) |&gt;\n  dplyr::summarize(across(1:15, ~ mean(.x, na.rm = TRUE))) |&gt;\n  mutate_all(~replace(., is.na(.), 0))\n\ndf &lt;- data.frame(\n  \"spatial\" = as.numeric(dist(spatial[,-1])),\n  \"transcriptom\" = as.numeric(dist(transcriptom[,-1])),\n  \"projectom\" = as.numeric(dist(projectom[,-1]))\n)\ndf_norm &lt;- as.data.frame(apply(df, 2, function(x){(x-min(x))/(max(x)-min(x))}))\n\n\n\n\nCode\ncor &lt;- cor.test(df_norm$spatial, df_norm$projectom, \"two.sided\", \"pearson\")\nR &lt;- round(cor$estimate,2)\nP &lt;- format(cor$p.value, digits = 2)\n\nFigure3_H &lt;- \n  ggplot(df_norm, aes(x=spatial, y=projectom)) +\n  #geom_point(size=0.5, color='black') +\n  geom_pointdensity(adjust = 1, size=1) +\n  geom_smooth(method = \"lm\", color='black', linewidth=0.5, se=F) +\n  scale_color_distiller(palette = \"Spectral\", direction = -1) +\n  theme_bw() +\n  theme(panel.grid = element_blank(), text = element_text(size = 15),\n        legend.position = \"none\") +\n  labs(x=\"spatial distance\", y=\"projectom distance\",\n       title = paste('R =',R,', P =',P,sep=' ')) +\n  ylim(0,1)\n\nFigure3_H\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure3/Figure3_H.pdf\", plot = Figure3_H, \n       height = 4, width = 4, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Figure3</span>"
    ]
  },
  {
    "objectID": "Figure3.html#figure3_i",
    "href": "Figure3.html#figure3_i",
    "title": "3  Figure3",
    "section": "3.9 Figure3_I",
    "text": "3.9 Figure3_I\n\n\nCode\ncor &lt;- cor.test(df_norm$transcriptom, df_norm$projectom, \"two.sided\", \"pearson\")\nR &lt;- round(cor$estimate,2)\nP &lt;- format(cor$p.value, digits = 2)\n\nFigure3_I &lt;- \n  ggplot(df_norm, aes(x=transcriptom, y=projectom)) +\n  #geom_point(size=0.5, color='black') +\n  geom_pointdensity(adjust = 1, size=1) +\n  geom_smooth(method = \"lm\", color='black', size=0.5, se=F) +\n  scale_color_distiller(palette = \"Spectral\", direction = -1) +\n  theme_bw() +\n  theme(panel.grid = element_blank(), text = element_text(size = 15),\n        legend.position = \"none\") +\n  labs(x=\"transcriptom distance\", y=\"projectom distance\",\n       title = paste('R =',R,', P =',P,sep=' ')) +\n  ylim(0,1)\nFigure3_I\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure3/Figure3_I.pdf\", plot = Figure3_I, \n       height = 4, width = 4, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Figure3</span>"
    ]
  },
  {
    "objectID": "Figure4.html",
    "href": "Figure4.html",
    "title": "4  Figure4",
    "section": "",
    "text": "4.1 Figure4_A\nCode\nBarcode_order &lt;- c('VIS-I','SSp-I','CP-I','RSP-I',\n                   'BLA-I','ACB-I','ENTl-I','AId-I','ECT-I',\n                   'ACB-C','PL-C','ECT-C','ENTl-C',\n                   'BLA-C','CP-C','AId-C','RSP-C',\n                   'MD-I','RE-I','DR-I','VTA-I','LHA-I')\nBarcode_order &lt;- Barcode_order[-match(\n  c('RSP-C','BLA-C','ECT-C','ENTl-C'),\n  Barcode_order)\n  ]\n#IT_D_BC &lt;- c('VIS-I','SSp-I','CP-I','AUD-I','RSP-I')\n#IT_V_BC &lt;- c('BLA-I','ACB-I','ENTl-I','AId-I','ECT-I')\n#Barcode_order &lt;- c(IT_D_BC, IT_V_BC)\nEx_BC_mat &lt;- Adult.Ex.barcode@meta.data[, Barcode_order]\nEx_BC_mat &lt;- Ex_BC_mat[rowSums(Ex_BC_mat, na.rm=T)&gt;0,]\n\n# Projection Motif Observed\nProj_motifs &lt;- as.character(apply(Ex_BC_mat, 1, function(x){\n  paste(colnames(Ex_BC_mat)[which(x&gt;0)], collapse=',')\n  }))\nProj_motifs_counts &lt;- table(Proj_motifs)\nProj_motifs_counts &lt;- Proj_motifs_counts[order(Proj_motifs_counts, decreasing = T)]\nProj_motifs_counts &lt;- as.data.frame(Proj_motifs_counts)\ncolnames(Proj_motifs_counts) &lt;- c('Motif', 'Observed')\nProj_motifs_counts$Motif &lt;- as.character(Proj_motifs_counts$Motif)\n\n# create Null Modle\nBarcode_num &lt;- apply(Ex_BC_mat, 2, function(x){\n  length(which(x&gt;0))\n})\n\nfun &lt;- function(N_total){\n  nrow(Ex_BC_mat)/N_total + \n    cumprod(1 - Barcode_num/N_total)[length(Barcode_num)] - 1\n}\n# N_total\nroot &lt;- uniroot(fun, lower = nrow(Ex_BC_mat), upper = nrow(Ex_BC_mat)*10)\nN_total &lt;- round(root$root)\nP_Ai_list &lt;- Barcode_num/N_total\n# P_expected\nfor (i in 1:nrow(Proj_motifs_counts)){\n  Motif_i &lt;- strsplit(as.character(Proj_motifs_counts$Motif[i]),',')[[1]]\n  P_proj &lt;- P_Ai_list[Motif_i]\n  P_notproj &lt;- 1 - P_Ai_list[which(!names(P_Ai_list) %in% Motif_i)]\n  Proj_motifs_counts$P_expected[i] &lt;-\n    cumprod(c(P_proj,P_notproj))[ncol(Ex_BC_mat)]\n  # Expected\n  Proj_motifs_counts$Expected[i] &lt;- \n    round(Proj_motifs_counts$P_expected[i]*N_total)\n  # two.sided binom.test\n  Proj_motifs_counts$P_value[i] &lt;- \n    binom.test(x=Proj_motifs_counts$Observed[i], n=N_total,\n               p=Proj_motifs_counts$P_expected[i],\n               alternative=\"two.sided\")$p.value\n}\n# Bonferroni correction\nProj_motifs_counts$P_Bonferroni &lt;- p.adjust(Proj_motifs_counts$P_value,\n                                            method=\"bonferroni\")\n# Fold Change\nProj_motifs_counts$log2FC &lt;- log2(Proj_motifs_counts$Observed + 1) -\n  log2(Proj_motifs_counts$Expected + 1)\n\n# Significance\nProj_motifs_counts$Significance &lt;- 'not significant'\nProj_motifs_counts$Significance[which(Proj_motifs_counts$P_Bonferroni&lt;0.01 &\n                                      Proj_motifs_counts$log2FC&gt;1)] &lt;- 'Up'\nProj_motifs_counts$Significance[which(Proj_motifs_counts$P_Bonferroni&lt;0.01 &\n                                      Proj_motifs_counts$log2FC &lt; -1)] &lt;- 'Down'\n\n#Proj_motifs_counts &lt;- Proj_motifs_counts[which(Proj_motifs_counts$Observed &gt;= 10),]\n# Target_num\nfor (i in 1:nrow(Proj_motifs_counts)){\n  Proj_motifs_counts$Target_num[i] &lt;-\n    length(strsplit(Proj_motifs_counts$Motif[i],',')[[1]])\n}\nProj_motifs_counts &lt;- Proj_motifs_counts[order(Proj_motifs_counts$Observed,decreasing = T),]\n# motifs targets num &gt; 2\nProj_motifs_counts &lt;- Proj_motifs_counts[which(Proj_motifs_counts$Target_num&gt;=2),]\nCode\ncol_BC_num &lt;- c('#5e4fa2','#3288bd','#66c2a5','#abdda4','#e6f598','#fee08b','#fdae61','#f46d43','#d53e4f','#9e0142')\n#Proj_motifs_counts &lt;- read.csv('../result/Proj_motifs_counts.csv')\nProj_motifs_counts &lt;- Proj_motifs_counts[1:50,]\nProj_motifs_Up &lt;- Proj_motifs_counts[which(Proj_motifs_counts$Significance=='Up'),]\nProj_motifs_Down &lt;- Proj_motifs_counts[which(Proj_motifs_counts$Significance=='Down'),]\nProj_motifs_No &lt;- Proj_motifs_counts[which(Proj_motifs_counts$Significance=='not significant'),]\ny &lt;- c(Proj_motifs_Up$Observed, Proj_motifs_Down$Observed,\n       Proj_motifs_No$Observed, Proj_motifs_Up$Expected,\n       Proj_motifs_Down$Expected, Proj_motifs_No$Expected)\nx &lt;- c(seq(1:nrow(Proj_motifs_counts))-0.2,seq(1:nrow(Proj_motifs_counts))+0.2)\ngroup &lt;- c(rep('Up', nrow(Proj_motifs_Up)),\n           rep('Down', nrow(Proj_motifs_Down)),\n           rep('not significant', nrow(Proj_motifs_No)),\n           rep('Expected', nrow(Proj_motifs_counts)))\ngroup &lt;- factor(group, levels = c('Expected','Up','Down','not significant'))\n\np1_df &lt;- data.frame(x=x,y=y,group=group)\np1 &lt;- ggplot(p1_df, aes(x=x, y=y, fill=group)) + \n  geom_bar(position=\"dodge\", stat=\"identity\",width = 0.4) +\n  scale_fill_manual(values = c('gray','#cd2626','#000080','black')) +\n  theme_classic() +\n  scale_x_discrete(expand=c(0.01, 0.01)) +\n  scale_y_continuous(expand = c(0.01,0.01)) +\n  theme(axis.text.x=element_blank(), axis.title.x=element_blank(),\n        axis.ticks.x=element_blank(), plot.margin = margin(0,0,0,0))+\n  labs(y='Motif cell number')\n\nx &lt;- seq(1:nrow(Proj_motifs_counts))\nmat &lt;- matrix(0, nrow = ncol(Ex_BC_mat), ncol = length(x))\nrownames(mat) &lt;- colnames(Ex_BC_mat)\ncolnames(mat) &lt;- x\nsig_motifs &lt;- c(Proj_motifs_Up$Motif, Proj_motifs_Down$Motif,\n                Proj_motifs_No$Motif)\nfor (j in 1:ncol(mat)){\n  for (i in 1:nrow(mat)){\n    if (rownames(mat)[i] %in% strsplit(sig_motifs[j],',')[[1]]){\n      mat[i,j] &lt;- 1\n    }\n  }\n}\ndf_plot &lt;- data.frame(\n  'X'=rep(1:ncol(mat), each=nrow(mat)),\n  'Y'=rep(rownames(mat), ncol(mat)),\n  'value'=as.vector(mat),\n  'Target_num'=c(rep(Proj_motifs_Up$Target_num, each=nrow(mat)),\n                 rep(Proj_motifs_Down$Target_num, each=nrow(mat)),\n                 rep(Proj_motifs_No$Target_num, each=nrow(mat)))\n  )\n\ndf_plot$group &lt;- 'NO target'\ndf_plot$group[which(df_plot$value &gt; 0)] &lt;- paste(df_plot$Target_num[which(df_plot$value &gt; 0)], 'targets')\ndf_plot$group[which(df_plot$group == '1 targets')] &lt;- '1 target'\ndf_plot$X &lt;- factor(df_plot$X, levels=1:length(x))\ndf_plot$group &lt;- factor(\n  df_plot$group, \n  levels = c(\"NO target\",\"2 targets\",\"3 targets\",\"4 targets\",\n             \"5 targets\",\"6 targets\"))\nfor (i in 1:nrow(Proj_motifs_counts)){\n  target_i &lt;- df_plot$Y[df_plot$X==i & df_plot$value&gt;0]\n  target_index &lt;- match(target_i, Barcode_order)\n  df_plot$ystart[df_plot$X==i] &lt;- min(target_index)\n  df_plot$yend[df_plot$X==i] &lt;- max(target_index)\n  df_plot$group_seg[df_plot$X==i] &lt;- \n    unique(as.character(df_plot$group[df_plot$X==i & df_plot$value&gt;0]))\n}\ndf_plot$Y &lt;- factor(df_plot$Y, levels = Barcode_order)\n\n# change color to within-module and without-module\n#df_plot$group_module &lt;- as.character(df_plot$group)\n#for (i in 1:nrow(df_plot)){\n#  X &lt;- df_plot$X[i]\n#  target &lt;- names(mat[,X][which(mat[,X]&gt;0)])\n#  if (all(is.element(target,IT_D_BC))|all(is.element(target,IT_V_BC))){\n#    df_plot$group_module[i] &lt;-  \"within module\"\n#    df_plot$group_seg[i] &lt;- \"within module\"\n#  }else{\n#    df_plot$group_module[i] &lt;-  \"across module\"\n#    df_plot$group_seg[i] &lt;- \"across module\"\n#  }\n#}\n#df_plot$group_module[which(df_plot$group==\"NO target\")] &lt;- \"NO target\"\n#df_plot$group_module &lt;- factor(\n#  df_plot$group_module, levels = c(\"NO target\",\"across module\",\"within module\"))\n\np2 &lt;- ggplot(df_plot) +\n  geom_point(aes(x=X, y=Y, colour=group), size=3) +\n  geom_segment(aes(x = X, y = ystart, xend = X, yend = yend, colour=group_seg),\n               linewidth = 0.8) +\n  theme_minimal() +\n  scale_color_manual(values = c('#d7d8da',col_BC_num)) +\n  labs(x='', y='') +\n  theme(panel.grid=element_blank(), plot.margin = margin(0,0,0,0),\n        axis.ticks.x=element_blank(), axis.text.x = element_blank(),\n        plot.title = element_blank())\n\n# Brcode num\ndf_BC_num &lt;- data.frame(\n  'Barcode' = Barcode_order,\n  'Cell_num' = 0\n)\nfor (i in 1:nrow(df_BC_num)){\n  for (j in 1:nrow(Proj_motifs_counts)){\n    if (df_BC_num$Barcode[i] %in% strsplit(Proj_motifs_counts$Motif[j],',')[[1]]){\n      df_BC_num$Cell_num[i] &lt;- df_BC_num$Cell_num[i] +\n        Proj_motifs_counts$Observed[j]\n    }\n  }\n}\np3 &lt;- ggplot(df_BC_num, aes(x=Barcode, y=Cell_num)) +\n  geom_bar(stat = \"identity\", fill='black') +\n  coord_flip() + \n  scale_y_reverse() +\n  labs(x='', 'y'='Barcode cell number') +\n  theme_half_open() +\n  theme(axis.ticks.y = element_blank(), axis.text.y = element_blank(),\n        axis.line.y = element_blank(), \n        text = element_text(size = 10), axis.text.x = element_text(size = 10))\n\nFigure4_A &lt;- \n  p2 %&gt;%\n  insert_top(p1, height=1.5) %&gt;%\n  insert_left(p3, width = 0.2)\n\nFigure4_A\nCode\nggsave(\"../pdf/Figure4/Figure4_A.pdf\", plot = Figure4_A,\n       height = 7, width = 14, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Figure4</span>"
    ]
  },
  {
    "objectID": "Figure4.html#figure4_b",
    "href": "Figure4.html#figure4_b",
    "title": "4  Figure4",
    "section": "4.2 Figure4_B",
    "text": "4.2 Figure4_B\n\n\nCode\n#bg3d(color = \"black\")\nbg3d(color = \"white\")\npar3d(userMatrix = rotationMatrix(-pi/4, 0, 1, 0), zoom = 0.65)\nacr.list &lt;- c(\"MOs\",\"PL\",\"ORBm\",\"ACAd\",\"ILA\",\"DP\",\"ACAv\")\n\nfor(acr in acr.list){\n  mesh &lt;- mesh3d.allen.annot.from.id(id.from.acronym(acr))\n  to.del &lt;- which(mesh$vb[1,] &lt; 0)\n  #to.del &lt;- NA\n  mesh$it &lt;- mesh$it[,!is.element(mesh$it[1,], to.del) & !is.element(mesh$it[2,], to.del) & !is.element(mesh$it[3,], to.del)]\n  #col &lt;- color.from.acronym(acr)\n  col &lt;- \"lightgray\"\n  #col &lt;- col_Region[acr]\n  wire3d(mesh, col = col, material = list(lit=FALSE), alpha = 0.2)\n}\n\ndf_plot &lt;- sp.PFC@meta.data[which(sp.PFC$ABA_hemisphere==\"Left\"),]\n\n# ACB-I + BLA-I\ndf_plot$group &lt;- NA\ndf_plot$group[which(df_plot$`ACB-I`&gt;0 & df_plot$`BLA-I`&gt;0 &\n                      df_plot$BC_num==2)] &lt;- \"ACB-I + BLA-I\"\ndf_plot &lt;- df_plot[which(df_plot$group %in% 'ACB-I + BLA-I'),]\n\n# CP-I + AId-I\ndf_plot$group &lt;- NA\ndf_plot$group[which(df_plot$`CP-I`&gt;0 & df_plot$`AId-I`&gt;0 &\n                      df_plot$BC_num==2)] &lt;- \"CP-I + AId-I\"\ndf_plot &lt;- df_plot[which(df_plot$group %in% 'CP-I + AId-I'),]\n\nfor (i in 1){\n  df_i &lt;- df_plot\n  col &lt;- \"blue\"\n  spheres3d(x = df_i$ML_new, \n            y = df_i$DV_new,\n            z = df_i$AP_new,\n            col = col, radius=0.02, alpha=1)\n}\n\n# save\nrgl.snapshot('../pdf/Figure4/Figure4_B/Figure4_B_3.png', top = TRUE)\n#movie3d(spin3d(axis = c(0, 1, 0)), duration = 15, dir='images/movie/')\n\n\n\n\nCode\nBarcode_order &lt;-  c(\"VIS-I\",\"ACB-I\",\"CP-C\",\"AId-I\",\"CP-I\",\"ECT-C\",\"AId-C\",\"ECT-I\",\"BLA-I\",\"AUD-I\",\"RSP-C\",\"SSp-I\",\"RSP-I\",\"ACB-C\",\"LHA-I\")\nEx_BC_mat &lt;- sp.PFC@meta.data[\n  which(sp.PFC$ABA_hemisphere==\"Left\" & sp.PFC$BC_num&gt;0),\n  Barcode_order\n  ]\nEx_BC_mat &lt;- Ex_BC_mat[rowSums(Ex_BC_mat, na.rm=T)&gt;0,]\n\n# create Null Modle\nBarcode_num &lt;- apply(Ex_BC_mat, 2, function(x){\n  length(which(x&gt;0))\n})\n\nfun &lt;- function(N_total){\n  nrow(Ex_BC_mat)/N_total + \n    cumprod(1 - Barcode_num/N_total)[length(Barcode_num)] - 1\n}\n# N_total\nroot &lt;- uniroot(fun, lower = nrow(Ex_BC_mat), upper = nrow(Ex_BC_mat)*10)\nN_total &lt;- round(root$root)\nP_Ai_list &lt;- Barcode_num/N_total\n\nExp_counts &lt;- function(Motif){\n  P_proj &lt;- P_Ai_list[Motif]\n  P_notproj &lt;- 1 - P_Ai_list[which(!names(P_Ai_list) %in% Motif)]\n  P_expected &lt;- cumprod(c(P_proj,P_notproj))[ncol(Ex_BC_mat)]\n  Expected &lt;- as.numeric(round(P_expected*N_total))\n  return(Expected)\n}\n\ndf1 &lt;- data.frame(\n  'Type'=c('Observed','Expected'),\n  'num'=c(length(which(Ex_BC_mat$`ACB-I`&gt;0 & Ex_BC_mat$`BLA-I`&gt;0 &\n                         sp.PFC$BC_num[rownames(Ex_BC_mat)]==2)),\n          Exp_counts(c('ACB-I', 'BLA-I')))\n)\ndf2 &lt;- data.frame(\n  'Type'=c('Observed','Expected'),\n  'num'=c(length(which(Ex_BC_mat$`CP-I`&gt;0 & Ex_BC_mat$`AId-I`&gt;0 &\n                         sp.PFC$BC_num[rownames(Ex_BC_mat)]==2)),\n          Exp_counts(c('CP-I', 'AId-I')))\n)\n\n\n\n\nCode\ndf1$Type &lt;- factor(df1$Type, levels = c('Observed','Expected'))\nFigure4_B_2 &lt;- \n  ggplot(df1, aes(x=Type, y=num, fill=Type)) + \n  geom_col(width = 0.8) +\n  labs(x='', y='Cell number') +\n  theme_classic() +\n  theme(legend.position = \"none\", text = element_text(size=25),\n        axis.text.x = element_text(angle = 35, hjust = 1)) +\n  scale_fill_manual(values = c('#cd2626','gray')) +\n  ylim(0,650)\nFigure4_B_2\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure4/Figure4_B/Figure4_B_2.pdf\", plot = Figure4_B_2,\n       height = 5, width = 2, units = \"in\")\n\n\n\n\nCode\ndf2$Type &lt;- factor(df2$Type, levels = c('Observed','Expected'))\nFigure4_B_4 &lt;- \n  ggplot(df2, aes(x=Type, y=num, fill=Type)) + \n  geom_col(width = 0.8) +\n  labs(x='', y='Cell number') +\n  theme_classic() +\n  theme(legend.position = \"none\", text = element_text(size=25),\n        axis.text.x = element_text(angle = 35, hjust = 1)) +\n  scale_fill_manual(values = c('#000080','gray')) +\n  ylim(0,250)\nFigure4_B_4\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure4/Figure4_B/Figure4_B_4.pdf\", plot = Figure4_B_4,\n       height = 5, width = 2, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Figure4</span>"
    ]
  },
  {
    "objectID": "Figure4.html#figure4_c",
    "href": "Figure4.html#figure4_c",
    "title": "4  Figure4",
    "section": "4.3 Figure4_C",
    "text": "4.3 Figure4_C\n\n\nCode\nknitr::include_graphics(\"images/Figure4_C.png\", dpi = 300)",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Figure4</span>"
    ]
  },
  {
    "objectID": "Figure4.html#figure4_d",
    "href": "Figure4.html#figure4_d",
    "title": "4  Figure4",
    "section": "4.4 Figure4_D",
    "text": "4.4 Figure4_D\n\n\nCode\nIT_DV &lt;- c('VIS-I','SSp-I','CP-I','AUD-I','RSP-I',\n           'BLA-I','ACB-I','ENTl-I','AId-I','ECT-I')\nIT_DV_mat &lt;- Adult.Ex.barcode@meta.data[,IT_DV]\nIT_DV_mat &lt;- na.omit(IT_DV_mat)\ncor &lt;- cor(IT_DV_mat)\nfor (i in 1:10){\n  cor[i,i] &lt;- NA\n}\n\n\n\n\nCode\norder &lt;- c(\"CP-I\",\"VIS-I\",\"RSP-I\",\"SSp-I\",\"AUD-I\",\"ENTl-I\",\"ECT-I\",\"ACB-I\",\n           \"BLA-I\",\"AId-I\")\nbreaks &lt;- seq(0,0.2,0.01)\nFigure4_D &lt;- \n  pheatmap(\n  cor[order,order],\n  cluster_rows = F, cluster_cols = F, \n  breaks = breaks,\n  color = colorRampPalette(c(\"white\",\"#cd2626\"))(length(breaks)),\n  gaps_row = c(5), gaps_col = c(5),\n  legend_breaks = c(0,0.1,0.2), heatmap_legend_param = list(title = 'pearson')\n  )\nFigure4_D\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure4/Figure4_D.pdf\", plot = Figure4_D,\n       height = 4, width = 6, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Figure4</span>"
    ]
  },
  {
    "objectID": "Figure4.html#figure4_e",
    "href": "Figure4.html#figure4_e",
    "title": "4  Figure4",
    "section": "4.5 Figure4_E",
    "text": "4.5 Figure4_E\n\n\nCode\nIT_D_BC &lt;- c('VIS-I','SSp-I','CP-I','AUD-I','RSP-I')\nIT_V_BC &lt;- c('BLA-I','ACB-I','ENTl-I','AId-I','ECT-I')\nIT_DV &lt;- c(IT_D_BC, IT_V_BC)\nIT_DV_mat &lt;- Adult.Ex.barcode@meta.data[,IT_DV]\nIT_DV_mat &lt;- na.omit(IT_DV_mat)\ncor &lt;- as.data.frame(cor(IT_DV_mat))\nfor (i in 1:10){\n  cor[i,i] &lt;- NA\n}\ncor$target_A &lt;- rownames(cor)\ncor_long &lt;- \n  cor |&gt;\n  pivot_longer(!target_A, names_to = \"target_B\", values_to = \"pearson\")\ncor_long &lt;- cor_long[which(!is.na(cor_long$pearson)),]\ncor_long$Type &lt;- 'across module'\ncor_long$Type[(cor_long$target_A %in% IT_D_BC)&\n              (cor_long$target_B %in% IT_D_BC)] &lt;- 'within module'\ncor_long$Type[(cor_long$target_A %in% IT_V_BC)&\n              (cor_long$target_B %in% IT_V_BC)] &lt;- 'within module'\n\n\n\n\nCode\ncor_long$Type &lt;- factor(cor_long$Type, levels = c('within module', 'across module'))\n\nFigure4_E &lt;- \n  ggbetweenstats(\n  data = cor_long,\n  x = Type,\n  y = pearson,\n  bf.message = FALSE,\n  xlab = \"\",\n  ylab = \"PFC to A and B (pearson)\",\n  #palette = c('#cd2626','#000080'),\n  ggtheme = theme_classic()\n) + theme(legend.position = \"none\") +\n  scale_color_manual(values = c('#cd2626','#000080'))\nFigure4_E\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure4/Figure4_E.pdf\", plot = Figure4_E,\n       height = 4, width = 4, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Figure4</span>"
    ]
  },
  {
    "objectID": "Figure4.html#figure4_f",
    "href": "Figure4.html#figure4_f",
    "title": "4  Figure4",
    "section": "4.6 Figure4_F",
    "text": "4.6 Figure4_F\n\n\nCode\nallen_proj_merge &lt;- read.csv('../data/csv/Allen/connectivity_merge.csv', row.names = 1)\n#allen_proj_merge &lt;- t(scale(t(allen_proj_merge)))\ninject_area &lt;- c('RSP','ENT','AId','VIS','AUD','SSp','ECT','BLA')\nproj_area &lt;- c('SSp','AUD','VIS','AId','RSP','ECT','ENT','BLA','CP','ACB')\nmodule1 &lt;- c('VIS','CP','SSp','AUD','RSP')\nmodule2 &lt;- c('ACB','BLA','ENT','AId','ECT')\n\nlink &lt;- matrix(nrow = length(inject_area)*length(proj_area), ncol = 6)\ncolnames(link) &lt;- c('areaA','moduleA','areaB','moduleB','value','type')\nindex &lt;- 1\n\nfor (i in 1:length(inject_area)){\n  for (j in 1:length(proj_area)){\n    link[index,'areaA'] &lt;- inject_area[i]\n    if (inject_area[i] %in% module1){\n      link[index,'moduleA'] &lt;- 'module1'\n    }else{\n      link[index,'moduleA'] &lt;- 'module2'\n    }\n    \n    link[index,'areaB'] &lt;- proj_area[j]\n    if (proj_area[j] %in% module1){\n      link[index,'moduleB'] &lt;- 'module1'\n    }else{\n      link[index,'moduleB'] &lt;- 'module2'\n    }\n    \n    link[index,'value'] &lt;- allen_proj_merge[inject_area[i],proj_area[j]]\n    \n    if (link[index,'moduleA']==link[index,'moduleB']){\n      link[index,'type'] &lt;- 'within module'\n    }else{\n      link[index,'type'] &lt;- 'across module'\n    }\n    index &lt;- index + 1\n  }\n}\nlink &lt;- as.data.frame(link)\nlink$value &lt;- as.numeric(link$value)\nlink &lt;- link[which(link$areaA != link$areaB),]\n\n\n\n\nCode\ndf &lt;- data.frame('from'=link$areaA,\n                 'to'=link$areaB,\n                 'value'=link$value)\n\narea_order &lt;- c('ACB','BLA','ENT','AId','ECT','VIS','CP','SSp','AUD','RSP')\ngrid.col &lt;- pal_d3(\"category20\")(10)\nnames(grid.col) &lt;- area_order\ncol &lt;- rep(\"#9999cc\",nrow(df))\ncol[which(link$moduleA == 'module1' & link$moduleB == 'module1')] &lt;- \"#eba8a8\"\ncol[which(link$moduleA == 'module2' & link$moduleB == 'module2')] &lt;- \"#eba8a8\"\n\ncircos.clear()\ncircos.par(gap.after = c(rep(5,4), 20, rep(5,4), 20))\nchordDiagram(\n  df, order = area_order, grid.col = grid.col, col = col, transparency = 0,\n  scale = TRUE, annotationTrack = c(\"name\", \"grid\"))\n\n\n\n\n\n\n\n\n\n\n\nCode\npdf(file=\"../pdf/Figure4/Figure4_F.pdf\", width=4, height=4)\ncircos.clear()\ncircos.par(gap.after = c(rep(5,4), 20, rep(5,4), 20))\nchordDiagram(\n  df, order = area_order, grid.col = grid.col, col = col, transparency = 0,\n  scale = TRUE, annotationTrack = c(\"name\", \"grid\"))\ndev.off()",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Figure4</span>"
    ]
  },
  {
    "objectID": "Figure4.html#figure4_g",
    "href": "Figure4.html#figure4_g",
    "title": "4  Figure4",
    "section": "4.7 Figure4_G",
    "text": "4.7 Figure4_G\n\n\nCode\nallen_proj_merge &lt;- read.csv('../data/csv/Allen/connectivity_merge.csv', row.names = 1)\nallen_proj_merge &lt;- t(scale(t(allen_proj_merge)))\ninject_area &lt;- c('RSP','ENT','AId','VIS','AUD','SSp','ECT','BLA')\nproj_area &lt;- c('SSp','AUD','VIS','AId','RSP','ECT','ENT','BLA','CP','ACB')\nmodule1 &lt;- c('VIS','CP','SSp','AUD','RSP')\nmodule2 &lt;- c('ACB','BLA','ENT','AId','ECT')\n\nlink &lt;- matrix(nrow = length(inject_area)*length(proj_area), ncol = 6)\ncolnames(link) &lt;- c('areaA','moduleA','areaB','moduleB','value','type')\nindex &lt;- 1\n\nfor (i in 1:length(inject_area)){\n  for (j in 1:length(proj_area)){\n    link[index,'areaA'] &lt;- inject_area[i]\n    if (inject_area[i] %in% module1){\n      link[index,'moduleA'] &lt;- 'module1'\n    }else{\n      link[index,'moduleA'] &lt;- 'module2'\n    }\n    \n    link[index,'areaB'] &lt;- proj_area[j]\n    if (proj_area[j] %in% module1){\n      link[index,'moduleB'] &lt;- 'module1'\n    }else{\n      link[index,'moduleB'] &lt;- 'module2'\n    }\n    \n    link[index,'value'] &lt;- allen_proj_merge[inject_area[i],proj_area[j]]\n    \n    if (link[index,'moduleA']==link[index,'moduleB']){\n      link[index,'type'] &lt;- 'within module'\n    }else{\n      link[index,'type'] &lt;- 'across module'\n    }\n    index &lt;- index + 1\n  }\n}\nlink &lt;- as.data.frame(link)\nlink$value &lt;- as.numeric(link$value)\nlink &lt;- link[which(link$areaA != link$areaB),]\n\n\n\n\nCode\nlink$type &lt;- factor(link$type, levels = c('within module', 'across module'))\n\nFigure4_G &lt;- \n  ggbetweenstats(\n  data = link,\n  x = type,\n  y = value,\n  bf.message = FALSE,\n  xlab = \"\",\n  ylab = \"A and B inter-projection strength (zscore)\",\n  #palette = c('#cd2626','#000080'),\n  ggtheme = theme_classic()\n) + theme(legend.position = \"none\") +\n  scale_color_manual(values = c('#cd2626','#000080'))\nFigure4_G\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure4/Figure4_G.pdf\", plot = Figure4_G,\n       height = 4, width = 4, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Figure4</span>"
    ]
  },
  {
    "objectID": "Figure4.html#figure4_h",
    "href": "Figure4.html#figure4_h",
    "title": "4  Figure4",
    "section": "4.8 Figure4_H",
    "text": "4.8 Figure4_H\n\n\nCode\nallen_proj_merge &lt;- read.csv('../data/csv/Allen/connectivity_merge.csv', row.names = 1)\nallen_proj_merge &lt;- t(scale(t(allen_proj_merge)))\ninject_area &lt;- c('RSP','ENT','AId','VIS','AUD','SSp','ECT','BLA')\nproj_area &lt;- c('SSp','AUD','VIS','AId','RSP','ECT','ENT','BLA','CP','ACB')\nmodule1 &lt;- c('VIS','CP','SSp','AUD','RSP')\nmodule2 &lt;- c('ACB','BLA','ENT','AId','ECT')\n\nlink &lt;- matrix(nrow = length(inject_area)*length(proj_area), ncol = 6)\ncolnames(link) &lt;- c('areaA','moduleA','areaB','moduleB','value','type')\nindex &lt;- 1\n\nfor (i in 1:length(inject_area)){\n  for (j in 1:length(proj_area)){\n    link[index,'areaA'] &lt;- inject_area[i]\n    if (inject_area[i] %in% module1){\n      link[index,'moduleA'] &lt;- 'module1'\n    }else{\n      link[index,'moduleA'] &lt;- 'module2'\n    }\n    \n    link[index,'areaB'] &lt;- proj_area[j]\n    if (proj_area[j] %in% module1){\n      link[index,'moduleB'] &lt;- 'module1'\n    }else{\n      link[index,'moduleB'] &lt;- 'module2'\n    }\n    \n    link[index,'value'] &lt;- allen_proj_merge[inject_area[i],proj_area[j]]\n    \n    if (link[index,'moduleA']==link[index,'moduleB']){\n      link[index,'type'] &lt;- 'within module'\n    }else{\n      link[index,'type'] &lt;- 'across module'\n    }\n    index &lt;- index + 1\n  }\n}\nlink &lt;- as.data.frame(link)\nlink$value &lt;- as.numeric(link$value)\nlink &lt;- link[which(link$areaA != link$areaB),]\nlink$pearson &lt;- NA\nlink$areaA[link$areaA==\"ENT\"] &lt;- \"ENTl\"\nlink$areaB[link$areaB==\"ENT\"] &lt;- \"ENTl\"\nfor (i in 1:nrow(link)){\n  link$pearson[i] &lt;- cor_long$pearson[\n    cor_long$target_A == paste(link$areaA[i],'I',sep='-') &\n    cor_long$target_B == paste(link$areaB[i],'I',sep='-') ]\n}\n\n\n\n\nCode\ncor &lt;- cor.test(link$pearson, link$value, \"two.sided\", \"pearson\")\nR &lt;- round(cor$estimate,2)\nP &lt;- format(cor$p.value, digits = 2)\n\nFigure4_H &lt;- \n  ggplot(link, aes(x=pearson, y=value)) +\n  geom_point(aes(fill=type, color=type), shape=21, size=4) +\n  geom_smooth(method = \"lm\", color='black') +\n  scale_fill_manual(values = c(\"#9999cc\",\"#eba8a8\")) +\n  scale_color_manual(values = c('#000080','#cd2626')) +\n  xlim(min(link$pearson),max(link$pearson)) +\n  ylim(min(link$value),max(link$value)) +\n  theme_bw() +\n  theme(panel.grid = element_blank(),\n        legend.position = \"top\",\n        text = element_text(size = 15),\n        axis.title.y = element_text(size = 10),\n        axis.title.x = element_text(size = 10)) +\n  labs(x='mPFC to A and B (pearson)', y='A and B inter-projection strength (zscore)',\n       title =  paste('R =',R,', P =',P,sep=' '),\n       color = '')\nFigure4_H\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure4/Figure4_H.pdf\", plot = Figure4_H,\n       height = 4.5, width = 4, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Figure4</span>"
    ]
  },
  {
    "objectID": "Figure5.html",
    "href": "Figure5.html",
    "title": "5  Figure5",
    "section": "",
    "text": "5.1 Figure5_A\nCode\nBarcode &lt;- c('VIS-I','SSp-I','CP-I','AUD-I','RSP-I',\n              'BLA-I','ACB-I','ENTl-I','AId-I','ECT-I',\n              'ACB-C','PL-C','ECT-C','ENTl-C',\n              'BLA-C','CP-C','AId-C','RSP-C',\n             'MD-I','RE-I','DR-I','VTA-I','LHA-I','SC-I')\nProj_subtype &lt;- c(\"1\",\"14\",\"17\",\"22\",\"23\",\"25\",\"26\",\"27\",\"28\",\"29\",\"31\",\n                  \"7\",\"8\",\"9\",\"10\",\"15\",\"16\",\"18\",\"19\",\"20\",\"21\",\n                  \"2\",\"3\",\"11\",\"12\",\"13\",\"24\",\"30\",\"32\",\"33\",\n                  \"4\",\"5\",\"6\")\nseu &lt;- Adult.IT.PT.barcode\npct_mat &lt;- matrix(nrow = 33, ncol = length(Barcode))\nrownames(pct_mat) &lt;- Proj_subtype\ncolnames(pct_mat) &lt;- Barcode\nfor (i in 1:nrow(pct_mat)){\n  for (j in 1:ncol(pct_mat)){\n    pct_mat[i,j] &lt;- length(which(seu@meta.data[,Barcode[j]]&gt;0 & \n                                 seu$Proj_subtype == rownames(pct_mat)[i]))/\n      length(which(seu$Proj_subtype == rownames(pct_mat)[i]))\n  }\n}\n#write.csv(pct_mat, '../pdf/Figure5/Figure5_A/pct_mat.csv')\nCode\nProj_subtype &lt;- c(\"1\",\"14\",\"17\",\"22\",\"23\",\"25\",\"26\",\"27\",\"28\",\"29\",\"31\",\n                  \"7\",\"8\",\"9\",\"10\",\"15\",\"16\",\"18\",\"19\",\"20\",\"21\",\n                  \"2\",\"3\",\"11\",\"12\",\"13\",\"24\",\"30\",\"32\",\"33\",\n                  \"4\",\"5\",\"6\")\nseu &lt;- Adult.IT.PT.barcode\nseu$Proj_subtype &lt;- factor(seu$Proj_subtype, levels = Proj_subtype)\navgexp &lt;- AverageExpression(seu, features = receptor_gene,\n                            group.by = \"Proj_subtype\", assays = \"RNA\")\navgexp &lt;- avgexp$RNA\navgexp &lt;- scale(t(avgexp))\nbreaks &lt;- seq(0,1,0.01)\n\nFigure5_A_1 &lt;- \n  pheatmap::pheatmap(\n    t(avgexp),\n    breaks = breaks, border_color = NA, show_rownames=F, show_colnames = F,\n    color = colorRampPalette(c(\"white\",\"#D73027\"))(length(breaks)),\n    cluster_cols = F, cluster_rows = T,\n    gaps_col = c(1:32), legend=F, treeheight_row=F\n    )\nCode\nggsave(\"../pdf/Figure5/Figure5_A/Figure5_A_1.png\", plot = Figure_5A_1,\n       height = 0.5, width = 15, units = \"in\")\nCode\nseu &lt;- Adult.IT.PT.barcode\nseu$Proj_subtype &lt;- factor(seu$Proj_subtype, levels = Proj_subtype)\navgexp &lt;- AverageExpression(seu, features = NTNP_gene,\n                            group.by = \"Proj_subtype\", assays = \"RNA\")\navgexp &lt;- avgexp$RNA\navgexp &lt;- scale(t(avgexp))\nbreaks &lt;- seq(0,1,0.01)\n\nFigure5_A_2 &lt;- \n  pheatmap::pheatmap(\n    t(avgexp),\n    breaks = breaks, border_color = NA, show_rownames=F, show_colnames = F,\n    color = colorRampPalette(c(\"white\",\"#4575B4\"))(length(breaks)),\n    cluster_cols = F, cluster_rows = T,\n    gaps_col = c(1:32), legend=F, treeheight_row=F\n    )\nCode\nggsave(\"../pdf/Figure5/Figure5_A/Figure_5A_2.png\", plot = Figure_5A_2,\n       height = 0.5, width = 15, units = \"in\")\nCode\nknitr::include_graphics(\"images/Figure5_A.png\", dpi = 300)",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Figure5</span>"
    ]
  },
  {
    "objectID": "Figure5.html#figure5_b",
    "href": "Figure5.html#figure5_b",
    "title": "5  Figure5",
    "section": "5.2 Figure5_B",
    "text": "5.2 Figure5_B\n\n\nCode\nseu &lt;- Adult.IT.PT.barcode\nseu$ITPT &lt;- \"IT\"\nseu$ITPT[which(seu$Proj_module == \"PTi\")] &lt;- \"PT\"\nIdents(seu) &lt;- \"ITPT\"\nDefaultAssay(seu) &lt;- \"RNA\"\n\n\n\n\nCode\nfeatures &lt;- rev(c(\"Gria4\",\"Grm3\",\"Htr2a\",\"Htr5a\",\"Htr1b\",\"Drd1\",\"Npy1r\",\"Cckbr\",\"Npr3\",\"Mchr1\",\"Mc4r\"))\nexp &lt;- AverageExpression(seu, features = features, assays = \"RNA\", slot = \"data\")\nexp &lt;- exp$RNA\nexp &lt;- as.data.frame(exp)\nexp &lt;- apply(exp, 1, function(x){x/max(x)})\nexp &lt;- as.data.frame(exp)\nexp$Group &lt;- rownames(exp)\ndf_exp &lt;- pivot_longer(exp, !Group, names_to = \"Gene\", values_to = \"EXP\")\n\npct &lt;- matrix(nrow = 2, ncol = length(features))\npct[1,] &lt;- apply(seu@assays$RNA@data[features,seu$ITPT==\"IT\"],1,function(x){\n  length(which(x&gt;0))/length(x)\n})\npct[2,] &lt;- apply(seu@assays$RNA@data[features,seu$ITPT==\"PT\"],1,function(x){\n  length(which(x&gt;0))/length(x)\n})\nrownames(pct) &lt;- c(\"IT\",\"PT\")\ncolnames(pct) &lt;- features\npct &lt;- as.data.frame(pct)\npct$Group &lt;- rownames(pct)\ndf_pct &lt;- pivot_longer(pct,!Group, names_to = \"Gene\", values_to = \"PCT\")\n\ndf &lt;- data.frame(\n  \"Group\" = df_exp$Group,\n  \"Gene\" = df_exp$Gene,\n  \"EXP\" = df_exp$EXP,\n  \"PCT\" = df_pct$PCT\n)\ndf$Group &lt;- factor(df$Group, levels = c(\"IT\",\"PT\"))\n\nFigure5_B_1 &lt;- \n  Biorplot::Bior_DotPlot(\n    data = df, x = \"Gene\", y = \"Group\", size=\"PCT\", color = \"EXP\",\n    x.text.col = FALSE, ggtheme = theme_bw()) + \n  theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12),\n        axis.text.y = element_text(size = 12),\n        legend.position = \"none\") +\n  labs(x=\"\",y=\"\") +\n  scale_color_gradientn(colours = c(\"lightblue3\", \"lightblue\", \"white\", \"red\", \"red4\")) +\n  scale_size_continuous(range = c(1,6))\n\nFigure5_B_1\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure5/Figure5_B_1.pdf\", plot = Figure5_B_1,\n       height = 2, width = 3, units = \"in\")\n\n\n\n\nCode\nfeatures &lt;- rev(c(c(\"Cck\",\"Penk\",\"Adcyap1\",\"Grp\",\"Pdyn\")))\nfeatures &lt;- rev(c(c(\"Cck\",\"Penk\",\"Npy\",\"Sst\",\"Nppc\",\"Gad1\",\"Gad2\",\"Slc17a7\",\"Dbi\",\"Slc17a6\",\"Grp\",\"Adcyap1\",\"Pdyn\")))\nfeatures &lt;- rev(c(c(\"Cck\",\"Penk\",\"Npy\",\"Sst\",\"Nppc\",\"Slc17a7\",\"Dbi\",\"Slc17a6\",\"Grp\",\"Adcyap1\",\"Pdyn\")))\nexp &lt;- AverageExpression(seu, features = features, assays = \"RNA\", slot = \"data\")\nexp &lt;- exp$RNA\nexp &lt;- as.data.frame(exp)\nexp &lt;- apply(exp, 1, function(x){x/max(x)})\nexp &lt;- as.data.frame(exp)\nexp$Group &lt;- rownames(exp)\ndf_exp &lt;- pivot_longer(exp, !Group, names_to = \"Gene\", values_to = \"EXP\")\n\npct &lt;- matrix(nrow = 2, ncol = length(features))\npct[1,] &lt;- apply(seu@assays$RNA@data[features,seu$ITPT==\"IT\"],1,function(x){\n  length(which(x&gt;0))/length(x)\n})\npct[2,] &lt;- apply(seu@assays$RNA@data[features,seu$ITPT==\"PT\"],1,function(x){\n  length(which(x&gt;0))/length(x)\n})\nrownames(pct) &lt;- c(\"IT\",\"PT\")\ncolnames(pct) &lt;- features\npct &lt;- as.data.frame(pct)\npct$Group &lt;- rownames(pct)\ndf_pct &lt;- pivot_longer(pct,!Group, names_to = \"Gene\", values_to = \"PCT\")\n\ndf &lt;- data.frame(\n  \"Group\" = df_exp$Group,\n  \"Gene\" = df_exp$Gene,\n  \"EXP\" = df_exp$EXP,\n  \"PCT\" = df_pct$PCT\n)\ndf$Group &lt;- factor(df$Group, levels = c(\"IT\",\"PT\"))\n\nFigure5_B_2 &lt;- \n  Biorplot::Bior_DotPlot(\n    data = df, x = \"Gene\", y = \"Group\", size=\"PCT\", color = \"EXP\",\n    x.text.col = FALSE, ggtheme = theme_bw()) + \n  theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12),\n        axis.text.y = element_text(size = 12),\n        legend.position = \"none\") +\n  labs(x=\"\",y=\"\") +\n  scale_color_gradientn(colours = c(\"lightblue3\", \"lightblue\", \"white\", \"red\", \"red4\")) +\n  scale_size_continuous(range = c(1,6))\n\nFigure5_B_2\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure5/Figure5_B_2.pdf\", plot = Figure5_B_2,\n       height = 2, width = 3, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Figure5</span>"
    ]
  },
  {
    "objectID": "Figure5.html#figure5_c",
    "href": "Figure5.html#figure5_c",
    "title": "5  Figure5",
    "section": "5.3 Figure5_C",
    "text": "5.3 Figure5_C\n\n\nCode\nseu &lt;- subset(Adult.IT.PT.barcode, cells = colnames(Adult.IT.PT.barcode)[which(\n  Adult.IT.PT.barcode$Proj_module %in% c(\"ITi-D\",\"ITi-V\")\n)])\nseu$Proj_subtype &lt;- factor(seu$Proj_subtype, levels = names(col_Proj_subtype)[1:21])\nIdents(seu) &lt;- \"Proj_subtype\"\nDefaultAssay(seu) &lt;- \"RNA\"\n\n\n\n\nCode\nfeatures &lt;- c(\"Adra1b\",\"Chrm3\",\"Htr2a\",\"Oprk1\",\"Sstr2\",\"Rxfp1\",\"Cnr1\",\"Ntsr1\",\"Grm1\",\n              \"Grm2\",\"Grm3\",\"Grin3a\")\nexp &lt;- AverageExpression(seu, features = features, assays = \"RNA\", slot = \"data\")\nexp &lt;- exp$RNA\nexp &lt;- as.data.frame(exp)\nexp &lt;- apply(exp, 1, function(x){x/max(x)})\nexp &lt;- as.data.frame(exp)\nexp$Group &lt;- rownames(exp)\ndf_exp &lt;- pivot_longer(exp, !Group, names_to = \"Gene\", values_to = \"EXP\")\n\npct &lt;- matrix(nrow = 21, ncol = length(features))\nrownames(pct) &lt;- rownames(exp)\ncolnames(pct) &lt;- features\nfor (i in 1:21){\n  pct[i,] &lt;- apply(seu@assays$RNA@data[features,seu$Proj_subtype==rownames(pct)[i]], 1,\n                   function(x){\n                     length(which(x&gt;0))/length(x)\n                     })\n}\npct &lt;- as.data.frame(pct)\npct$Group &lt;- rownames(pct)\ndf_pct &lt;- pivot_longer(pct,!Group, names_to = \"Gene\", values_to = \"PCT\")\n\ndf &lt;- data.frame(\n  \"Group\" = df_exp$Group,\n  \"Gene\" = df_exp$Gene,\n  \"EXP\" = df_exp$EXP,\n  \"PCT\" = df_pct$PCT\n)\ndf$Group &lt;- factor(df$Group, levels = rev(names(col_Proj_subtype)[1:21]))\n\nFigure5_C_1 &lt;- \n  Biorplot::Bior_DotPlot(\n    data = df, x = \"Gene\", y = \"Group\", size=\"PCT\", color = \"EXP\",\n    x.text.col = FALSE, ggtheme = theme_bw()) + \n  theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12),\n        axis.text.y = element_text(size = 12),\n        legend.position = \"none\") +\n  labs(x=\"\",y=\"\") +\n  scale_color_gradientn(colours = c(\"lightblue3\", \"lightblue\", \"white\", \"red\", \"red4\")) +\n  scale_size_continuous(range = c(1,4))\n\nFigure5_C_1\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure5/Figure5_C_1.pdf\", plot = Figure5_C_1,\n       height = 4, width = 4, units = \"in\")\n\n\n\n\nCode\nBC_order &lt;- rev(c('CP-I','VIS-I','SSp-I','RSP-I','AUD-I',\n             'ACB-I','AId-I','BLA-I','ECT-I','ENTl-I'))\n\nseu &lt;- Adult.Ex.barcode\nseu@meta.data[,BC_order][is.na(seu@meta.data[,BC_order])] &lt;- 0\nseu$Proj_subtype &lt;- factor(\n  seu$Proj_subtype,\n  levels = rev(c(1,14,17,22,23,25,26,27,28,29,31,\n             7,8,9,10,15,16,18,19,20,21,\n             2,3,11,12,13,24,30,32,33,\n             4,5,6)))\n\nFigure5_C_2 &lt;- \n  DotPlot(subset(seu, cells = colnames(seu)[which(seu$Proj_module %in% c(\"ITi-D\",\"ITi-V\"))]), features = BC_order, group.by = 'Proj_subtype',\n          dot.scale = 4,\n          cols = c(\"lightgrey\", \"red\")) + \n  scale_x_discrete(limits=rev) +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 12),\n        axis.text.y = element_text(size = 12),\n        legend.position = \"none\") +\n  labs(x='', y='')\n\nFigure5_C_2\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure5/Figure5_C_2.pdf\", plot = Figure5_C_2,\n       height = 4, width = 4, units = \"in\")\n\n\n\n\nCode\nseu &lt;- subset(Adult.IT.PT.barcode, cells = colnames(Adult.IT.PT.barcode)[which(\n  Adult.IT.PT.barcode$Proj_module %in% c(\"ITi-D\",\"ITi-V\")\n)])\nseu$Proj_subtype &lt;- factor(seu$Proj_subtype, levels = names(col_Proj_subtype)[1:21])\nIdents(seu) &lt;- \"Proj_subtype\"\nDefaultAssay(seu) &lt;- \"RNA\"\n\n\n\n\nCode\nfeatures &lt;- c(\"Slc17a6\",\"Adcyap1\",\"Grp\",\"Npy\",\"Penk\",\"Nos1\")\nexp &lt;- AverageExpression(seu, features = features, assays = \"RNA\", slot = \"data\")\nexp &lt;- exp$RNA\nexp &lt;- as.data.frame(exp)\nexp &lt;- apply(exp, 1, function(x){x/max(x)})\nexp &lt;- as.data.frame(exp)\nexp$Group &lt;- rownames(exp)\ndf_exp &lt;- pivot_longer(exp, !Group, names_to = \"Gene\", values_to = \"EXP\")\n\npct &lt;- matrix(nrow = 21, ncol = length(features))\nrownames(pct) &lt;- rownames(exp)\ncolnames(pct) &lt;- features\nfor (i in 1:21){\n  pct[i,] &lt;- apply(seu@assays$RNA@data[features,seu$Proj_subtype==rownames(pct)[i]], 1,\n                   function(x){\n                     length(which(x&gt;0))/length(x)\n                     })\n}\npct &lt;- as.data.frame(pct)\npct$Group &lt;- rownames(pct)\ndf_pct &lt;- pivot_longer(pct,!Group, names_to = \"Gene\", values_to = \"PCT\")\n\ndf &lt;- data.frame(\n  \"Group\" = df_exp$Group,\n  \"Gene\" = df_exp$Gene,\n  \"EXP\" = df_exp$EXP,\n  \"PCT\" = df_pct$PCT\n)\ndf$Group &lt;- factor(df$Group, levels = rev(names(col_Proj_subtype)[1:21]))\n\nFigure5_C_3 &lt;- \n  Biorplot::Bior_DotPlot(\n    data = df, x = \"Gene\", y = \"Group\", size=\"PCT\", color = \"EXP\",\n    x.text.col = FALSE, ggtheme = theme_bw()) + \n  theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12),\n        axis.text.y = element_text(size = 12),\n        legend.position = \"none\") +\n  labs(x=\"\",y=\"\") +\n  scale_color_gradientn(colours = c(\"lightblue3\", \"lightblue\", \"white\", \"red\", \"red4\")) +\n  scale_size_continuous(range = c(1,4))\n\nFigure5_C_3\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure5/Figure5_C_3.pdf\", plot = Figure5_C_3,\n       height = 4, width = 2, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Figure5</span>"
    ]
  },
  {
    "objectID": "Figure5.html#figure5_d",
    "href": "Figure5.html#figure5_d",
    "title": "5  Figure5",
    "section": "5.4 Figure5_D",
    "text": "5.4 Figure5_D\n\n\nCode\nAIdI_CPI &lt;- colnames(Adult.IT.PT.barcode)[which(\n  Adult.IT.PT.barcode$`AId-I`&gt;0 & Adult.IT.PT.barcode$`CP-I`&gt;0 &\n  Adult.IT.PT.barcode$BC_num==2\n)]\nAIdI_PLC_CPC &lt;- colnames(Adult.IT.PT.barcode)[which(\n  Adult.IT.PT.barcode$`AId-I`&gt;0 & Adult.IT.PT.barcode$`PL-C`&gt;0 &\n  Adult.IT.PT.barcode$`CP-C`&gt;0 & Adult.IT.PT.barcode$BC_num==3  \n)]\nAIdI_CPI_CPC_AIdC &lt;- colnames(Adult.IT.PT.barcode)[which(\n  Adult.IT.PT.barcode$`AId-I`&gt;0 & Adult.IT.PT.barcode$`CP-I`&gt;0 & \n  Adult.IT.PT.barcode$`CP-C`&gt;0 & Adult.IT.PT.barcode$`AId-C`&gt;0 &\n  Adult.IT.PT.barcode$BC_num==4\n)]\nAIdI_CPI_CPC_ACBI_ACBC_AIdC &lt;- colnames(Adult.IT.PT.barcode)[which(\n  Adult.IT.PT.barcode$`AId-I`&gt;0 & Adult.IT.PT.barcode$`CP-I`&gt;0 & \n  Adult.IT.PT.barcode$`CP-C`&gt;0 & Adult.IT.PT.barcode$`ACB-I`&gt;0 &\n  Adult.IT.PT.barcode$`ACB-C`&gt;0 & Adult.IT.PT.barcode$`AId-C`&gt;0 &\n  Adult.IT.PT.barcode$BC_num==6\n)]\nAIdI_ACBI &lt;- colnames(Adult.IT.PT.barcode)[which(\n  Adult.IT.PT.barcode$`AId-I`&gt;0 & Adult.IT.PT.barcode$`ACB-I`&gt;0 &\n  Adult.IT.PT.barcode$BC_num==2  \n)]\nAIdI_CPI_ACBI_BLAI_ECTI_LENTI &lt;- colnames(Adult.IT.PT.barcode)[which(\n  Adult.IT.PT.barcode$`AId-I`&gt;0 & Adult.IT.PT.barcode$`CP-I`&gt;0 & \n  Adult.IT.PT.barcode$`ACB-I`&gt;0 & Adult.IT.PT.barcode$`BLA-I`&gt;0 &\n  Adult.IT.PT.barcode$`ECT-I`&gt;0 & Adult.IT.PT.barcode$`ENTl-I`&gt;0 &\n  Adult.IT.PT.barcode$BC_num==6\n)]\n\nseu &lt;- subset(Adult.IT.PT.barcode, cells = c(\n  AIdI_CPI, AIdI_PLC_CPC, AIdI_CPI_CPC_AIdC, AIdI_CPI_CPC_ACBI_ACBC_AIdC,\n  AIdI_ACBI, AIdI_CPI_ACBI_BLAI_ECTI_LENTI))\nseu$Group &lt;- \"\"\nseu$Group[colnames(seu) %in% AIdI_CPI] &lt;- \"AId-I + CP-I\"\nseu$Group[colnames(seu) %in% AIdI_PLC_CPC] &lt;- \"AId-I + PL-C + CP-C\"\nseu$Group[colnames(seu) %in% AIdI_CPI_CPC_AIdC] &lt;- \"AId-I + CP-I + CP-C + AId-C\"\nseu$Group[colnames(seu) %in% AIdI_CPI_CPC_ACBI_ACBC_AIdC] &lt;- \"AId-I + CP-I + CP-C + ACB-I + ACB-C + AId-C\"\nseu$Group[colnames(seu) %in% AIdI_ACBI] &lt;- \"AId-I + ACB-I\"\nseu$Group[colnames(seu) %in% AIdI_CPI_ACBI_BLAI_ECTI_LENTI] &lt;- \"AId-I + CP-I + ACB-I + BLA-I + ECT-I + LENT-I\"\n\nexp &lt;- AverageExpression(seu, features = receptor_gene, group.by = \"Group\",\n                         assays = \"RNA\", slot = \"data\")\nexp &lt;- as.data.frame(scale(t(exp$RNA)))\n\n\n\n\nCode\nGroup_order &lt;- c(\"AId-I + CP-I\", \"AId-I + PL-C + CP-C\", \"AId-I + CP-I + CP-C + AId-C\", \"AId-I + CP-I + CP-C + ACB-I + ACB-C + AId-C\", \"AId-I + ACB-I\", \"AId-I + CP-I + ACB-I + BLA-I + ECT-I + LENT-I\")\n#DEGs &lt;- unique(DEGs$gene)\nDEGs_order &lt;- c(\"Gabra1\",\"Grin2a\",\"Gabrg2\",\"Gabra4\",\"Grm2\",\"Grin1\",\"Htr2a\",\n          \"Gabra3\",\"Chrm2\",\"Adra1b\",\"Htr5a\",\n          \"Gabbr2\",\"Sstr2\",\"Grm8\",\"Grik3\",\n          \"Npy1r\",\"Grin3a\",\"Grin2b\",\"Gria1\",\"Grik2\",\"Grm1\",\"Grm5\",\"Gabra2\",\n          \"Trhr\",\"Chrna4\",\"Cnr1\")\nbreaks &lt;- seq(-1,1,0.01)\nFigure5_D &lt;- \n  pheatmap::pheatmap(t(exp[Group_order, DEGs_order]),\n       cluster_rows = F, cluster_cols = F, border_color = \"NA\",\n       breaks = breaks,\n       color = colorRampPalette(c(\"lightblue3\", \"lightblue\", \"white\", \"red\", \"red4\"))(length(breaks)),\n       #gaps_col = c(1:5),\n       fontsize_col = 6, show_colnames = T, show_rownames = T,\n       angle_col = 45\n       )\nFigure5_D\n\n\n\n\n\n\n\n\n\n\n\nCode\nfeatures &lt;- c(\"Dbi\",\"Grp\",\"Adcyap1\",\"Nppc\",\"Npy\",\"Penk\",\"Pdyn\",\"Nos1\",\"Cck\",\"Slc17a6\",\"Slc17a7\")\nGroup_order &lt;- c(\"AId-I + CP-I\", \"AId-I + PL-C + CP-C\", \"AId-I + CP-I + CP-C + AId-C\", \"AId-I + CP-I + CP-C + ACB-I + ACB-C + AId-C\", \"AId-I + ACB-I\", \"AId-I + CP-I + ACB-I + BLA-I + ECT-I + LENT-I\")\nexp &lt;- AverageExpression(seu, features = features, group.by = \"Group\",\n                         assays = \"RNA\", slot = \"data\")\nexp &lt;- exp$RNA\nexp &lt;- as.data.frame(exp)\nexp &lt;- apply(exp, 1, function(x){x/max(x)})\nexp &lt;- as.data.frame(exp)\nexp$Group &lt;- rownames(exp)\ndf_exp &lt;- pivot_longer(exp, !Group, names_to = \"Gene\", values_to = \"EXP\")\n\npct &lt;- matrix(nrow = 6, ncol = length(features))\nrownames(pct) &lt;- rownames(exp)\ncolnames(pct) &lt;- features\nfor (i in 1:6){\n  pct[i,] &lt;- apply(seu@assays$RNA@data[features,seu$Group==rownames(pct)[i]], 1,\n                   function(x){\n                     length(which(x&gt;0))/length(x)\n                     })\n}\npct &lt;- as.data.frame(pct)\npct$Group &lt;- rownames(pct)\ndf_pct &lt;- pivot_longer(pct,!Group, names_to = \"Gene\", values_to = \"PCT\")\n\ndf &lt;- data.frame(\n  \"Group\" = df_exp$Group,\n  \"Gene\" = df_exp$Gene,\n  \"EXP\" = df_exp$EXP,\n  \"PCT\" = df_pct$PCT\n)\ndf$Group &lt;- factor(df$Group, levels = Group_order)\n\nFigure5_D &lt;- \n  Biorplot::Bior_DotPlot(\n    data = df, x = \"Gene\", y = \"Group\", size=\"PCT\", color = \"EXP\",\n    x.text.col = FALSE, ggtheme = theme_bw()) + \n  theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 5),\n        axis.text.y = element_text(size = 5),\n        legend.position = \"none\") +\n  labs(x=\"\",y=\"\") +\n  scale_color_gradientn(colours = c(\"lightblue3\", \"lightblue\", \"white\", \"red\", \"red4\")) +\n  scale_size_continuous(range = c(1,4)) +\n  coord_flip()\n\nFigure5_D\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure5/Figure5_D_dot.pdf\", plot = Figure5_D,\n       height = 3.5, width = 3.2, units = \"in\")\n\n\n\n\nCode\nggsave(\"../pdf/Figure5/Figure5_D.pdf\", plot = Figure5_D,\n       height = 4, width = 5, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Figure5</span>"
    ]
  },
  {
    "objectID": "Figure5.html#figure5_e",
    "href": "Figure5.html#figure5_e",
    "title": "5  Figure5",
    "section": "5.5 Figure5_E",
    "text": "5.5 Figure5_E\n\n\nCode\nGABA &lt;- c(\"Gabra1\",\"Gabra2\",\"Gabra3\",\"Gabra4\",\"Gabra5\",\"Gabrb1\",\"Gabrb2\",\n          \"Gabrb3\",\"Gabrd\",\"Gabrg1\",\"Gabrg2\",\"Gabrg3\",\"Gabbr1\",\"Gabbr2\")\nAMPA_NMDA &lt;- c(\"Grin1\",\"Grin2a\",\"Grin2b\",\"Grin3a\",\"Gria1\",\"Gria2\",\n               \"Gria3\",\"Gria4\")\nGrik_Grm &lt;- c(\"Grik2\",\"Grik3\",\"Grik4\",\"Grik5\",\"Grm1\",\"Grm5\",\"Grm2\",\"Grm3\",\n         \"Grm4\",\"Grm7\",\"Grm8\")\nAmines &lt;- c(\"Drd1\",\"Htr1a\",\"Htr1b\",\"Htr5a\",\"Htr2a\",\"Htr2c\",\n            \"Htr7\",\"Adra1a\",\"Adra1b\",\"Adra1d\",\"Adra2a\",\"Adra2c\",\"Adrb1\",\"Adrb3\",\n            \"Chrna4\",\"Chrnb2\",\"Chrm1\",\"Chrm3\",\"Chrm2\",\"Hrh1\",\"Hrh2\",\"Hrh3\")\nNP &lt;- c(\"Oprd1\",\"Oprl1\",\"Oprk1\",\"Oxtr\",\"Cckbr\",\"Sstr1\",\"Sstr2\",\"Sstr3\",\"Vipr1\",\n        \"Crhr1\",\"Ntsr1\",\"Ntsr2\",\"Npy1r\",\"Npy2r\",\"Npy5r\",\"Ramp1\",\"Ramp2\",\"Ramp3\",\n        \"Npr2\",\"Npr3\",\"Ednra\",\"Rxfp1\",\"Trhr\",\"Mchr1\",\"Mc4r\",\n        \"Adipor1\",\"Adipor2\",\"Cnr1\",\"Penk\",\"Pdyn\",\"Cck\",\"Sst\",\"Npy\",\n        \"Nppc\",\"Grp\",\"Adcyap1\",\"Dbi\")\n\nseu &lt;- Adult.IT.PT.barcode\n# expression\nall_gene &lt;- c(GABA,AMPA_NMDA,Grik_Grm,Amines,NP)\nall_gene_exp &lt;- AverageExpression(\n  seu, assays=\"RNA\", slot=\"data\", features=all_gene, group.by=\"Proj_subtype\"\n  )$RNA\nall_gene_exp &lt;- as.data.frame(log1p(all_gene_exp))\nall_gene_exp$cv &lt;- as.numeric(apply(all_gene_exp, 1, function(x){sd(x)/mean(x)}))\nall_gene_exp$gene_type &lt;- \"\"\nall_gene_exp$gene_type[which(rownames(all_gene_exp) %in% Amines)] &lt;- \"Amines_R\"\nall_gene_exp$gene_type[which(rownames(all_gene_exp) %in% NP)] &lt;- \"Neuropeptides_R\"\nall_gene_exp$gene_type[which(rownames(all_gene_exp) %in% Grik_Grm)] &lt;- \"mGlu_R\"\nall_gene_exp$gene_type[which(rownames(all_gene_exp) %in% GABA)] &lt;- \"GABA_R\"\nall_gene_exp$gene_type[which(rownames(all_gene_exp) %in% AMPA_NMDA)] &lt;- \"AMPA_NMDA_R\"\n\n# percentage\nall_gene_pct &lt;- as.data.frame(t(as.matrix(seu@assays$RNA@data[all_gene,])))\nall_gene_pct$Proj_subtype &lt;- seu$Proj_subtype\nall_gene_pct_mean &lt;- \n  all_gene_pct |&gt;\n  dplyr::group_by(Proj_subtype) |&gt;\n  dplyr::summarize(across(1:length(all_gene), function(x){\n    length(which(x&gt;0))/length(x)\n    })) |&gt;\n  as.data.frame()\nrownames(all_gene_pct_mean) &lt;- all_gene_pct_mean$Proj_subtype\nall_gene_pct &lt;- as.data.frame(t(all_gene_pct_mean[,-1]))\nall_gene_pct$cv &lt;- as.numeric(apply(all_gene_pct, 1, function(x){sd(x)/mean(x)}))\n\n\n\n\nCode\nITi_D = c(1,14,17,22,23,25,26,27,28,29,31)\nITi_V = c(7,8,9,10,15,16,18,19,20,21)\nITc = c(2,3,11,12,13,24,30,32,33)\nPTi = c(4,5,6)\nProj_cluster &lt;- c(ITi_D, ITi_V, ITc, PTi)\n\nGria &lt;- c(\"Gria1\",\"Gria2\",\"Gria3\",\"Gria4\")\nHtr &lt;- c(\"Htr1a\",\"Htr1b\",\"Htr1f\",\"Htr5a\",\"Htr2a\",\"Htr2c\",\"Htr4\",\"Htr7\")\ndf_plot &lt;- all_gene_pct[which(rownames(all_gene_pct) %in% c(Gria, Htr)), 1:33]\n#df_plot &lt;- as.data.frame(scale(t(df_plot)))\ndf_plot &lt;- as.data.frame(apply(df_plot, 1, function(x){scale(x,center=T,scale=F)}))\ndf_plot$proj_cluster &lt;- rownames(df_plot)\ndf_plot &lt;- pivot_longer(df_plot, !proj_cluster, names_to = \"gene\", \n                        values_to = \"value\")\ndf_plot$proj_cluster &lt;- factor(df_plot$proj_cluster, levels = Proj_cluster)\n\nFigure5_E &lt;- \n  ggplot(df_plot, aes(x=proj_cluster, y=value, color=gene, group=gene)) +\n  geom_line() +\n  geom_point(size=2) +\n  theme_classic() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        text = element_text(size = 15),\n        legend.title = element_blank()) +\n  scale_color_manual(values = c(\"#d50000\",\"#ff1644\",\"#ff5252\",\"#ff8b81\",\n                                \"#2862ff\",\"#2878ff\",\"#448bff\",\"#83b1ff\",\n                                \"#0c46a1\",\"#1265c0\",\"#1e89e5\",\"#91cbf9\")) +\n  labs(x=\"Projection subtype\", y=\"Cell percent\")\nFigure5_E\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure5/Figure5_E.pdf\", plot = Figure5_E,\n       height = 4.5, width = 8, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Figure5</span>"
    ]
  },
  {
    "objectID": "Figure5.html#figure5_f",
    "href": "Figure5.html#figure5_f",
    "title": "5  Figure5",
    "section": "5.6 Figure5_F",
    "text": "5.6 Figure5_F\n\n\nCode\ndf &lt;- data.frame(\n  gene = rownames(all_gene_exp),\n  gene_type = all_gene_exp$gene_type,\n  exp_cv = all_gene_exp$cv,\n  pct_cv = all_gene_pct$cv\n)\ndf$gene_type &lt;- factor(df$gene_type, \n                       levels = c(\"Amines_R\",\"Neuropeptides_R\",\"mGlu_R\",\n                                  \"GABA_R\",\"AMPA_NMDA_R\"))\n\n\n\n\nCode\nFigure5_F &lt;- \n  ggplot(df, aes(x=gene_type, y=exp_cv, fill=gene_type)) +\n  geom_boxplot(color=\"black\", outlier.shape = NA) +\n  scale_fill_manual(values = c(\n      \"Amines_R\"=\"#9DD0C7\", \"Neuropeptides_R\"=\"#9180AC\", \"mGlu_R\"=\"#D9BDD8\",\n      \"GABA_R\"=\"#E58579\",\"AMPA_NMDA_R\"=\"#8AB1D2\")) +\n  geom_jitter(color=\"black\", size=2, alpha=0.9) +\n  theme_classic()+\n  theme(legend.position=\"none\", text = element_text(size = 15),\n        axis.text.x = element_text(angle = 15, hjust = 1)) +\n  #geom_signif(comparisons = list(c(\"Amines\",\"GABA\"), c(\"Glu\",\"GABA\"),\n  #                               c(\"Amines\",\"Glu\")),\n  #            map_signif_level=TRUE, step_increase = 0.2) +\n  labs(x='',y='Expression coefficient of variation') +\n  ylim(0,1)\nFigure5_F\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure5/Figure5_F.pdf\", plot = Figure5_F,\n       height = 4, width = 5, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Figure5</span>"
    ]
  },
  {
    "objectID": "Figure5.html#figure5_g",
    "href": "Figure5.html#figure5_g",
    "title": "5  Figure5",
    "section": "5.7 Figure5_G",
    "text": "5.7 Figure5_G\n\n\nCode\nFigure5_G &lt;- \n  ggplot(df, aes(x=gene_type, y=pct_cv, fill=gene_type)) +\n  geom_boxplot(color=\"black\", outlier.shape = NA) +\n  scale_fill_manual(values = c(\n      \"Amines_R\"=\"#9DD0C7\", \"Neuropeptides_R\"=\"#9180AC\", \"mGlu_R\"=\"#D9BDD8\",\n      \"GABA_R\"=\"#E58579\",\"AMPA_NMDA_R\"=\"#8AB1D2\")) +\n  geom_jitter(color=\"black\", size=2, alpha=0.9) +\n  theme_classic()+\n  theme(legend.position=\"none\", text = element_text(size = 15),\n        axis.text.x = element_text(angle = 15, hjust = 1)) +\n  #geom_signif(comparisons = list(c(\"Amines\",\"GABA\"), c(\"Glu\",\"GABA\"),\n  #                               c(\"Amines\",\"Glu\")),\n  #            map_signif_level=TRUE, step_increase = 0.2) +\n  labs(x='',y='Percent coefficient of variation') +\n  ylim(0,1)\nFigure5_G\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure5/Figure5_G.pdf\", plot = Figure5_G,\n       height = 4, width = 5, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Figure5</span>"
    ]
  },
  {
    "objectID": "Figure5.html#figure5_h",
    "href": "Figure5.html#figure5_h",
    "title": "5  Figure5",
    "section": "5.8 Figure5_H",
    "text": "5.8 Figure5_H\n\n\nCode\nknitr::include_graphics(\"images/Figure5_H.png\", dpi = 300)",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Figure5</span>"
    ]
  },
  {
    "objectID": "Figure5.html#figure5_i",
    "href": "Figure5.html#figure5_i",
    "title": "5  Figure5",
    "section": "5.9 Figure5_I",
    "text": "5.9 Figure5_I\n\n\nCode\nseu &lt;- sp.PFC\ndf &lt;- seu@meta.data[,c(\"X\",\"Y\",\"slice\",\"BC_num\")]\ndf &lt;- df[which(df$slice==\"IT_slice_15\"),]\n\nrf &lt;- colorRampPalette(rev(brewer.pal(11,'Spectral')))\ncolormap &lt;- colorRampPalette(rev(brewer.pal(11,'Spectral')))(32)\n\nFigure5_I &lt;- \n  ggplot(df[df$BC_num&gt;4,], aes(X, Y)) +\n  stat_density2d(geom = \"raster\", aes(fill = ..density..), contour = FALSE, \n                 bins = 15) +\n  #geom_density_2d_filled(contour_var = \"count\",bins = 15) +\n  #geom_density_2d(bins = 15, colour=\"black\", alpha=0.8) +\n  scale_fill_gradientn(colours = c(\"black\",\"black\",colormap)) +\n  theme_void() +\n  coord_fixed()\nFigure5_I\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure5/Figure5_I.pdf\", plot = Figure5_I,\n       height = 4, width = 4, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Figure5</span>"
    ]
  },
  {
    "objectID": "Figure5.html#figure5_j",
    "href": "Figure5.html#figure5_j",
    "title": "5  Figure5",
    "section": "5.10 Figure5_J",
    "text": "5.10 Figure5_J\n\n\nCode\nseu &lt;- Adult.IT.PT.barcode\nIdents(seu) &lt;- \"SubType\"\n\nDEGs &lt;- FindMarkers(\n  seu, ident.1=\"L5_IT_1\", features=c(receptor_gene, NTNP_gene),\n  logfc.threshold = 0, only.pos = T)\nDEGs$Type &lt;- \"\"\nDEGs$Type[which(rownames(DEGs) %in% receptor_gene)] &lt;- \"receptor\"\nDEGs$Type[which(rownames(DEGs) %in% NTNP_gene)] &lt;- \"NT/NP\"\nlabel &lt;- c(\"Slc17a7\",\"Adcyap1\",\n           \"Sstr2\",\"Gabra5\",\"Grm3\",\"Adra1b\",\"Gabrg2\",\"Grm2\",\"Grik3\",\"Chrna4\",\"Gabra1\",\"Grm8\",\"Cnr1\")\nDEGs$label &lt;- \"\"\nDEGs$label[match(label, rownames(DEGs))] &lt;- label\n\nFigure5_J &lt;- \n  ggplot(DEGs, aes(x=avg_log2FC, y= -log10(p_val_adj))) +\n    geom_point(aes(fill=Type), shape=21, color=\"black\" , size=3) +\n    geom_text_repel(aes(label=label, color=Type), size=5, max.overlaps=100) +\n    theme_classic() +\n    theme(plot.title = element_text(size = 20, hjust = 0.5),\n          text = element_text(size = 15), legend.position = \"none\") +\n    scale_fill_manual(values = c(\"receptor\"=\"#E58579\", \"NT/NP\"=\"#8AB1D2\")) +\n    scale_color_manual(values = c(\"receptor\"=\"#E58579\", \"NT/NP\"=\"#8AB1D2\")) +\n    #xlim(0, x_max) +\n    ylim(0,max(-log10(DEGs$p_val_adj))) +\n    scale_x_continuous(breaks=c(0,0.5,1,1.5), limits = c(0,0.5)) +\n    labs(title = \"L5_IT_1 enriched gene\", x = 'log2FC', y = '-log10(P value)')\nFigure5_J\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure5/Figure5_J.pdf\", plot = Figure5_J,\n       height = 4, width = 5, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Figure5</span>"
    ]
  },
  {
    "objectID": "Figure6.html",
    "href": "Figure6.html",
    "title": "6  Figure6",
    "section": "",
    "text": "6.1 Figure6_A\nCode\n# gene_order\nPTi_gene &lt;- c(\n  \"Sema3e\",\"Sema3c\",\"Spon1\",\"Sdk2\",\"Cntfr\",\"Cntn1\",\"Ntng1\",\"Cdh6\",\"Emb\",\"Cdh20\",\n  \"Ctnna2\",\"Flrt1\",\"Fam19a1\",\"Rgma\",\"Igfbp4\",\"Ephb1\",\"Disp2\",\"Celsr2\",\"Sema6d\",\n  \"Tpbg\",\"Dscaml1\",\"Kirrel3\",\"Wnt5a\",\"Fgfr1\",\"Cntnap5b\",\"Cntnap2\",\"Cdh22\",\"Nrp1\",\n  \"Nrxn3\",\"Ntrk3\",\"Nrcam\",\"Opcml\",\"Clstn3\",\"Cntn2\",\"Cntnap1\",\"Ephb3\",\"Lrrn1\",\"Epha7\"\n  )\nITi_D_gene &lt;- c(\n  \"Robo2\",\"Clstn1\",\"Lrrc8b\",\"Camk2g\",\"Ntm\",\"Tspan5\",\"Dkk3\",\"Cadm4\",\"Pcdh7\",\"Sema7a\",\n  \"Cadm2\",\"Cbln2\",\"Frzb\",\"Tyro3\",\"Rtn4\",\"Ppp3ca\",\"Cdh12\",\"Fstl4\",\"Nptx2\",\"Lingo1\",\n  \"Pcdh9\",\"Unc5d\",\"Il1rap\",\"Rtn4r\",\"Nptx1\",\"Plxna4\",\"Cdh9\",\"Bmp3\",\"Crtac1\",\"Nrp2\",\n  \"Ptprt\",\"Jund\",\"Ubb\",\"Camk1\",\"Lrrc4c\",\"Pcdh15\",\"Matn2\",\"Il1rapl1\"\n  )\nITi_V_gene &lt;- c(\n  \"Edil3\",\"Epha4\",\"Cadm3\",\"Col25a1\",\"Ptprk\",\"Islr2\",\"Lrp8\",\"Il1rapl2\",\"Cdh10\",\"Nbl1\",\n  \"Lrrc4\",\"Ptprd\",\"Coch\",\"Plxnd1\",\"Ptgfrn\",\"Dkkl1\",\"Fat3\",\"Vstm2a\",\"Efnb2\",\"Cdh2\",\n  \"Ncam2\",\"Lsamp\",\"Pcdh10\",\"Sema3d\",\"Rspo2\",\"Jun\",\"Smoc2\",\"Car4\",\"Sdc3\",\"C1ql3\",\n  \"Plxnc1\",\"Cdh13\",\"Efnb3\",\"Nov\",\"Cadm1\"\n)\ngene_order &lt;- c(PTi_gene,ITi_D_gene,ITi_V_gene)\n\n# annotation_col\nITi_D &lt;- c(\"1\",\"14\",\"17\",\"22\",\"23\",\"25\",\"26\",\"27\",\"28\",\"29\",\"31\")\nITi_V &lt;- c(\"7\",\"8\",\"9\",\"10\",\"15\",\"16\",\"18\",\"19\",\"20\",\"21\")\nITc &lt;- c(\"2\",\"3\",\"11\",\"12\",\"13\",\"24\",\"30\",\"32\",\"33\")\nPTi &lt;- c(\"4\",\"5\",\"6\")\nProj_subtype_order &lt;- as.character(c(PTi,ITi_D,ITi_V))\n\navg_exp &lt;- AverageExpression(seu, features = gene_order, group.by = 'Proj_subtype',\n                             assays = \"RNA\", slot = \"data\")\navg_exp &lt;- avg_exp$RNA\navg_exp_zscore &lt;- as.matrix(scale(t(avg_exp)))\n\nannotation_col = data.frame(\n  Gene_module = rep(c(\"module1\",\"module2\",\"module3\"),\n                    c(length(PTi_gene),length(ITi_D_gene),length(ITi_V_gene))),\n  row.names = gene_order\n)\nannotation_col$Gene_type &lt;- \"\"\nannotation_col$Gene_type[which(rownames(annotation_col) %in% AGMs)] &lt;- \"AGMs\"\nannotation_col$Gene_type[which(rownames(annotation_col) %in% CAMs)] &lt;- \"CAMs\"\n\n# annotation_row\nannotation_row = data.frame(\n  Projection_module = factor(rep(c(\"PTi\", \"ITi-D\", \"ITi-V\"), c(3, 11, 10)),\n                  levels = c(\"PTi\", \"ITi-D\", \"ITi-V\")),\n  row.names = Proj_subtype_order\n)\n\n# ann_color\nann_colors = list(\n  Projection_module = c('PTi'='#d62728','ITi-D'='#1f77b4','ITi-V'='#ff7f0e'),\n  Gene_type = c(\"AGMs\"=\"#8ebbda\",\"CAMs\"=\"#e99496\"),\n  Gene_module = c('module1'=\"#ff6666\",'module2'=\"#6666ff\",'module3'='#FDAE6BFF')\n)\n\n#dist = dist(t(avg_exp_zscore[Proj_subtype_order,gene_order]))\n#hclust &lt;- hclust(dist)\n#dend = reorder(as.dendrogram(hclust), wts=1:length(gene_order))\n#col_cluster &lt;- as.hclust(dend)\n#col_cluster$order &lt;- 1:length(gene_order)\n\nbreaks &lt;- seq(-2,2,0.01)\nFigure6_A &lt;- \n  pheatmap::pheatmap(avg_exp_zscore[Proj_subtype_order, gene_order],\n         cluster_rows = F, cluster_cols = F, border_color = \"grey60\",\n         breaks = breaks,\n         color = colorRampPalette(c(\"navy\", \"white\",\"firebrick3\"))(length(breaks)),\n         annotation_row = annotation_row, annotation_col = annotation_col,\n         annotation_colors = ann_colors,\n         gaps_col = c(38,76),\n         gaps_row = c(3,14,24),\n         fontsize_col = 6, show_colnames = F,\n         annotation_names_row=F,annotation_names_col=F\n         )\nCode\nggsave(\"../pdf/Figure6/Figure6_A.pdf\", plot = Figure6_A,\n       height = 4, width = 10, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Figure6</span>"
    ]
  },
  {
    "objectID": "Figure6.html#figure6_b",
    "href": "Figure6.html#figure6_b",
    "title": "6  Figure6",
    "section": "6.2 Figure6_B",
    "text": "6.2 Figure6_B\n\n\nCode\nseu &lt;- Adult.IT.PT.barcode\nIdents(seu) &lt;- \"Proj_module\"\nDEGs &lt;- FindAllMarkers(seu, features=all_gene, logfc.threshold = 0)\n#DEGs$p_val_adj[which(DEGs$p_val_adj==0)] &lt;- 1e-290\n\nall_gene_DEGs &lt;- DEGs[which(DEGs$avg_log2FC&gt;0),]\nall_gene_DEGs$gene_type &lt;- \"\"\nall_gene_DEGs$gene_type[which(all_gene_DEGs$gene %in% AGMs)] &lt;- \"AGMs\"\nall_gene_DEGs$gene_type[which(all_gene_DEGs$gene %in% CAMs)] &lt;- \"CAMs\"\n\n\n\n\nCode\nproj_module &lt;- c(\"PTi\",\"ITi-D\",\"ITi-V\")\nplist &lt;- list()\nfor (i in 1:3){\n  DEGs_module &lt;- all_gene_DEGs[all_gene_DEGs$cluster == proj_module[i],]\n  top10_gene &lt;- DEGs_module$gene[order(DEGs_module$p_val_adj)][1:5]\n  DEGs_module$label &lt;- \"\"\n  DEGs_module$label[match(top10_gene, DEGs_module$gene)] &lt;- top10_gene\n  if (i==1){\n    x_max &lt;- 2.2\n  }else{\n    x_max &lt;- 1\n  }\n  plist[[i]] &lt;- \n    ggplot(DEGs_module, aes(x=avg_log2FC, y= -log10(p_val_adj))) +\n    geom_point(aes(fill=gene_type), shape=21, color=\"black\" , size=3) +\n    #geom_vline(aes(xintercept=0), colour=\"black\", linetype=\"dashed\", \n    #           linewidth = 0.5) +\n    geom_text_repel(aes(label=label, color=gene_type), size=5, max.overlaps=100) +\n    theme_classic() +\n    theme(plot.title = element_text(size = 20, hjust = 0.5),\n          text = element_text(size = 15), legend.position = \"none\") +\n    scale_fill_manual(values = c(\"AGMs\"=\"#8ebbda\",\"CAMs\"=\"#e99496\")) +\n    scale_color_manual(values = c(\"AGMs\"=\"#8ebbda\",\"CAMs\"=\"#e99496\")) +\n    #xlim(0, x_max) +\n    ylim(0,max(-log10(DEGs_module$p_val_adj))) +\n    scale_x_continuous(breaks=c(0,0.5,1,1.5,2), limits = c(0,x_max)) +\n    labs(title = proj_module[i], x = 'log2FC', y = '-log10(P value)')\n}\nFigure6_B &lt;- plot_grid(plotlist = plist, ncol = 3)\nFigure6_B\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure6/Figure6_B.pdf\", plot = Figure6_B,\n       height = 3, width = 9, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Figure6</span>"
    ]
  },
  {
    "objectID": "Figure6.html#figure6_c",
    "href": "Figure6.html#figure6_c",
    "title": "6  Figure6",
    "section": "6.3 Figure6_C",
    "text": "6.3 Figure6_C\n\n\nCode\nBarcode &lt;- c('VIS-I','SSp-I','CP-I','AUD-I','RSP-I',\n             'BLA-I','ACB-I','ENTl-I','AId-I','ECT-I',\n             'ACB-C','PL-C','ECT-C','ENTl-C',\n             'BLA-C','CP-C','AId-C','RSP-C',\n             'MD-I','RE-I','DR-I','VTA-I','LHA-I','SC-I')\nEx_BC_mat &lt;- Adult.Ex.barcode@meta.data[,Barcode]\nEx_BC_mat[is.na(Ex_BC_mat)] &lt;- 0\nEx_BC_mat &lt;- scale(Ex_BC_mat)\nEx_BC_mat &lt;- Ex_BC_mat[Adult.Ex.barcode$BC_num &gt; 1,]\n#set.seed(20230321)\nset.seed(20240422)\numap_out &lt;- umap(Ex_BC_mat)\numap_result &lt;- as.data.frame(umap_out$layout)\ncolnames(umap_result) = c(\"UMAP_1\",\"UMAP_2\")\n\nseu &lt;- subset(Adult.Ex.barcode, cells = rownames(umap_result))\nseu@reductions$umap@cell.embeddings[,\"UMAP_1\"] &lt;- umap_result$UMAP_1\nseu@reductions$umap@cell.embeddings[,\"UMAP_2\"] &lt;- umap_result$UMAP_2\n\ngene &lt;- c(\"Igfbp4\",\"Pcdh7\",\"Cdh13\")\nplist &lt;- list()\nfor (i in 1:3){\n  plist[[i]] &lt;- Plot_Density_Custom(seurat_object = seu, features = gene[i],\n                    viridis_palette = \"magma\") +\n    theme_void() +\n    theme(plot.title = element_text(hjust = 0.5, size = 25)) +\n    coord_fixed()\n}\nFigure6_C &lt;- plot_grid(plotlist = plist, nrow = 1)\nFigure6_C\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure6/Figure6_C.pdf\", plot = Figure6_C,\n       height = 3, width = 9, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Figure6</span>"
    ]
  },
  {
    "objectID": "Figure6.html#figure6_d",
    "href": "Figure6.html#figure6_d",
    "title": "6  Figure6",
    "section": "6.4 Figure6_D",
    "text": "6.4 Figure6_D\n\n\nCode\ngene &lt;- c(PTi_gene, ITi_D_gene, ITi_V_gene)\ngene_BC_mat &lt;- as.data.frame(seu@assays$RNA@data[gene,])\ngene_BC_mat$Gene_module &lt;- rep(c('module 1','module 2','module 3'),\n                               c(length(PTi_gene), length(ITi_D_gene),\n                                 length(ITi_V_gene)))\ngene_BC_mat &lt;- \n  gene_BC_mat |&gt;\n  group_by(Gene_module) |&gt;\n  dplyr::summarize(across(1:ncol(seu), mean)) |&gt;\n  as.data.frame()\nrownames(gene_BC_mat) &lt;- gene_BC_mat$Gene_module\ngene_BC_mat &lt;- t(gene_BC_mat[,2:ncol(gene_BC_mat)])\ngene_BC_mat &lt;- cbind(\n  gene_BC_mat,\n  seu@meta.data[,c('PTi_score','ITi_D_score','ITi_V_score')]\n  )\ncolnames(gene_BC_mat)[4:6] &lt;- c('PTi', 'ITi-D', 'ITi-V')\n\nGene_module &lt;- c('module 1','module 2','module 3')\nProj_module &lt;- c('PTi', 'ITi-D', 'ITi-V')\n#Proj_module &lt;- c('ITi-D', 'ITi-V', 'PTi')\n#Proj_module &lt;- c('ITi-V', 'PTi', 'ITi-D')\nplist &lt;- list()\nfor (i in 1:3){\n  df_i &lt;- gene_BC_mat[,c(Gene_module[i],'PTi', 'ITi-D', 'ITi-V')]\n  df_i &lt;- df_i[df_i[,1]&gt;0,]\n  df_i[,'exp_order'] &lt;- rank(df_i[,1])\n  df_i[,'bin'] &lt;- cut(\n    df_i[,'exp_order'],\n    seq(1, max(df_i[,'exp_order']), length.out=11),\n    labels = c(1:10))\n  df_i &lt;- \n    df_i |&gt;\n    group_by(bin) |&gt;\n    dplyr::summarize(across(2:4, ~ mean(.x, na.rm = TRUE)))\n  df_i_norm &lt;- as.data.frame(apply(df_i[1:10,2:ncol(df_i)],2,function(x){\n    (x-min(x))/(max(x)-min(x))\n    }))\n  df_i_norm$x &lt;- df_i$bin[1:10]\n  df_i_norm &lt;- \n    df_i_norm |&gt;\n    pivot_longer(!x, names_to = 'Target', values_to = \"Value\")\n  df_i_norm$x &lt;- as.numeric(df_i_norm$x)\n  df_i_norm$Target &lt;- factor(\n    df_i_norm$Target, \n    levels = c('PTi','ITi-D','ITi-V')\n    )\n  df_i_norm &lt;- df_i_norm[which(df_i_norm$Target==Proj_module[i]),]\n  \n  cor &lt;- cor.test(df_i_norm$x, df_i_norm$Value, \"two.sided\", \"pearson\")\n  R &lt;- round(cor$estimate,2)\n  P &lt;- format(cor$p.value, digits = 2)\n  \n  plist[[i]] &lt;- \n    ggplot(df_i_norm, aes(x=x, y=Value, color=Target)) +\n    geom_line(linewidth=1) +\n    geom_point(aes(fill=Target),shape=21, color=\"black\" , size=3) +\n    geom_text(x=1, y=0.95, label = paste('R =',R,'\\nP =',P,sep=' '), hjust=0,\n              color=\"black\") +\n    scale_x_continuous(breaks = c(1,5,10), \n                       labels = c(\"10%\",\"50%\",\"100%\")) +\n    scale_color_manual(values = col_Proj_module) +\n    scale_fill_manual(values = col_Proj_module) +\n    labs(x=paste(Gene_module[i],\"expression\"), \n         y=paste(Proj_module[i],\"projection strength\"), \n         title=paste(Gene_module[i])) +\n    theme_classic() + \n    theme(legend.position=\"none\", plot.title = element_text(hjust = 0.5, size = 20),\n          text = element_text(size = 10))\n}\n\nFigure6_D &lt;- plot_grid(plotlist = plist, nrow = 1)\nFigure6_D\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure6/Figure6_D.pdf\", plot = Figure6_D,\n       height = 3, width = 8, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Figure6</span>"
    ]
  },
  {
    "objectID": "Figure6.html#figure6_e",
    "href": "Figure6.html#figure6_e",
    "title": "6  Figure6",
    "section": "6.5 Figure6_E",
    "text": "6.5 Figure6_E\n\n\nCode\nload(\"../data/csv/CAMs_AGMs/CAMs_AGMs.hdwgcna.RData\")\n\n\n\n\nCode\nset.seed(20240703)\nmodules &lt;- GetModules(seu.hdwgcna.AGMs_CAMs)\nmods &lt;- levels(modules$module)\nmods &lt;- mods[mods != 'grey']\n\nFigure6_E &lt;- \n  HubGeneNetworkPlot(\n  seu.hdwgcna.AGMs_CAMs,\n  n_hubs = 10, n_other=100,\n  edge_prop = 0.8,\n  edge.alpha = 0.8,\n  mods = mods,  \n  return_graph=FALSE\n)\n\n\n[1] \"turquoise\" \"grey90\"    \"yellow\"    \"green\"     \"blue\"      \"brown\"",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Figure6</span>"
    ]
  },
  {
    "objectID": "Figure6.html#figure6_f",
    "href": "Figure6.html#figure6_f",
    "title": "6  Figure6",
    "section": "6.6 Figure6_F",
    "text": "6.6 Figure6_F\n\n\nCode\nBarcode_order &lt;- c(\"MD-I\",\"RE-I\",\"DR-I\",\"VTA-I\",\"LHA-I\",\"SC-I\", \n                   \"VIS-I\",\"SSp-I\",\"CP-I\",\"AUD-I\",\"RSP-I\",\n                   \"BLA-I\",\"ACB-I\",\"ENTl-I\",\"AId-I\",\"ECT-I\",\n                   \"ACB-C\",\"PL-C\",\"ECT-C\",\"ENTl-C\",\"BLA-C\",\"CP-C\",\"AId-C\",\"RSP-C\")\nEx_BC_mat &lt;- all.Adult@meta.data[colnames(seu.hdwgcna.AGMs_CAMs), Barcode_order]\nEx_BC_mat &lt;- log1p(10000*Ex_BC_mat/seu.hdwgcna.AGMs_CAMs$nCount_RNA)\n\n# module ME\nm_obj &lt;- GetMetacellObject(seu.hdwgcna.AGMs_CAMs)\nMEs &lt;- GetMEs(seu.hdwgcna.AGMs_CAMs, harmonized=FALSE)\nMEs &lt;- MEs[,-grep('grey',colnames(MEs))]\n# metacell module ME\nmeta_MEs &lt;- matrix(nrow = nrow(m_obj@meta.data), ncol = ncol(MEs))\nrownames(meta_MEs) &lt;- rownames(m_obj@meta.data)\ncolnames(meta_MEs) &lt;- colnames(MEs)\n# metacell Barcode\nmeta_BCs &lt;- matrix(nrow = nrow(m_obj@meta.data), ncol = length(Barcode_order))\nrownames(meta_BCs) &lt;- rownames(m_obj@meta.data)\ncolnames(meta_BCs) &lt;- Barcode_order\nfor (i in 1:nrow(meta_MEs)){\n  meta_MEs[i,] &lt;- colMeans(MEs[strsplit(m_obj$cells_merged[[i]], ',')[[1]],], na.rm = T)\n  meta_BCs[i,] &lt;- colMeans(Ex_BC_mat[strsplit(m_obj$cells_merged[[i]], ',')[[1]],], na.rm = T)\n}\nmeta_BCs[is.nan(meta_BCs)] &lt;- NA\n# coorelation between module ME and Barcode\nmeta_R &lt;- matrix(nrow = 5, ncol = length(Barcode_order))\nrownames(meta_R) &lt;- c(\"M1\",\"M2\",\"M3\",\"M4\",\"M5\")\ncolnames(meta_R) &lt;- Barcode_order\nmeta_P &lt;- meta_R\nfor (i in 1:5){\n  for (j in 1:24){\n    cor &lt;- cor.test(meta_MEs[,rownames(meta_R)[i]], meta_BCs[,colnames(meta_R)[j]],\n                    \"two.sided\", \"pearson\")\n    meta_R[i,j] &lt;- round(cor$estimate,2)\n    meta_P[i,j] &lt;- format(cor$p.value, digits = 2)\n  }\n}\nmeta_R &lt;- as.data.frame(meta_R)\nmeta_R$Module &lt;- rownames(meta_R)\ndf_meta_R &lt;- pivot_longer(meta_R, !Module, names_to = \"Target\", values_to = \"R\")\nmeta_P &lt;- as.data.frame(meta_P)\nmeta_P$Module &lt;- rownames(meta_P)\ndf_meta_P &lt;- pivot_longer(meta_P, !Module, names_to = \"Target\", values_to = \"Pvalue\")\ndf &lt;- data.frame(\n  \"Module\" = df_meta_R$Module,\n  \"Target\" = df_meta_R$Target,\n  \"R\" = as.numeric(df_meta_R$R),\n  \"Pvalue\" = as.numeric(df_meta_P$Pvalue)\n)\ndf$Log_Pvalue &lt;- -log10(df$Pvalue)\n\n\n\n\nCode\nBarcode &lt;- c(\"VIS-I\",\"SSp-I\",\"CP-I\",\"AUD-I\",\"RSP-I\",\n             \"BLA-I\",\"ACB-I\",\"ENTl-I\",\"AId-I\",\"ECT-I\",\n             \"ACB-C\",\"PL-C\",\"ECT-C\",\"ENTl-C\",\"BLA-C\",\"CP-C\",\"AId-C\",\"RSP-C\",\n             \"MD-I\",\"RE-I\",\"DR-I\",\"VTA-I\",\"LHA-I\",\"SC-I\")\ndf$Target &lt;- factor(df$Target, levels = Barcode)\ndf$Module &lt;- factor(df$Module, levels = rev(c(\"M1\",\"M2\",\"M3\",\"M4\",\"M5\")))\ndf$label &lt;- \"\"\ndf$label[which(df$R&gt;0 & df$Pvalue &lt; 0.05)] &lt;- \"*\"\ndf$label[which(df$R&gt;0 & df$Pvalue &lt; 0.01)] &lt;- \"**\"\ndf$label[which(df$R&gt;0 & df$Pvalue &lt; 0.001)] &lt;- \"***\"\n\nbreaks &lt;- seq(-0.5,0.5,0.01)\ndf$R[which(df$R &lt; -0.5)] &lt;- -0.5\ndf$R[which(df$R &gt; 0.5)] &lt;- 0.5\nFigure6_F &lt;- \n  ggplot(df, aes(x=Target, y=Module, fill=R)) +\n  geom_tile(color=\"gray\", size=0.5) +\n  geom_text(aes(label=label),col =\"black\",size = 4) +\n  #geom_vline(xintercept = c(1.5:23.5), size=1, color=\"lightgray\") +\n  scale_fill_gradientn(limits=c(-0.5,0.5), colours = colorRampPalette(c(\"navy\",\"white\",\"firebrick3\"))(100), na.value=\"firebrick3\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = -90, hjust = 0, vjust = 0.5, size = 15), \n        axis.text.y = element_text(size = 15),\n        panel.grid = element_blank()) +\n  labs(x=\"\", y=\"\")\nFigure6_F\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure6/Figure6_F.pdf\", plot = Figure6_F,\n       height = 4, width = 8, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Figure6</span>"
    ]
  },
  {
    "objectID": "Figure6.html#figure6_g",
    "href": "Figure6.html#figure6_g",
    "title": "6  Figure6",
    "section": "6.7 Figure6_G",
    "text": "6.7 Figure6_G\n\n\nCode\nseu &lt;- seu.hdwgcna.AGMs_CAMs\ndf &lt;- as.data.frame(seu@reductions$umap@cell.embeddings)\ndf$M2 &lt;- seu@misc$AGMs_CAMs$MEs$M2\ndf$M4 &lt;- seu@misc$AGMs_CAMs$MEs$M4\ndf$`AId-I` &lt;- seu$`AId-I`\ndf$`AId-I`[is.na(df$`AId-I`)] &lt;- 0\ndf$`CP-C` &lt;- seu$`CP-C`\ndf$`CP-C`[is.na(df$`CP-C`)] &lt;- 0\ndf &lt;- df[which(seu$Ex_subtype==\"IT\"),]\ndf &lt;- df[df$UMAP_1 &lt; 2 & df$UMAP_2 &gt; -3,]\n\n\n\n\nCode\nFigure6_G_1 &lt;- \n  ggplot() +\n  geom_point(df, mapping = aes(x = UMAP_1, y = UMAP_2), color=\"lightgray\", size=1) +\n  geom_pointdensity(df[which(df$M4&gt;0),], mapping = aes(x = UMAP_1, y = UMAP_2), size=1) +\n  scale_color_gradientn(colours = c(\"lightgray\",\"white\",\"blue\"),\n                        na.value = \"blue\",\n                        limits = c(0,50),\n                        breaks = c(0,50)\n                        ) +\n  coord_fixed() +\n  theme_bw() +\n  labs(title = \"M4\", x=\"\", y=\"\", colour = \"\") +\n  theme(plot.title = element_text(hjust = 0.5, size = 20),\n        axis.ticks = element_blank(), axis.text = element_blank(),\n        panel.grid = element_blank(),\n        legend.position = \"right\",\n        legend.key.width  = unit(0.5, \"lines\"),\n        legend.key.height = unit(2, \"lines\"))\nFigure6_G_1\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure6/Figure6_G_1.pdf\", plot = Figure6_G_1,\n       height = 3, width = 6, units = \"in\")\n\n\n\n\nCode\nFigure6_G_2 &lt;- \n  ggplot() +\n  geom_point(df, mapping = aes(x = UMAP_1, y = UMAP_2), color=\"lightgray\", size=1) +\n  geom_pointdensity(df[which(df$`CP-C`&gt;0),], mapping = aes(x = UMAP_1, y = UMAP_2), size=1) +\n  scale_color_gradientn(colours = c(\"lightgray\",\"white\",\"red\"),\n                        na.value = \"red\",\n                        limits = c(0,50),\n                        breaks = c(0,50)\n                        ) +\n  coord_fixed() +\n  theme_bw() +\n  labs(title = \"CP-C\", x=\"\", y=\"\", colour = \"\") +\n  theme(plot.title = element_text(hjust = 0.5, size = 20),\n        axis.ticks = element_blank(), axis.text = element_blank(),\n        panel.grid = element_blank(),\n        legend.position = \"right\",\n        legend.key.width  = unit(0.5, \"lines\"),\n        legend.key.height = unit(2, \"lines\"))\nFigure6_G_2\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure6/Figure6_G_2.pdf\", plot = Figure6_G_2,\n       height = 3, width = 6, units = \"in\")\n\n\n\n\nCode\ndf_cor &lt;- df[which(df$`CP-C`&gt;0),]\ndf_cor[,'exp_order'] &lt;- rank(df_cor$M4)\ndf_cor[,'bin'] &lt;- cut(\n  df_cor[,'exp_order'],\n  seq(1, max(df_cor[,'exp_order']), length.out=11),\n  labels = c(1:10)\n  )\ndf_cor &lt;- \n  df_cor |&gt;\n    group_by(bin) |&gt;\n    dplyr::summarize(across(3:6, ~ mean(.x, na.rm = TRUE)))\n\ndf_cor_norm &lt;- as.data.frame(apply(df_cor[1:10,2:ncol(df_cor)],2,function(x){\n    (x-min(x))/(max(x)-min(x))\n    }))\ndf_cor_norm$x &lt;- df_cor$bin[1:10]\n\ncor &lt;- cor.test(df_cor_norm$M4, df_cor_norm$`CP-C`, \"two.sided\", \"pearson\")\nR &lt;- round(cor$estimate,2)\nP &lt;- format(cor$p.value, digits = 2)\n\nFigure6_G_3 &lt;- \n  ggplot(df_cor_norm, aes(x=x, y=`CP-C`, group=1)) +\n    geom_line(linewidth=1, color=\"blue\") +\n    geom_point(fill=\"blue\",shape=21, color=\"black\" , size=3) +\n    geom_text(x=1, y=0.95, label = paste('R =',R,'\\nP =',P,sep=' '), hjust=0,\n              color=\"black\") +\n    scale_x_discrete(breaks = c(1,5,10), \n                     labels = c(\"10%\",\"50%\",\"100%\")) +\n    #scale_color_manual(values = col_Proj_module) +\n    #scale_fill_manual(values = col_Proj_module) +\n    labs(x=paste(\"M4 Eigengenes\"), \n         y=paste(\"CP-C projection strength\"), \n         title=\"\") +\n    theme_classic() + \n    theme(legend.position=\"none\", plot.title = element_text(hjust = 0.5, size = 20),\n          text = element_text(size = 10))\nFigure6_G_3\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure6/Figure6_G_3.pdf\", plot = Figure6_G_3,\n       height = 4, width = 4, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Figure6</span>"
    ]
  },
  {
    "objectID": "Figure6.html#figure6_h",
    "href": "Figure6.html#figure6_h",
    "title": "6  Figure6",
    "section": "6.8 Figure6_H",
    "text": "6.8 Figure6_H\n\n\nCode\nseu &lt;- seu.hdwgcna.AGMs_CAMs\ndf &lt;- as.data.frame(seu@reductions$umap@cell.embeddings)\ndf$M2 &lt;- seu@misc$AGMs_CAMs$MEs$M2\ndf$M4 &lt;- seu@misc$AGMs_CAMs$MEs$M4\ndf$`AId-I` &lt;- seu$`AId-I`\ndf$`AId-I`[is.na(df$`AId-I`)] &lt;- 0\ndf$`CP-C` &lt;- seu$`CP-C`\ndf$`CP-C`[is.na(df$`CP-C`)] &lt;- 0\ndf &lt;- df[which(seu$Ex_subtype==\"IT\"),]\ndf &lt;- df[df$UMAP_1 &lt; 2 & df$UMAP_2 &gt; -3,]\n\n\n\n\nCode\nFigure6_H_1 &lt;- \n  ggplot() +\n  geom_point(df, mapping = aes(x = UMAP_1, y = UMAP_2), color=\"lightgray\", size=1) +\n  geom_pointdensity(df[which(df$M2&gt;0),], mapping = aes(x = UMAP_1, y = UMAP_2), size=1) +\n  scale_color_gradientn(colours = c(\"lightgray\",\"white\",\"yellow\"),\n                        na.value = \"yellow\",\n                        limits = c(0,50),\n                        breaks = c(0,50)\n                        ) +\n  coord_fixed() +\n  theme_bw() +\n  labs(title = \"M2\", x=\"\", y=\"\", colour = \"\") +\n  theme(plot.title = element_text(hjust = 0.5, size = 20),\n        axis.ticks = element_blank(), axis.text = element_blank(),\n        panel.grid = element_blank(),\n        legend.position = \"right\",\n        legend.key.width  = unit(0.5, \"lines\"),\n        legend.key.height = unit(2, \"lines\"))\nFigure6_H_1\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure6/Figure6_H_1.pdf\", plot = Figure6_H_1,\n       height = 3, width = 6, units = \"in\")\n\n\n\n\nCode\nFigure6_H_2 &lt;- \n  ggplot() +\n  geom_point(df, mapping = aes(x = UMAP_1, y = UMAP_2), color=\"lightgray\", size=1) +\n  geom_pointdensity(df[which(df$`AId-I`&gt;0),], mapping = aes(x = UMAP_1, y = UMAP_2), size=1) +\n  scale_color_gradientn(colours = c(\"lightgray\",\"white\",\"red\"),\n                        na.value = \"red\",\n                        limits = c(0,50),\n                        breaks = c(0,50)\n                        ) +\n  coord_fixed() +\n  theme_bw() +\n  labs(title = \"AId-I\", x=\"\", y=\"\", colour = \"\") +\n  theme(plot.title = element_text(hjust = 0.5, size = 20),\n        axis.ticks = element_blank(), axis.text = element_blank(),\n        panel.grid = element_blank(),\n        legend.position = \"right\",\n        legend.key.width  = unit(0.5, \"lines\"),\n        legend.key.height = unit(2, \"lines\"))\nFigure6_H_2\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure6/Figure6_H_2.pdf\", plot = Figure6_H_2,\n       height = 3, width = 6, units = \"in\")\n\n\n\n\nCode\ndf_cor &lt;- df[which(df$`AId-I`&gt;0),]\ndf_cor[,'exp_order'] &lt;- rank(df_cor$M2)\ndf_cor[,'bin'] &lt;- cut(\n  df_cor[,'exp_order'],\n  seq(1, max(df_cor[,'exp_order']), length.out=11),\n  labels = c(1:10)\n  )\ndf_cor &lt;- \n  df_cor |&gt;\n    group_by(bin) |&gt;\n    dplyr::summarize(across(3:6, ~ mean(.x, na.rm = TRUE)))\n\ndf_cor_norm &lt;- as.data.frame(apply(df_cor[1:10,2:ncol(df_cor)],2,function(x){\n    (x-min(x))/(max(x)-min(x))\n    }))\ndf_cor_norm$x &lt;- df_cor$bin[1:10]\n\ncor &lt;- cor.test(df_cor_norm$M2, df_cor_norm$`AId-I`, \"two.sided\", \"pearson\")\nR &lt;- round(cor$estimate,2)\nP &lt;- format(cor$p.value, digits = 2)\n\nFigure6_H_3 &lt;- \n  ggplot(df_cor_norm, aes(x=x, y=`AId-I`, group=1)) +\n    geom_line(linewidth=1, color=\"yellow\") +\n    geom_point(fill=\"yellow\",shape=21, color=\"black\" , size=3) +\n    geom_text(x=1, y=0.95, label = paste('R =',R,'\\nP =',P,sep=' '), hjust=0,\n              color=\"black\") +\n    scale_x_discrete(breaks = c(1,5,10), \n                     labels = c(\"10%\",\"50%\",\"100%\")) +\n    #scale_color_manual(values = col_Proj_module) +\n    #scale_fill_manual(values = col_Proj_module) +\n    labs(x=paste(\"M2 Eigengenes\"), \n         y=paste(\"AId-I projection strength\"), \n         title=\"\") +\n    theme_classic() + \n    theme(legend.position=\"none\", plot.title = element_text(hjust = 0.5, size = 20),\n          text = element_text(size = 10))\nFigure6_H_3\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure6/Figure6_H_3.pdf\", plot = Figure6_H_3,\n       height = 4, width = 4, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Figure6</span>"
    ]
  },
  {
    "objectID": "Figure7.html",
    "href": "Figure7.html",
    "title": "7  Figure7",
    "section": "",
    "text": "7.1 Figure7_A\nCode\nknitr::include_graphics(\"images/Figure7_A.png\", dpi = 300)",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Figure7</span>"
    ]
  },
  {
    "objectID": "Figure7.html#figure7_b",
    "href": "Figure7.html#figure7_b",
    "title": "7  Figure7",
    "section": "7.2 Figure7_B",
    "text": "7.2 Figure7_B\n\n\nCode\nsp_Barcode &lt;- c('VIS-I','SSp-I','CP-I','AUD-I','RSP-I',\n             'BLA-I','ACB-I','AId-I','ECT-I',\n             'ACB-C','ECT-C',\n             'CP-C','AId-C','RSP-C',\n             'LHA-I')\nsp_gene &lt;- rownames(sp.PFC)\n\nsc_seu &lt;- Adult.IT.PT.barcode\nsc_seu$BC_motif &lt;- apply(sc_seu@meta.data[,sp_Barcode], 1, function(x){\n  paste(names(x)[which(x&gt;0)], collapse = ',')\n})\nsc_motif &lt;- unique(sc_seu$BC_motif)\n\nsp_seu &lt;- sp.PFC.Left.ITPT.barcode\nsp_seu$BC_motif &lt;- apply(sp_seu@meta.data[,sp_Barcode], 1, function(x){\n  paste(names(x)[which(x&gt;0)], collapse = ',')\n})\nsp_motif &lt;- unique(sp_seu$BC_motif)\n\nsc_seu &lt;- subset(sc_seu, cells=colnames(sc_seu)[which(sc_seu$BC_motif %in% sp_motif)])\nsp_seu &lt;- subset(sp_seu, cells=colnames(sp_seu)[which(sp_seu$BC_motif %in% sc_motif)])\n\n#sc_mat &lt;- cbind(t(as.matrix(sc_seu@assays$RNA@data[sp_gene,])),sc_seu@meta.data[,sp_Barcode])\nsc_mat &lt;- sc_seu@meta.data[,sp_Barcode]\nsc_mat[is.na(sc_mat)] &lt;- 0\n#sp_mat &lt;- cbind(t(as.matrix(sp_seu@assays$RNA@data[sp_gene,])),sp_seu@meta.data[,sp_Barcode])\nsp_mat &lt;- sp_seu@meta.data[,sp_Barcode]\nmerge_mat &lt;- rbind(sc_mat,sp_mat)\ncor_mat &lt;- cor(t(merge_mat))\n\nsc_seu$sc_cellid &lt;- rownames(sc_seu@meta.data)\nsp_cellid &lt;- \n  apply(sc_seu@meta.data,1,function(x){\n    sc_cell &lt;- x[\"sc_cellid\"]\n    sp_cells &lt;- colnames(sp_seu)[which(sp_seu$BC_motif==x[\"BC_motif\"] &\n                                       sp_seu$SubType==x[\"SubType\"])]\n    if (length(sp_cells)&gt;1){\n      names(which.max(cor_mat[sc_cell,sp_cells]))\n    }else{\n      sp_cells\n    }\n    })\nsp_cellid &lt;- as.character(sp_cellid)\nsc_seu$sp_cellid &lt;- sp_cellid\nsc_seu$ML_new &lt;- as.numeric(sp_seu$ML_new[sc_seu$sp_cellid])\nsc_seu$DV_new &lt;- as.numeric(sp_seu$DV_new[sc_seu$sp_cellid])\nsc_seu$AP_new &lt;- as.numeric(sp_seu$AP_new[sc_seu$sp_cellid])\n\n\n\n\nCode\nset.seed(20240716)\nseu &lt;- sc_seu\ntranscriptom_mat &lt;- seu@reductions$pca@cell.embeddings[,1:30]\nspatial_mat &lt;-  seu@meta.data[,c(\"ML_new\",\"DV_new\",\"AP_new\")]\ncolnames(spatial_mat) &lt;- c(\"ML\",\"DV\",\"AP\")\nproj_module &lt;- c(\"PTi\",\"ITi-D\",\"ITi-V\",\"ITc\")\n\nresult_all &lt;- data.frame()\nfor (i in 1:length(proj_module)){\n  proj_i &lt;- proj_module[i]\n  y &lt;- rep(0,nrow(seu@meta.data))\n  y[which(seu$Proj_module == proj_i)] &lt;- 1\n\n  trainIndex &lt;- createDataPartition(y, p = .7, list = FALSE, times = 1)\n  y_train &lt;- y[trainIndex]\n  y_test &lt;- y[-trainIndex]\n\n    # transcriptom + spatial\n    X &lt;- as.matrix(cbind(transcriptom_mat, spatial_mat))\n    X_train &lt;- Matrix(X[trainIndex,], sparse = T)\n    X_test &lt;- Matrix(X[-trainIndex,], sparse = T)\n    dtrain &lt;- xgb.DMatrix(data = X_train, label = y_train)\n    dtest &lt;- xgb.DMatrix(data = X_test, label = y_test)\n    cv &lt;- xgb.cv(data = dtrain, nrounds = 1000, nfold = 5, max_depth = 5, eta = 0.5,\n                 early_stopping_rounds = 5, objective = \"binary:logistic\", \n                 verbose = F)\n    model_xgb &lt;- xgboost(data=dtrain, max_depth=5, eta=0.5, nthread = 5,\n                         nround = cv$best_iteration, objective = \"binary:logistic\",\n                         verbose = F)\n    pre &lt;- predict(model_xgb, newdata = dtest)\n    #y_pre &lt;- as.numeric(pre &gt; 0.5)\n    #conf &lt;- confusionMatrix(factor(y_pre, levels = c(0,1)),\n    #                        factor(y_test, levels = c(0,1)), \n    #                        mode = \"everything\", positive=\"1\")\n    #Accuracy &lt;- as.numeric(conf$overall[\"Accuracy\"])\n    #F1 &lt;- as.numeric(conf$byClass[\"F1\"])\n    #PR &lt;- pr.curve(scores.class0 = pre, weights.class0 = y_test, curve = TRUE)\n    ROC &lt;- roc.curve(scores.class0 = pre, weights.class0 = y_test, curve = TRUE)\n    result1 &lt;- data.frame('ROC_1'=ROC$curve[,1],\n                          'ROC_2'=ROC$curve[,2],\n                          'AUC'=ROC$auc,\n                          'target'=proj_i,\n                          'Experiment'=\"transcriptom + spatial\"\n                         )\n    \n    # transcriptom\n    X &lt;- as.matrix(transcriptom_mat)\n    X_train &lt;- Matrix(X[trainIndex,], sparse = T)\n    X_test &lt;- Matrix(X[-trainIndex,], sparse = T)\n    dtrain &lt;- xgb.DMatrix(data = X_train, label = y_train)\n    dtest &lt;- xgb.DMatrix(data = X_test, label = y_test)\n    cv &lt;- xgb.cv(data = dtrain, nrounds = 1000, nfold = 5, max_depth = 5, eta = 0.5,\n                 early_stopping_rounds = 5, objective = \"binary:logistic\", \n                 verbose = F)\n    model_xgb &lt;- xgboost(data=dtrain, max_depth=5, eta=0.5, nthread = 5,\n                         nround = cv$best_iteration, objective = 'binary:logistic',\n                         verbose = F)\n    pre &lt;- predict(model_xgb, newdata = dtest)\n    y_pre &lt;- as.numeric(pre &gt; 0.5)\n    conf &lt;- confusionMatrix(factor(y_pre, levels = c(0,1)),\n                            factor(y_test, levels = c(0,1)), \n                            mode = \"everything\", positive=\"1\")\n    Accuracy &lt;- as.numeric(conf$overall[\"Accuracy\"])\n    F1 &lt;- as.numeric(conf$byClass[\"F1\"])\n    ROC &lt;- roc.curve(scores.class0 = pre, weights.class0 = y_test, curve = TRUE)\n    result2 &lt;- data.frame('ROC_1'=ROC$curve[,1],\n                          'ROC_2'=ROC$curve[,2],\n                          'AUC'=ROC$auc,\n                          'target'=proj_i,\n                          'Experiment'=\"transcriptom\"\n                         )\n    \n    # spatial\n    X &lt;- as.matrix(spatial_mat)\n    X_train &lt;- Matrix(X[trainIndex,], sparse = T)\n    X_test &lt;- Matrix(X[-trainIndex,], sparse = T)\n    dtrain &lt;- xgb.DMatrix(data = X_train, label = y_train)\n    dtest &lt;- xgb.DMatrix(data = X_test, label = y_test)\n    cv &lt;- xgb.cv(data = dtrain, nrounds = 1000, nfold = 5, max_depth = 5, eta = 0.5,\n                 early_stopping_rounds = 5, objective = \"binary:logistic\", \n                 verbose = F)\n    model_xgb &lt;- xgboost(data=dtrain, max_depth=5, eta=0.5, nthread = 5,\n                         nround = cv$best_iteration, objective = 'binary:logistic',\n                         verbose = F)\n    pre &lt;- predict(model_xgb, newdata = dtest)\n    y_pre &lt;- as.numeric(pre &gt; 0.5)\n    conf &lt;- confusionMatrix(factor(y_pre, levels = c(0,1)),\n                            factor(y_test, levels = c(0,1)), \n                            mode = \"everything\", positive=\"1\")\n    Accuracy &lt;- as.numeric(conf$overall[\"Accuracy\"])\n    F1 &lt;- as.numeric(conf$byClass[\"F1\"])\n    ROC &lt;- roc.curve(scores.class0 = pre, weights.class0 = y_test, curve = TRUE)\n    result3 &lt;- data.frame('ROC_1'=ROC$curve[,1],\n                          'ROC_2'=ROC$curve[,2],\n                          'AUC'=ROC$auc,\n                          'target'=proj_i,\n                          'Experiment'=\"spatial\"\n                         )\n    \n    \n    # shuffle y\n    y_shuffle &lt;- sample(y,length(y))\n    y_train &lt;- y_shuffle[trainIndex]\n    y_test &lt;- y_shuffle[-trainIndex]\n    X &lt;- as.matrix(cbind(transcriptom_mat, spatial_mat))\n    X_train &lt;- Matrix(X[trainIndex,], sparse = T)\n    X_test &lt;- Matrix(X[-trainIndex,], sparse = T)\n    dtrain &lt;- xgb.DMatrix(data = X_train, label = y_train)\n    dtest &lt;- xgb.DMatrix(data = X_test, label = y_test)\n    cv &lt;- xgb.cv(data = dtrain, nrounds = 1000, nfold = 5, max_depth = 5, eta = 0.5,\n                 early_stopping_rounds = 5, objective = \"binary:logistic\", \n                 verbose = F)\n    model_xgb &lt;- xgboost(data=dtrain, max_depth=5, eta=0.5, nthread = 5,\n                         nround = cv$best_iteration, objective = 'binary:logistic',\n                         verbose = F)\n    pre &lt;- predict(model_xgb, newdata = dtest)\n    y_pre &lt;- as.numeric(pre &gt; 0.5)\n    conf &lt;- confusionMatrix(factor(y_pre, levels = c(0,1)),\n                            factor(y_test, levels = c(0,1)), \n                            mode = \"everything\", positive=\"1\")\n    Accuracy &lt;- as.numeric(conf$overall[\"Accuracy\"])\n    F1 &lt;- as.numeric(conf$byClass[\"F1\"])\n    ROC &lt;- roc.curve(scores.class0 = pre, weights.class0 = y_test, curve = TRUE)\n    result4 &lt;- data.frame('ROC_1'=ROC$curve[,1],\n                          'ROC_2'=ROC$curve[,2],\n                          'AUC'=ROC$auc,\n                          'target'=proj_i,\n                          'Experiment'=\"shuffle\"\n                         )\n    result &lt;- rbind(result1, result2, result3, result4)\n    result_all &lt;- rbind(result_all, result)\n}\n#saveRDS(result_all,'../data/rds/ML/result_all.rds')\n\n\n\n\nCode\nresult_all &lt;- readRDS('../data/rds/ML/result_all.rds')\ndf &lt;- result_all\ndf &lt;- df[which(df$Experiment != \"spatial\"),]\ndf$target &lt;- factor(df$target, levels = c(\"PTi\",\"ITi-D\",\"ITi-V\",\"ITc\"))\ndf$Experiment &lt;- factor(\n  df$Experiment, \n  levels = c(\"transcriptom + spatial\",\"transcriptom\",\"shuffle\"))\n\nFigure7_B &lt;- \n  ggplot(df, aes(x=ROC_1, y=ROC_2, color=Experiment)) +\n  geom_line(linewidth=1) +\n  #geom_abline(slope = 1,intercept = 0,lty=\"dashed\",color='gray') +\n  facet_wrap(~target, nrow = 2) +\n  theme_bw() +\n  theme(panel.grid=element_blank(),\n        panel.spacing = unit(1,\"lines\"),\n        plot.title = element_text(hjust = 0.5, face = \"bold\"),\n        legend.position = \"top\", legend.title = element_blank()) +\n  scale_color_manual(values = c(\"transcriptom + spatial\"=\"#d73027\",\n                                \"transcriptom\"=\"#4575b4\",\n                                \"spatial\"=\"#ff7f0e\",\n                                \"shuffle\"=\"gray\")) +\n  labs(x='False positive rate', y='Sensitivity', \n       title = \"\")\nFigure7_B\n\n\n\n\n\n\n\n\n\n\n\nCode\n# PTi AUC (transcriptom + spatial 0.996) (transcriptom 0.990)\n# ITi-D AUC (transcriptom + spatial 0.916) (transcriptom 0.806)\n# ITi-V AUC (transcriptom + spatial 0.927) (transcriptom 0.822)\n# ITc AUC (transcriptom + spatial 0.818) (transcriptom 0.625)\nunique(paste(df$target,df$AUC,df$Experiment))\n\n\n [1] \"PTi 0.995561105561106 transcriptom + spatial\"  \n [2] \"PTi 0.99004329004329 transcriptom\"             \n [3] \"PTi 0.51885429733531 shuffle\"                  \n [4] \"ITi-D 0.916172526670742 transcriptom + spatial\"\n [5] \"ITi-D 0.806047997475893 transcriptom\"          \n [6] \"ITi-D 0.488636453093388 shuffle\"               \n [7] \"ITi-V 0.926896448861975 transcriptom + spatial\"\n [8] \"ITi-V 0.822088745306157 transcriptom\"          \n [9] \"ITi-V 0.507083986438973 shuffle\"               \n[10] \"ITc 0.818375745017694 transcriptom + spatial\"  \n[11] \"ITc 0.625058204507357 transcriptom\"            \n[12] \"ITc 0.489953756296832 shuffle\"                 \n\n\n\n\nCode\nggsave(\"../pdf/Figure7/Figure7_B.pdf\", plot = Figure7_B,\n       height = 5.8, width = 5, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Figure7</span>"
    ]
  },
  {
    "objectID": "Figure7.html#figure7_c",
    "href": "Figure7.html#figure7_c",
    "title": "7  Figure7",
    "section": "7.3 Figure7_C",
    "text": "7.3 Figure7_C\n\n\nCode\nseu &lt;- sc_seu\ntranscriptom_mat &lt;- seu@reductions$pca@cell.embeddings[,1:30]\nspatial_mat &lt;-  seu@meta.data[,c(\"ML_new\",\"DV_new\",\"AP_new\")]\ncolnames(spatial_mat) &lt;- c(\"ML\",\"DV\",\"AP\")\nBarcode &lt;- c('VIS-I','SSp-I','CP-I','AUD-I','RSP-I',\n              'BLA-I','ACB-I','ENTl-I','AId-I','ECT-I',\n              'ACB-C','PL-C','ECT-C','ENTl-C',\n              'BLA-C','CP-C','AId-C','RSP-C',\n             'MD-I','RE-I','DR-I','VTA-I','LHA-I','SC-I')\n\nresult_all &lt;- data.frame()\nfor (i in 1:length(Barcode)){\n  proj_i &lt;- Barcode[i]\n  y &lt;- seu@meta.data[,proj_i]\n  y &lt;- y[!is.na(seu@meta.data[,proj_i])]\n  y[which(y&gt;0)] &lt;- 1\n\n  trainIndex &lt;- createDataPartition(y, p = .7, list = FALSE, times = 1)\n  y_train &lt;- y[trainIndex]\n  y_test &lt;- y[-trainIndex]\n\n    # transcriptom + spatial\n    X &lt;- as.matrix(cbind(transcriptom_mat, spatial_mat))\n    X &lt;- X[!is.na(seu@meta.data[,proj_i]),]\n    X_train &lt;- Matrix(X[trainIndex,], sparse = T)\n    X_test &lt;- Matrix(X[-trainIndex,], sparse = T)\n    dtrain &lt;- xgb.DMatrix(data = X_train, label = y_train)\n    dtest &lt;- xgb.DMatrix(data = X_test, label = y_test)\n    cv &lt;- xgb.cv(data = dtrain, nrounds = 1000, nfold = 5, max_depth = 5, eta = 0.5,\n                 early_stopping_rounds = 5, objective = \"binary:logistic\", \n                 verbose = F)\n    model_xgb &lt;- xgboost(data=dtrain, max_depth=5, eta=0.5, nthread = 5,\n                         nround = cv$best_iteration, objective = \"binary:logistic\",\n                         verbose = F)\n    pre &lt;- predict(model_xgb, newdata = dtest)\n    #y_pre &lt;- as.numeric(pre &gt; 0.5)\n    #conf &lt;- confusionMatrix(factor(y_pre, levels = c(0,1)),\n    #                        factor(y_test, levels = c(0,1)), \n    #                        mode = \"everything\", positive=\"1\")\n    #Accuracy &lt;- as.numeric(conf$overall[\"Accuracy\"])\n    #F1 &lt;- as.numeric(conf$byClass[\"F1\"])\n    #PR &lt;- pr.curve(scores.class0 = pre, weights.class0 = y_test, curve = TRUE)\n    ROC &lt;- roc.curve(scores.class0 = pre, weights.class0 = y_test, curve = TRUE)\n    result1 &lt;- data.frame('ROC_1'=ROC$curve[,1],\n                          'ROC_2'=ROC$curve[,2],\n                          'AUC'=ROC$auc,\n                          'target'=proj_i,\n                          'Experiment'=\"transcriptom + spatial\"\n                         )\n    \n    # transcriptom\n    X &lt;- as.matrix(transcriptom_mat)\n    X &lt;- X[!is.na(seu@meta.data[,proj_i]),]\n    X_train &lt;- Matrix(X[trainIndex,], sparse = T)\n    X_test &lt;- Matrix(X[-trainIndex,], sparse = T)\n    dtrain &lt;- xgb.DMatrix(data = X_train, label = y_train)\n    dtest &lt;- xgb.DMatrix(data = X_test, label = y_test)\n    cv &lt;- xgb.cv(data = dtrain, nrounds = 1000, nfold = 5, max_depth = 5, eta = 0.5,\n                 early_stopping_rounds = 5, objective = \"binary:logistic\", \n                 verbose = F)\n    model_xgb &lt;- xgboost(data=dtrain, max_depth=5, eta=0.5, nthread = 5,\n                         nround = cv$best_iteration, objective = 'binary:logistic',\n                         verbose = F)\n    pre &lt;- predict(model_xgb, newdata = dtest)\n    y_pre &lt;- as.numeric(pre &gt; 0.5)\n    conf &lt;- confusionMatrix(factor(y_pre, levels = c(0,1)),\n                            factor(y_test, levels = c(0,1)), \n                            mode = \"everything\", positive=\"1\")\n    Accuracy &lt;- as.numeric(conf$overall[\"Accuracy\"])\n    F1 &lt;- as.numeric(conf$byClass[\"F1\"])\n    ROC &lt;- roc.curve(scores.class0 = pre, weights.class0 = y_test, curve = TRUE)\n    result2 &lt;- data.frame('ROC_1'=ROC$curve[,1],\n                          'ROC_2'=ROC$curve[,2],\n                          'AUC'=ROC$auc,\n                          'target'=proj_i,\n                          'Experiment'=\"transcriptom\"\n                         )\n    \n    # shuffle y\n    y_shuffle &lt;- sample(y,length(y))\n    y_train &lt;- y_shuffle[trainIndex]\n    y_test &lt;- y_shuffle[-trainIndex]\n    X &lt;- as.matrix(cbind(transcriptom_mat, spatial_mat))\n    X &lt;- X[!is.na(seu@meta.data[,proj_i]),]\n    X_train &lt;- Matrix(X[trainIndex,], sparse = T)\n    X_test &lt;- Matrix(X[-trainIndex,], sparse = T)\n    dtrain &lt;- xgb.DMatrix(data = X_train, label = y_train)\n    dtest &lt;- xgb.DMatrix(data = X_test, label = y_test)\n    cv &lt;- xgb.cv(data = dtrain, nrounds = 1000, nfold = 5, max_depth = 5, eta = 0.5,\n                 early_stopping_rounds = 5, objective = \"binary:logistic\", \n                 verbose = F)\n    model_xgb &lt;- xgboost(data=dtrain, max_depth=5, eta=0.5, nthread = 5,\n                         nround = cv$best_iteration, objective = 'binary:logistic',\n                         verbose = F)\n    pre &lt;- predict(model_xgb, newdata = dtest)\n    y_pre &lt;- as.numeric(pre &gt; 0.5)\n    conf &lt;- confusionMatrix(factor(y_pre, levels = c(0,1)),\n                            factor(y_test, levels = c(0,1)), \n                            mode = \"everything\", positive=\"1\")\n    Accuracy &lt;- as.numeric(conf$overall[\"Accuracy\"])\n    F1 &lt;- as.numeric(conf$byClass[\"F1\"])\n    ROC &lt;- roc.curve(scores.class0 = pre, weights.class0 = y_test, curve = TRUE)\n    result3 &lt;- data.frame('ROC_1'=ROC$curve[,1],\n                          'ROC_2'=ROC$curve[,2],\n                          'AUC'=ROC$auc,\n                          'target'=proj_i,\n                          'Experiment'=\"shuffle\"\n                         )\n    result &lt;- rbind(result1, result2, result3)\n    result_all &lt;- rbind(result_all, result)\n}\n#saveRDS(result_all,'../data/rds/ML/result_target.rds')\n\n\n\n\nCode\nBarcode &lt;- c('VIS-I','SSp-I','CP-I','AUD-I','RSP-I',\n              'BLA-I','ACB-I','ENTl-I','AId-I','ECT-I',\n              'ACB-C','PL-C','ECT-C','ENTl-C',\n              'BLA-C','CP-C','AId-C','RSP-C',\n             'MD-I','RE-I','DR-I','VTA-I','LHA-I','SC-I')\nresult_all &lt;- readRDS('../data/rds/ML/result_target.rds')\ndf &lt;- result_all\ndf &lt;- df[which(df$Experiment==\"transcriptom + spatial\"),]\ndf$target &lt;- factor(df$target, levels = Barcode)\ndf$module &lt;- \"\"\ndf$module[which(df$target %in% c('VIS-I','SSp-I','CP-I','AUD-I','RSP-I'))] &lt;- \"ITi-D\"\ndf$module[which(df$target %in% c('BLA-I','ACB-I','ENTl-I','AId-I','ECT-I'))] &lt;- \"ITi-V\"\ndf$module[which(df$target %in% c('ACB-C','PL-C','ECT-C','ENTl-C','BLA-C','CP-C','AId-C','RSP-C'))] &lt;- \"ITc\"\ndf$module[which(df$target %in% c('MD-I','RE-I','DR-I','VTA-I','LHA-I','SC-I'))] &lt;- \"PTi\"\ndf$module &lt;- factor(df$module, levels = c(\"PTi\",\"ITi-D\",\"ITi-V\",\"ITc\"))\n\nFigure7_C &lt;- \n  ggplot(df, aes(x=ROC_1, y=ROC_2, color=target)) +\n  geom_line(linewidth=1) +\n  #geom_abline(slope = 1,intercept = 0,lty=\"dashed\",color='gray') +\n  facet_wrap(~module, nrow = 2) +\n  theme_bw() +\n  theme(panel.grid=element_blank(),\n        panel.spacing = unit(1,\"lines\"),\n        plot.title = element_text(hjust = 0.5, face = \"bold\"),\n        legend.position = \"top\", legend.title = element_blank()) +\n  scale_color_manual(values = col_Barcode) +\n  labs(x='False positive rate', y='Sensitivity', \n       title = \"\")\nFigure7_C\n\n\n\n\n\n\n\n\n\n\n\nCode\n# VIS-I 0.881  SSp-I 0.890  CP-I 0.938  AUD-I 0.925  RSP-I 0.907  \n# BLA-I 0.890  ACB-I 0.945  ENTl-I 0.833  AId-I 0.867  ECT-I 0.835  \n# ACB-C 0.889  PL-C 0.778  ECT-C 0.820   ENTl-C 0.711  BLA-C 0.622  CP-C 0.937   \n# AId-C 0.827   RSP-C 0.814  \n# MD-I 0.951   RE-I 0.972   DR-I 0.973  VTA-I 0.972  LHA-I 0.984   SC-I 0.962 \nunique(paste(df$target,df$AUC))\n\n\n [1] \"VIS-I 0.881488663117901\"  \"SSp-I 0.889573309698658\" \n [3] \"CP-I 0.938402645992368\"   \"AUD-I 0.925174825174825\" \n [5] \"RSP-I 0.906869983948636\"  \"BLA-I 0.890474823188055\" \n [7] \"ACB-I 0.944931942109034\"  \"ENTl-I 0.833408038248917\"\n [9] \"AId-I 0.866658916531039\"  \"ECT-I 0.834653875400576\" \n[11] \"ACB-C 0.8892592511239\"    \"PL-C 0.778075237072822\"  \n[13] \"ECT-C 0.82044866983571\"   \"ENTl-C 0.710758377425044\"\n[15] \"BLA-C 0.622408293460925\"  \"CP-C 0.937142608342283\"  \n[17] \"AId-C 0.82741020975693\"   \"RSP-C 0.813955342902711\" \n[19] \"MD-I 0.951476310368505\"   \"RE-I 0.971658986175115\"  \n[21] \"DR-I 0.973177636234961\"   \"VTA-I 0.971886936592819\" \n[23] \"LHA-I 0.98406424493381\"   \"SC-I 0.961650485436893\"  \n\n\n\n\nCode\nggsave(\"../pdf/Figure7/Figure7_C.pdf\", plot = Figure7_C,\n       height = 6.75, width = 5, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Figure7</span>"
    ]
  },
  {
    "objectID": "Figure7.html#figure7_d",
    "href": "Figure7.html#figure7_d",
    "title": "7  Figure7",
    "section": "7.4 Figure7_D",
    "text": "7.4 Figure7_D\n\n\nCode\nspatial_MERFISH &lt;- seu.inte@images$slice.44@coordinates[,c(\"x\",\"y\")]\nspatial_MERFISH$CCF_metaRegion &lt;- seu.inte@meta.data[rownames(spatial_MERFISH),'CCF_metaRegion']\nMERFISH_cells &lt;- rownames(spatial_MERFISH)[which(spatial_MERFISH$y &gt; (-1/5*spatial_MERFISH$x-150) & spatial_MERFISH$CCF_metaRegion %in% c(\"MOs\",\"ACAd\",\"PL\",\"ILA\",\"DP\"))]\n\nrotation=10\nx.scale=1.1\ny.scale=1.1\nx.move= 0.60\ny.move = -2.7\nspatial_test &lt;- data.frame(\n  \"x\" = spatial_MERFISH[MERFISH_cells,\"y\"]/1112 + 0.5,\n  \"y\" = -spatial_MERFISH[MERFISH_cells,\"x\"]/1043 - 2\n)\nx0 = (spatial_test$x - median(spatial_test$x))\ny0 = (spatial_test$y - median(spatial_test$y))\na = rotation / 180 * pi\nx1 = x0 * cos(a) - y0 * sin(a)\ny1 = x0 * sin(a) + y0 * cos(a)\nx1 = x1 * x.scale + x.move\ny1 = y1 * y.scale + y.move\nspatial_test$x &lt;- x1\nspatial_test$y &lt;- y1\n\ntranscriptom_test &lt;- seu.inte@reductions$pca@cell.embeddings[MERFISH_cells,1:30]\ntranscriptom_train &lt;- seu.inte@reductions$pca@cell.embeddings[colnames(sc_seu),1:30]\nspatial_train &lt;- sc_seu@meta.data[,c(\"ML_new\",\"DV_new\")]\ncolnames(spatial_train) &lt;- c(\"x\",\"y\")\n\ndf_MERFISH &lt;- spatial_test\ndf_MERFISH$CCF &lt;- PFC.MERFISH$CCF_metaRegion[which(colnames(PFC.MERFISH) %in% MERFISH_cells)]\ndf_MERFISH$sample &lt;- \"MERFISH\"\ndf_true &lt;- sp.PFC.Left@meta.data[which(sp.PFC.Left$slice==\"IT_slice_18\"),c('ML_new','DV_new','ABA_metaRegion')]\ncolnames(df_true) &lt;- c('x','y','CCF')\ndf_true$sample &lt;- \"our\"\ndf &lt;- merge(df_MERFISH, df_true, all = T)\n\n\n\n\nCode\ndf$CCF &lt;- factor(df$CCF, levels = c(\"MOs\",\"ACAd\",\"ACAv\",\"PL\",\"ORBm\",\"ILA\",\"DP\"))\n\nFigure7_D_1 &lt;- \n  ggplot(df[which(df$sample==\"our\"),], aes(x=x,y=y,color=CCF)) +\n  geom_point() +\n  coord_fixed() +\n  scale_color_manual(values = c(\"MOs\"=\"#2166AC\",\"ACAd\"=\"#67A9CF\",\"ACAv\"=\"#92C5DE\",\"PL\"=\"#D1E5F0\",\"ORBm\"=\"#FDDBC7\",\"ILA\"=\"#EF8A62\",\"DP\"=\"#B2182B\")) +\n  labs(title = \"SPIDER-Seq slice\") +\n  theme_void() +\n  theme(text = element_text(size = 15),\n        plot.title = element_text(hjust = 0.5, size = 20))\nFigure7_D_1\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure7/Figure7_D_1.pdf\", plot = Figure7_D_1,\n       height = 6, width = 4, units = \"in\")\n\n\n\n\nCode\ndf$CCF &lt;- factor(df$CCF, levels = c(\"MOs\",\"ACAd\",\"ACAv\",\"PL\",\"ORBm\",\"ILA\",\"DP\"))\n\nFigure7_D_2 &lt;- \n  ggplot(df[which(df$sample==\"MERFISH\"),], aes(x=x,y=y,color=CCF)) +\n  geom_point() +\n  coord_fixed() +\n  scale_color_manual(values = c(\"MOs\"=\"#2166AC\",\"ACAd\"=\"#67A9CF\",\"ACAv\"=\"#92C5DE\",\"PL\"=\"#D1E5F0\",\"ORBm\"=\"#FDDBC7\",\"ILA\"=\"#EF8A62\",\"DP\"=\"#B2182B\")) +\n  labs(title = \"MERFISH slice\") +\n  theme_void() +\n  theme(text = element_text(size = 15),\n        plot.title = element_text(hjust = 0.5, size = 20))\nFigure7_D_2\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure7/Figure7_D_2.pdf\", plot = Figure7_D_2,\n       height = 6, width = 4, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Figure7</span>"
    ]
  },
  {
    "objectID": "Figure7.html#figure7_e",
    "href": "Figure7.html#figure7_e",
    "title": "7  Figure7",
    "section": "7.5 Figure7_E",
    "text": "7.5 Figure7_E\n\n\nCode\n# only right half\n# only \"MOs\",\"ACAd\",\"PL\",\"ILA\",\"DP\"\nspatial_MERFISH &lt;- seu.inte@images$slice.44@coordinates[,c(\"x\",\"y\")]\nspatial_MERFISH$CCF_metaRegion &lt;- seu.inte@meta.data[rownames(spatial_MERFISH),'CCF_metaRegion']\nMERFISH_cells &lt;- rownames(spatial_MERFISH)[which(spatial_MERFISH$y &gt; (-1/5*spatial_MERFISH$x-150) & spatial_MERFISH$CCF_metaRegion %in% c(\"MOs\",\"ACAd\",\"PL\",\"ILA\",\"DP\"))]\n\nrotation=10\nx.scale=1.1\ny.scale=1.1\nx.move= 0.60\ny.move = -2.7\nspatial_test &lt;- data.frame(\n  \"x\" = spatial_MERFISH[MERFISH_cells,\"y\"]/1112 + 0.5,\n  \"y\" = -spatial_MERFISH[MERFISH_cells,\"x\"]/1043 - 2\n)\nx0 = (spatial_test$x - median(spatial_test$x))\ny0 = (spatial_test$y - median(spatial_test$y))\na = rotation / 180 * pi\nx1 = x0 * cos(a) - y0 * sin(a)\ny1 = x0 * sin(a) + y0 * cos(a)\nx1 = x1 * x.scale + x.move\ny1 = y1 * y.scale + y.move\nspatial_test$x &lt;- x1\nspatial_test$y &lt;- y1\n\ntranscriptom_test &lt;- seu.inte@reductions$pca@cell.embeddings[MERFISH_cells,1:30]\ntranscriptom_train &lt;- seu.inte@reductions$pca@cell.embeddings[colnames(sc_seu),1:30]\nspatial_train &lt;- sc_seu@meta.data[,c(\"ML_new\",\"DV_new\")]\ncolnames(spatial_train) &lt;- c(\"x\",\"y\")\n\n\n\n\nCode\nBarcode &lt;- c('VIS-I','SSp-I','CP-I','AUD-I','RSP-I',\n              'BLA-I','ACB-I','ENTl-I','AId-I','ECT-I',\n              'ACB-C','PL-C','ECT-C','ENTl-C',\n              'BLA-C','CP-C','AId-C','RSP-C',\n             'MD-I','RE-I','DR-I','VTA-I','LHA-I','SC-I')\n\npre_Barcode &lt;- spatial_test\nfor (i in 1:length(Barcode)){\n  proj_i &lt;- Barcode[i]\n  y_train &lt;- sc_seu@meta.data[,proj_i]\n  y_train &lt;- y_train[!is.na(sc_seu@meta.data[,proj_i])]\n  y_train[which(y_train&gt;0)] &lt;- 1\n\n  # transcriptom + spatial\n  X_train &lt;- as.matrix(cbind(transcriptom_train, spatial_train))\n  X_train &lt;- X_train[!is.na(sc_seu@meta.data[,proj_i]),]\n  dtrain &lt;- xgb.DMatrix(data = X_train, label = y_train)\n  X_test &lt;- as.matrix(cbind(transcriptom_test, spatial_test))\n  cv &lt;- xgb.cv(data = dtrain, nrounds = 1000, nfold = 5, max_depth = 5, eta = 0.5,\n               early_stopping_rounds = 5, objective = \"binary:logistic\", \n               verbose = F)\n  model_xgb &lt;- xgboost(data=dtrain, max_depth=5, eta=0.5, nthread = 5,\n                       nround = cv$best_iteration, objective = \"binary:logistic\",\n                       verbose = F)\n  pre &lt;- predict(model_xgb, newdata = X_test)\n  pre_Barcode[,proj_i] &lt;- pre\n  print(i)\n}\n#saveRDS(pre_Barcode,'../data/rds/ML/pre_Barcode.rds')\n\n\n\n\nCode\nsp_Barcode_thread &lt;- c(\"VIS-I\"=0.25,\"SSp-I\"=0.25,\"CP-I\"=0.5,\"AUD-I\"=0.25,\"RSP-I\"=0.5, \"BLA-I\"=0.25,\"ACB-I\"=0.5,\"AId-I\"=0.75,\"ECT-I\"=0.5,\"ACB-C\"=0.25,\"ECT-C\"=0.5,\"CP-C\"=0.5,\"AId-C\"=0.25,\"RSP-C\"=0.5,\"LHA-I\"=0.5)\n\n\n\n\nCode\npre_Barcode &lt;- readRDS('../data/rds/ML/pre_Barcode.rds')\ndf_pre &lt;- as.data.frame(pre_Barcode)\ndf_pre$CCF &lt;- PFC.MERFISH@meta.data[MERFISH_cells,\"CCF_metaRegion\"]\ndf_true &lt;- sp.PFC.Left@meta.data[which(sp.PFC.Left$slice==\"IT_slice_18\"),c('ML_new','DV_new','ABA_metaRegion',sp_Barcode)]\ncolnames(df_true)[1:3] &lt;- c('x','y','CCF')\nfor (i in 1:length(sp_Barcode)){\n  df_pre[which(df_pre[,sp_Barcode[i]]&gt;sp_Barcode_thread[i]), sp_Barcode[i]] &lt;- 1\n  df_pre[which(df_pre[,sp_Barcode[i]]&lt;=sp_Barcode_thread[i]), sp_Barcode[i]] &lt;- 0\n  df_true[which(df_true[,sp_Barcode[i]]&gt;0), sp_Barcode[i]] &lt;- 1\n}\n\ndf_pre_CCF &lt;- \n  df_pre[,c(sp_Barcode,\"CCF\")] |&gt;\n  group_by(CCF) |&gt;\n  dplyr::summarize(across(1:15, ~ sum(.x))) |&gt;\n  as.data.frame()\ndf_pre_CCF_norm &lt;- apply(df_pre_CCF[,sp_Barcode], 2, function(x){x/sum(x)})\nrownames(df_pre_CCF_norm) &lt;- df_pre_CCF$CCF\ndf_pre_CCF_norm &lt;- as.data.frame(df_pre_CCF_norm)\ndf_pre_CCF_norm$CCF &lt;- rownames(df_pre_CCF_norm)\ndf_pre_CCF_norm &lt;- pivot_longer(df_pre_CCF_norm, !CCF, names_to = \"Target\", values_to = \"Value\")\n\ndf_true_CCF &lt;- \n  df_true[,c(sp_Barcode,\"CCF\")] |&gt;\n  group_by(CCF) |&gt;\n  dplyr::summarize(across(1:15, ~ sum(.x))) |&gt;\n  as.data.frame()\ndf_true_CCF_norm &lt;- apply(df_true_CCF[,sp_Barcode], 2, function(x){x/sum(x)})\nrownames(df_true_CCF_norm) &lt;- df_true_CCF$CCF\ndf_true_CCF_norm &lt;- as.data.frame(df_true_CCF_norm)\ndf_true_CCF_norm$CCF &lt;- rownames(df_true_CCF_norm)\ndf_true_CCF_norm &lt;- pivot_longer(df_true_CCF_norm, !CCF, names_to = \"Target\", values_to = \"Value\")\n\n\n\n\nCode\ndf_true &lt;- df_true_CCF_norm\ndf_true$label &lt;- \"\"\ndf_true$label[which(df_true$Value&gt;0.25)] &lt;- \"*\"\ndf_true$Target &lt;- factor(df_true$Target, levels = sp_Barcode)\ndf_true$CCF &lt;- factor(df_true$CCF, levels = rev(c(\"MOs\",\"ACAd\",\"PL\",\"ILA\",\"DP\")))\n\nbreaks &lt;- seq(0,0.5,0.01)\np_true &lt;- \n  ggplot(df_true, aes(x=Target, y=CCF, fill=Value)) +\n  geom_raster() +\n  geom_text(aes(label=label),col =\"black\",size = 5) +\n  scale_fill_gradientn(limits=c(0,0.5), colours = colorRampPalette(c(\"navy\",\"white\",\"firebrick3\"))(100), na.value=\"firebrick3\") +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), \n        axis.ticks.x = element_blank(),\n        panel.grid = element_blank(),\n        panel.border = element_rect(color = \"black\", size = 1)) +\n  labs(x=\"\", y=\"\")\n\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\n\nCode\ndf_pre &lt;- df_pre_CCF_norm\ndf_pre$label &lt;- \"\"\ndf_pre$label[which(df_pre$Value&gt;0.25)] &lt;- \"*\"\ndf_pre$Target &lt;- factor(df_pre$Target, levels = sp_Barcode)\ndf_pre$CCF &lt;- factor(df_pre$CCF, levels = rev(c(\"MOs\",\"ACAd\",\"PL\",\"ILA\",\"DP\")))\n\nbreaks &lt;- seq(0,0.5,0.01)\np_pre &lt;- \n  ggplot(df_pre, aes(x=Target, y=CCF, fill=Value)) +\n  geom_raster() +\n  geom_text(aes(label=label),col =\"black\",size = 5) +\n  scale_fill_gradientn(limits=c(0,0.5), colours = colorRampPalette(c(\"navy\",\"white\",\"firebrick3\"))(100), na.value=\"firebrick3\") +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), \n        panel.grid = element_blank(),\n        panel.border = element_rect(color = \"black\", size = 1)) +\n  labs(x=\"\", y=\"\")\n\nFigure7_E &lt;- plot_grid(p_true, p_pre, nrow = 2)\nFigure7_E\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure7/Figure7_E.pdf\", plot = Figure7_E,\n       height = 5, width = 6, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Figure7</span>"
    ]
  },
  {
    "objectID": "Figure7.html#figure7_f",
    "href": "Figure7.html#figure7_f",
    "title": "7  Figure7",
    "section": "7.6 Figure7_F",
    "text": "7.6 Figure7_F\n\n\nCode\ndf &lt;- df_true_CCF_norm\ncolnames(df) &lt;- c(\"CCF\", \"Target\", \"True\")\ndf$Predict &lt;- df_pre_CCF_norm$Value\n\ncor &lt;- cor.test(df$True, df$Predict, \"two.sided\", \"pearson\")\nR &lt;- round(cor$estimate,2)\nP &lt;- format(cor$p.value, digits = 2)\n\nFigure7_F &lt;- \n  ggplot(df, aes(x=True, y=Predict)) +\n  #geom_point(size=0.5, color='black') +\n  geom_pointdensity(adjust = 1, size=2) +\n  geom_smooth(method = \"lm\", color='black', linewidth=0.5, se=F) +\n  scale_color_distiller(palette = \"Spectral\", direction = -1) +\n  theme_bw() +\n  theme(panel.grid = element_blank(), text = element_text(size = 15),\n        legend.position = \"none\") +\n  labs(x=\"True\", y=\"Predict\",\n       title = paste('R =',R,', P =',P,sep=' ')) +\n  ylim(0,1) +\n  xlim(0,1)\nFigure7_F\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/Figure7/Figure7_F.pdf\", plot = Figure7_F,\n       height = 4, width = 4, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Figure7</span>"
    ]
  },
  {
    "objectID": "Figure7.html#figure7_g",
    "href": "Figure7.html#figure7_g",
    "title": "7  Figure7",
    "section": "7.7 Figure7_G",
    "text": "7.7 Figure7_G\n\n\nCode\nproj_module &lt;- c(\"PTi\",\"ITi-D\",\"ITi-V\",\"ITc\")\n\npre_module &lt;- spatial_test\nfor (i in 1:length(proj_module)){\n  proj_i &lt;- proj_module[i]\n  y_train &lt;- rep(0,nrow(sc_seu@meta.data))\n  y_train[which(sc_seu$Proj_module == proj_i)] &lt;- 1\n  \n  # transcriptom + spatial\n  X_train &lt;- as.matrix(cbind(transcriptom_train, spatial_train))\n  X_train &lt;- Matrix(X_train, sparse = T)\n  X_test &lt;- as.matrix(cbind(transcriptom_test, spatial_test))\n  X_test &lt;- Matrix(X_test, sparse = T)\n  dtrain &lt;- xgb.DMatrix(data = X_train, label = y_train)\n  cv &lt;- xgb.cv(data = dtrain, nrounds = 1000, nfold = 5, max_depth = 5, eta = 0.5,\n               early_stopping_rounds = 5, objective = \"binary:logistic\", \n                verbose = F)\n  model_xgb &lt;- xgboost(data=dtrain, max_depth=5, eta=0.5, nthread = 5,\n                       nround = cv$best_iteration, objective = \"binary:logistic\",\n                        verbose = F)\n  pre &lt;- predict(model_xgb, newdata = X_test)\n  pre_module[,proj_i] &lt;- pre\n}\n\n\n\n\nCode\nmodule &lt;- proj_module[1]\npre_module$Module &lt;- apply(pre_module[,proj_module], 1, function(x){\n  proj_module[which.max(x)]\n})\nFigure7_G_pre &lt;- \n  ggplot() +\n  geom_point(pre_Barcode[which(pre_module$Module != module),], mapping=aes(x=x,y=y),\n             size=0.8, color=\"#00204DFF\") +\n  geom_point(pre_Barcode[which(pre_module$Module == module),], mapping=aes(x=x,y=y),\n             size=0.8, color=\"#FFEA46FF\") +\n  ggdark::dark_theme_void() +\n  labs(title = module) +\n  theme(plot.title = element_text(size = 20, hjust = 0.5)) +\n  coord_fixed() +\n  xlim(0,1.5) +\n  ylim(-4.3,-1.25)\nFigure7_G_pre\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(paste(\"../pdf/Figure7/Figure7_G/pre_\",module,\".png\",sep=\"\"), \n       plot = Figure7_G_pre,\n       height = 4, width = 2, units = \"in\")\n\n\n\n\nCode\nmodule &lt;- proj_module[1]\nslice &lt;- 'IT_slice_18'\n\ndf &lt;- sp.PFC.Left@meta.data[,c(\"ML_new\",\"DV_new\",\"Proj_module\")]\ndf$Proj_module[is.na(df$Proj_module)] &lt;- \"\"\ncolnames(df)[1:2] &lt;- c(\"x\",\"y\")\ndf &lt;- df[which(sp.PFC.Left$slice==slice),]\n\nFigure7_G_true &lt;- \n  ggplot(df, aes()) +\n  geom_point(df[which(df$Proj_module != module),], mapping=aes(x=x,y=y),\n             size=0.8, color=\"#00204DFF\") +\n  geom_point(df[which(df$Proj_module == module),], mapping=aes(x=x,y=y),\n             size=0.8, color=\"#FFEA46FF\") +\n  ggdark::dark_theme_void() +\n  labs(title = module) +\n  theme(plot.title = element_text(size = 20, hjust = 0.5)) +\n  coord_fixed() +\n  xlim(0,1.5) +\n  ylim(-4.3,-1.25)\nFigure7_G_true\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(paste(\"../pdf/Figure7/Figure7_G/true_\",module,\".png\",sep=\"\"), \n       plot = Figure_7G_true,\n       height = 4, width = 2, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Figure7</span>"
    ]
  },
  {
    "objectID": "Figure7.html#figure7_h",
    "href": "Figure7.html#figure7_h",
    "title": "7  Figure7",
    "section": "7.8 Figure7_H",
    "text": "7.8 Figure7_H\n\n\nCode\ni=1\nmodule &lt;- sp_Barcode[i]\nFigure7_H_pre &lt;- \n  ggplot() +\n  geom_point(pre_Barcode[which(pre_Barcode[,module]&lt;sp_Barcode_thread[i]),],\n             mapping=aes(x=x,y=y), size=0.8, color=\"#00204DFF\") +\n  geom_point(pre_Barcode[which(pre_Barcode[,module]&gt;=sp_Barcode_thread[i]),],\n             mapping=aes(x=x,y=y), size=0.8, color=\"#FFEA46FF\") +\n  ggdark::dark_theme_void() +\n  labs(title = module) +\n  theme(plot.title = element_text(size = 20, hjust = 0.5)) +\n  coord_fixed() +\n  xlim(0,1.5) +\n  ylim(-4.3,-1.25)\nFigure7_H_pre\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(paste(\"../pdf/Figure7/Figure7_H/pre_\",module,\".png\",sep=\"\"), \n       plot = Figure7_H_pre,\n       height = 4, width = 2, units = \"in\")\n\n\n\n\nCode\ni=1\nmodule &lt;- sp_Barcode[i]\nslice &lt;- 'IT_slice_18'\n\ndf &lt;- sp.PFC.Left@meta.data[,c(\"ML_new\",\"DV_new\",sp_Barcode)]\ncolnames(df)[1:2] &lt;- c(\"x\",\"y\")\ndf &lt;- df[which(sp.PFC.Left$slice==slice),]\n\nFigure7_H_true &lt;- \n  ggplot(df, aes()) +\n  geom_point(df[which(df[,module]==0),], mapping=aes(x=x,y=y),\n             size=0.8, color=\"#00204DFF\") +\n  geom_point(df[which(df[,module]&gt;0),], mapping=aes(x=x,y=y),\n             size=0.8, color=\"#FFEA46FF\") +\n  ggdark::dark_theme_void() +\n  labs(title = module) +\n  theme(plot.title = element_text(size = 20, hjust = 0.5)) +\n  coord_fixed() +\n  xlim(0,1.5) +\n  ylim(-4.3,-1.25)\nFigure7_H_true\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(paste(\"../pdf/Figure7/Figure7_H/true_\",module,\".png\",sep=\"\"), \n       plot = Figure7_H_true,\n       height = 4, width = 2, units = \"in\")",
    "crumbs": [
      "Main Figure",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Figure7</span>"
    ]
  },
  {
    "objectID": "FigureS1.html",
    "href": "FigureS1.html",
    "title": "8  FigureS1",
    "section": "",
    "text": "8.1 FigureS1_A\nCode\nknitr::include_graphics(\"images/FigureS1_A.jpg\", dpi = 300)",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>FigureS1</span>"
    ]
  },
  {
    "objectID": "FigureS1.html#figures1_b",
    "href": "FigureS1.html#figures1_b",
    "title": "8  FigureS1",
    "section": "8.2 FigureS1_B",
    "text": "8.2 FigureS1_B\n\n\nCode\nknitr::include_graphics(\"images/FigureS1_B.png\", dpi = 300)",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>FigureS1</span>"
    ]
  },
  {
    "objectID": "FigureS1.html#figures1_c",
    "href": "FigureS1.html#figures1_c",
    "title": "8  FigureS1",
    "section": "8.3 FigureS1_C",
    "text": "8.3 FigureS1_C\n\n\nCode\nseu &lt;- all.Adult\ncluster_order &lt;- c(\"Adult1\", \"Adult2\", \"Adult3\")\nseu$sample &lt;- factor(seu$sample, levels = cluster_order)\nIdents(seu) &lt;- \"sample\"\n\nFigureS1_C &lt;- \n  DimPlot_scCustom(\n    seurat_object = seu,\n    colors_use = col_sample,\n    reduction = 'umap',\n    figure_plot = TRUE,\n    label = F\n    ) +\n  coord_fixed()\n\nFigureS1_C\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS1/FigureS1_C.pdf\", plot = FigureS1_C,\n       height = 4, width = 6, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>FigureS1</span>"
    ]
  },
  {
    "objectID": "FigureS1.html#figures1_d",
    "href": "FigureS1.html#figures1_d",
    "title": "8  FigureS1",
    "section": "8.4 FigureS1_D",
    "text": "8.4 FigureS1_D\n\n\nCode\n# ggtree\nseu &lt;- all.Adult\nseu$MainType &lt;- factor(\n  as.character(seu$MainType),\n  levels = c(\"Excitatory\", \"Inhibitory\",\"Astro\",\"Endo\",\"Microglia\",\"Oligo\",\"OPC\")\n)\n\nfeatures &lt;- c('Slc17a7','Gad2','Gja1','Flt1','C1qc','Ptgds','Pdgfra')\nFigureS1_D &lt;- DotPlot(\n  seu, \n  features = features,\n  group.by = 'MainType',\n  col.min=0, col.max=2, dot.scale = 10) +\n  scale_y_discrete(limits=rev) +\n  scale_color_gradientn(colours = c(\"lightblue3\", \"lightblue\", \"white\", \"red\", \"red4\")) +\n  theme(axis.title.x=element_blank(), axis.title.y=element_blank(),\n        axis.line=element_blank(),\n        axis.text.x=element_text(angle = 45, hjust = 1, size = 17),\n        axis.text.y=element_text(size = 17),\n        legend.text = element_text(size = 17),\n        legend.title = element_text(size = 17)\n        ) +\n  guides(colour = guide_colorbar(title = \"Expression\"),\n         size = guide_legend(title = \"Percent\")\n         )\n\nFigureS1_D\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS1/FigureS1_D.pdf\", plot = FigureS1_D, \n       height = 4, width = 6, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>FigureS1</span>"
    ]
  },
  {
    "objectID": "FigureS1.html#figures1_e",
    "href": "FigureS1.html#figures1_e",
    "title": "8  FigureS1",
    "section": "8.5 FigureS1_E",
    "text": "8.5 FigureS1_E\n\n\nCode\nFeaturebox &lt;- function(seuratobject, feature, text.size=15, hline.min=NULL, \n                       hline.size=NA, cols=NULL){\n  p &lt;- VlnPlot(seuratobject, feature=feature, adjust=0, pt.size=0, cols=cols) + \n    geom_boxplot() +\n    geom_hline(yintercept=hline.min, colour=\"dimgray\",\n               linetype=\"dashed\", size=hline.size)+\n    theme_bw() + \n    labs(x='') +\n    theme(panel.border=element_rect(size=1.5), \n          text = element_text(size = text.size, face='bold'),\n          plot.title = element_text(hjust = 0.5)) +\n    coord_flip() +\n    NoLegend()\n  return(p)\n}\n\nseu &lt;- all.Adult\nseu$MainType &lt;- factor(seu$MainType, levels = c(\"Excitatory\", \"Inhibitory\", \"Astro\", \"Endo\", \"Microglia\", \"Oligo\", \"OPC\"))\nIdents(seu) &lt;- \"MainType\"\n\np1 &lt;- Featurebox(seu, feature='nFeature_RNA', cols=col_MainType) +\n  scale_y_continuous(breaks=c(0,2000,4000,6000,8000),\n                     labels=c('0','2k','4k','6k','8k'), \n                     limits=c(0,8000))\n\np2 &lt;- Featurebox(seu, feature='nCount_RNA', cols=col_MainType) + \n  scale_y_continuous(breaks=c(0,10000,20000,30000,40000),\n                     labels=c('0','10k','20k','30k','40k'), limits=c(0,40000)) +\n  theme(axis.text.y=element_blank())\n\np3 &lt;- Featurebox(seu, feature='percent.mt', cols=col_MainType) + \n  scale_y_continuous(breaks=c(0,5,10,15,20),\n                     labels=c('0%','5%','10%','15%','20%'), limits=c(0,20)) +\n    theme(axis.text.y=element_blank())\n\nFigureS1_E &lt;- plot_grid(p1,p2,p3,ncol=3,rel_widths=c(1,0.75,0.75))\nFigureS1_E\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS1/FigureS1_E.pdf\", plot = FigureS1_E, \n       height = 4, width = 8, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>FigureS1</span>"
    ]
  },
  {
    "objectID": "FigureS1.html#figures1_f",
    "href": "FigureS1.html#figures1_f",
    "title": "8  FigureS1",
    "section": "8.6 FigureS1_F",
    "text": "8.6 FigureS1_F\n\n\nCode\ngene_overlap &lt;- intersect(all.Adult@assays$integrated@var.features,\n                          PFC.MERFISH@assays$RNA@var.features)\n\navgexp_MERFISH &lt;- AverageExpression(\n  PFC.MERFISH, group.by = 'L3_cluster', assays='RNA', slot = \"data\", \n  features = gene_overlap\n  )\navgexp_MERFISH &lt;- avgexp_MERFISH$RNA\navgexp_MERFISH_zscore &lt;- t(as.data.frame(scale(t(avgexp_MERFISH))))\n\navgexp_sc &lt;- AverageExpression(all.Adult, group.by = 'SubType_Layer',\n                               features = gene_overlap,\n                               assays='RNA', slot = \"data\")\navgexp_sc &lt;- avgexp_sc$RNA\navgexp_sc_zscore &lt;- t(as.data.frame(scale(t(avgexp_sc))))\n\ngene_cor &lt;- cor(avgexp_MERFISH_zscore, avgexp_sc_zscore)\nrow.order &lt;- c(\"L2/3 IT\",\"L4/5 IT\",\"L5 IT\",\"L6 IT\",\"L5 ET\",\"L5/6 NP\",\"L6 CT\",\n               \"Lamp5\",\"Pvalb\",\"Sst\",\"Vip\",\"Sncg\",\"Astro\",\"VLMC\",\"Endo\",\n               \"Microglia\",\"Oligo\",\"OPC\")\ncol.order &lt;- c(\"L2/3 IT\",\"L4/5 IT\",\"L5 IT\",\"L6 IT\",\"L5 PT\",\"L5 NP\",\"L6 CT\",\n               \"Lamp5\",\"Pvalb\",\"Sst\",\"Vip\",\"Astro\",\"Endo\",\"Microglia\",\n               \"Oligo\",\"OPC\")\nFigureS1_F &lt;- \n  pheatmap::pheatmap(gene_cor[row.order,col.order], \n                     color = colorRampPalette(c(\"white\",\"#d42527\"))(100), \n                     breaks = seq(0,1,0.01),\n                     cluster_rows = F, cluster_cols = F)\nFigureS1_F\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS1/FigureS1_F.pdf\", plot = FigureS1_F, \n       height = 4, width = 5, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>FigureS1</span>"
    ]
  },
  {
    "objectID": "FigureS1.html#figures1_g",
    "href": "FigureS1.html#figures1_g",
    "title": "8  FigureS1",
    "section": "8.7 FigureS1_G",
    "text": "8.7 FigureS1_G\n\n\nCode\ndf &lt;- as.data.frame(table(all.Adult$MainType, all.Adult$BC_label))\ncolnames(df) &lt;- c('MainType','BC_label','Cell_num')\ndf$MainType &lt;- \n  factor(df$MainType, \n         levels = c('Excitatory','Astro','Microglia','Inhibitory','Oligo','Endo','OPC'))\n\nFigureS1_G &lt;- \n  ggplot(df, aes(x = MainType, y = Cell_num, fill = BC_label)) + \n  geom_bar(stat = \"identity\", width = 0.7) +\n  scale_fill_manual(values = col_BC_label) +\n  geom_text(aes(label = Cell_num), color = \"black\", size = 5,\n            position = position_stack(0.5)) +\n  labs(x='', y='', title='') +\n  theme_minimal() +\n  theme(panel.grid = element_blank(),\n        text = element_text(size = 15),\n        legend.title = element_blank(),\n        legend.key.size = unit(1, \"cm\"))\n\nFigureS1_G\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS1/FigureS1_G.pdf\", plot = FigureS1_G,\n       height = 6, width = 10, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>FigureS1</span>"
    ]
  },
  {
    "objectID": "FigureS1.html#figures1_h",
    "href": "FigureS1.html#figures1_h",
    "title": "8  FigureS1",
    "section": "8.8 FigureS1_H",
    "text": "8.8 FigureS1_H\n\n\nCode\nBC_num &lt;- table(Adult.Ex.barcode$BC_num)\nBC_num1to9 &lt;- BC_num[1:9]\nBC_num &lt;- c(BC_num1to9, '&gt;9' = sum(BC_num[10:length(BC_num)]))\nx &lt;- BC_num/sum(BC_num)\nlabels &lt;- paste(names(x),' targets', ' (', round(x,3)*100, '%,', BC_num, ')', sep = '')\ndf &lt;- data.frame(Values = x, Labels = labels)\ndf$Labels &lt;- factor(df$Labels, levels = labels)\n\nFigureS1_H &lt;- \n  ggplot(df, aes(x='', y=Values, fill=Labels)) + \n  geom_bar(stat = 'identity')+\n  coord_polar(theta = 'y')+\n  theme_void() +\n  theme(text = element_text(size = 18), \n        legend.title = element_blank(), legend.key.size = unit(1, \"cm\"),\n        plot.margin=unit(c(0,1,0,0),'lines')) +\n  scale_fill_manual(values = col_BC_num)\n\nFigureS1_H\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS1/FigureS1_H.pdf\", plot = FigureS1_H,\n       height = 6, width = 8, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>FigureS1</span>"
    ]
  },
  {
    "objectID": "FigureS1.html#figures1_i",
    "href": "FigureS1.html#figures1_i",
    "title": "8  FigureS1",
    "section": "8.9 FigureS1_I",
    "text": "8.9 FigureS1_I\n\n\nCode\nseu &lt;- Adult.Ex\nseu$SubType &lt;- factor(\n  seu$SubType,\n  levels = c(\"L2/3_IT_1\",\"L2/3_IT_2\",\"L4/5_IT_1\",\"L4/5_IT_2\",\"L5_IT_1\",\"L5_IT_2\",\n             \"L6_IT_1\",\"L6_IT_2\",\"L5_PT_1\",\"L5_PT_2\",\"L5_NP\",\"L6_CT_1\",\"L6_CT_2\"\n             ))\nfeatures &lt;- c('Calb1','Ddit4l','Otof','Cux2','Rorb','Rspo1','Scn7a','Dio3',\n              'Deptor','S100b','Cpne2','Cbln1','Oprk1','Penk','Nnat','Npy2r',\n              'Pou3f1','Npr3','Npnt','Ndnf','Tshz2','Syt6','Foxp2',\"Sla\",\"Lsp1\")\nFigureS1_I &lt;- DotPlot(\n  seu, \n  features = features,\n  group.by = 'SubType',\n  col.min=0, col.max=2, dot.scale = 10) +\n  scale_y_discrete(limits=rev) +\n  scale_color_gradientn(colours = c(\"lightblue3\", \"lightblue\", \"white\", \"red\", \"red4\")) +\n  theme(axis.title.x=element_blank(), axis.title.y=element_blank(),\n        axis.line=element_blank(),\n        axis.text.x=element_text(angle = 45, hjust = 1, size = 17),\n        axis.text.y=element_text(size = 17),\n        legend.text = element_text(size = 17),\n        legend.title = element_text(size = 17)\n        ) +\n  guides(colour = guide_colorbar(title = \"Expression\"),\n         size = guide_legend(title = \"Percent\")\n         )\n  \nFigureS1_I\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS1/FigureS1_I.pdf\", plot = FigureS1_I, \n       height = 6, width = 15, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>FigureS1</span>"
    ]
  },
  {
    "objectID": "FigureS1.html#figures1_j",
    "href": "FigureS1.html#figures1_j",
    "title": "8  FigureS1",
    "section": "8.10 FigureS1_J",
    "text": "8.10 FigureS1_J\n\n\nCode\nseu &lt;- subset(Adult.Ex, cells = colnames(Adult.Ex)[which(!(Adult.Ex$sample %in% c(\"Adult2\",\"Adult3\") & Adult.Ex$Ex_subtype == \"PT\" & Adult.Ex$BC_num &gt; 0))])\nseu &lt;- subset(seu, cells = colnames(seu)[which(!(seu$BC_num &gt; 0 & seu$Ex_subtype %in% c(\"CT\", \"NP\")))])\n\ndf &lt;- data.frame(\n  \"UMAP_1\" = seu@reductions$umap@cell.embeddings[,\"UMAP_1\"],\n  \"UMAP_2\" = seu@reductions$umap@cell.embeddings[,\"UMAP_2\"]\n)\ndf$`VIS-I` &lt;- seu$`VIS-I`\ndf$`SSp-I` &lt;- seu$`SSp-I`\ndf$`ENTl-I` &lt;- seu$`ENTl-I`\ndf$`ECT-I` &lt;- seu$`ECT-I`\ndf$`CP-C` &lt;- seu$`CP-C`\ndf$`PL-C` &lt;- seu$`PL-C`\ndf$`RSP-C` &lt;- seu$`RSP-C`\ndf$`ACB-C` &lt;- seu$`ACB-C`\ndf$`BLA-C` &lt;- seu$`BLA-C`\ndf$`ENTl-C` &lt;- seu$`ENTl-C`\ndf$`AId-C` &lt;- seu$`AId-C`\ndf$`ECT-C` &lt;- seu$`ECT-C`\ndf$`MD-I` &lt;- seu$`MD-I`\ndf$`SC-I` &lt;- seu$`SC-I`\ndf$`RE-I` &lt;- seu$`RE-I`\ndf$`VTA-I` &lt;- seu$`VTA-I`\n\nBC_col &lt;- c('VIS-I'=\"#536dfe\",'SSp-I'=\"#40c4ff\",'ENTl-I'=\"#ffd740\",'ECT-I'=\"#ffff8d\",'CP-C'=\"#00bfa5\",'PL-C'=\"#00c853\",'RSP-C'=\"#64dd17\",'ACB-C'=\"#a7ffeb\",\n            'BLA-C'=\"#b9f6ca\",'ENTl-C'=\"#ccff90\",'AId-C'=\"#b2ff59\",'ECT-C'=\"#69f0ae\",'MD-I'=\"#ff5252\",'SC-I'=\"#e040fb\",'RE-I'=\"#ff80ab\",'VTA-I'=\"#ea80fc\")\n\ndf &lt;- df[which(df$UMAP_1&lt;7),]\nmax_limits &lt;- c(50,50,50,50,200,100,10,50,\n                5,10,100,20,10,5,50,100)\n\nplist &lt;- list()\nplist_legend &lt;- list()\nfor (i in 1:16){\n  df_i &lt;- df[which(df[,names(BC_col)[i]]&gt;0.1),]\n  df_i &lt;- df_i[,c(\"UMAP_1\",\"UMAP_2\",names(BC_col)[i])]\n  colnames(df_i) &lt;- c(\"UMAP_1\",\"UMAP_2\",\"Value\")\n  col &lt;- pal_scircolor(100)\n  plist[[i]] &lt;- \n    ggplot() +\n    geom_point(df, mapping = aes(x = UMAP_1, y = UMAP_2), color=\"black\", size=0.5) +\n    geom_pointdensity(df_i, mapping = aes(x = UMAP_1, y = UMAP_2), size=0.5) +\n    #geom_point(df_i, mapping = aes(x = UMAP_1, y = UMAP_2), color=Value, size=0.5) +\n    scale_color_gradientn(colours = col,\n                          na.value = col[length(col)],\n                          limits = c(0,max_limits[i]), \n                          breaks = c(0,max_limits[i])\n                          ) +\n    coord_fixed() +\n    ggdark::dark_theme_bw() +\n    labs(title = names(BC_col)[i], x=\"\", y=\"\", colour = \"\") +\n    theme(plot.title = element_text(hjust = 0.5),\n          axis.ticks = element_blank(), axis.text = element_blank(),\n          panel.grid = element_blank(),\n          legend.position = \"right\",\n          legend.key.width  = unit(0.5, \"lines\"),\n          legend.key.height = unit(2, \"lines\"))\n  #ggsave(paste(\"../pdf/FigureS1_1/FigureS1_J/\",names(BC_col)[i],\".png\",sep=\"\"), \n  #       plot = plist[[i]], height = 3, width = 3, units = \"in\")\n}\n\n\nInverted geom defaults of fill and color/colour.\nTo change them back, use invert_geom_defaults().\n\n\nCode\nFigureS1_J &lt;- plot_grid(plotlist = plist, ncol = 8)\nFigureS1_J\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS1/FigureS1_J.pdf\", plot = FigureS1_J, \n       height = 6, width = 24, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>FigureS1</span>"
    ]
  },
  {
    "objectID": "FigureS1.html#figures1_k",
    "href": "FigureS1.html#figures1_k",
    "title": "8  FigureS1",
    "section": "8.11 FigureS1_K",
    "text": "8.11 FigureS1_K\nsee Figure1_H & Figure1_J",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>FigureS1</span>"
    ]
  },
  {
    "objectID": "FigureS1.html#figures1_l",
    "href": "FigureS1.html#figures1_l",
    "title": "8  FigureS1",
    "section": "8.12 FigureS1_L",
    "text": "8.12 FigureS1_L\n\n\nCode\nDefaultAssay(Adult.Ex) &lt;- 'RNA'\nAdult.Ex &lt;- FindVariableFeatures(Adult.Ex, selection.method = \"vst\", \n                                 nfeatures = 10000)\nHVGs &lt;- VariableFeatures(Adult.Ex)\nHVGs_exp &lt;- AverageExpression(Adult.Ex, assays = 'RNA', features = HVGs, \n                              group.by = 'BC_label')\nHVGs_exp &lt;- as.data.frame(HVGs_exp$RNA)\n\n\n\n\nCode\ncor &lt;- cor.test(HVGs_exp$Barcoded, HVGs_exp$Unbarcoded, \"two.sided\", \"pearson\")\nR &lt;- round(cor$estimate,2)\nP &lt;- format(cor$p.value, digits = 2)\nP &lt;- \"2.2e-16\"\n\nFigureS1_L &lt;- \n  ggplot(HVGs_exp, aes(x=Barcoded, y=Unbarcoded)) +\n  geom_smooth(method = \"lm\", color='red', size=0.5) +\n  geom_point(size=0.5, color='black') +\n  xlim(0,10) +\n  ylim(0,10) +\n  theme_bw() +\n  theme(panel.grid = element_blank(), text = element_text(size = 15)) +\n  labs(x='Gene expression (barcoded)', y='Gene expression (Non-barcoded)',\n       title = paste('R =',R,',','P &lt;',P,sep=' '))\nFigureS1_L\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS1/FigureS1_L.pdf\", plot = FigureS1_L, \n       height = 4, width = 4, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>FigureS1</span>"
    ]
  },
  {
    "objectID": "FigureS1.html#figures1_m",
    "href": "FigureS1.html#figures1_m",
    "title": "8  FigureS1",
    "section": "8.13 FigureS1_M",
    "text": "8.13 FigureS1_M\n\n\nCode\nbarcode &lt;- c('VIS-I','SSp-I','CP-I','AUD-I','RSP-I',\n             'BLA-I','ACB-I','ENTl-I','AId-I','ECT-I',\n             'ACB-C','PL-C','ECT-C','ENTl-C',\n             'BLA-C','CP-C','AId-C','RSP-C',\n             'MD-I','RE-I','DR-I','VTA-I','LHA-I','SC-I')\n\navgexp_sc &lt;- Adult.Ex@meta.data[Adult.Ex$BC_num&gt;0, c(barcode,'sample')]\navgexp_sc &lt;- \n  avgexp_sc |&gt;\n  group_by(sample) |&gt;\n  dplyr::summarize(across(1:24, ~sum(.x&gt;0, na.rm = TRUE)))\navgexp_sc &lt;- t(apply(avgexp_sc[,2:25],1,function(x){x/max(x)}))\navgexp_sc &lt;- as.data.frame(t(avgexp_sc))\ncolnames(avgexp_sc) &lt;- c('Adult1','Adult2','Adult3')\n\n\n\n\nCode\ndf1 &lt;- data.frame(\n  'x' = avgexp_sc$Adult1,\n  'y' = avgexp_sc$Adult2,\n  'type' = 'Adult1 VS Adult2'\n)\ndf1 &lt;- df1[which(df1[,1]&gt;0 & df1[,2]&gt;0),]\n\ndf2 &lt;- data.frame(\n  'x' = avgexp_sc$Adult1,\n  'y' = avgexp_sc$Adult3,\n  'type' = 'Adult1 VS Adult3'\n)\ndf2 &lt;- df2[which(df2[,1]&gt;0 & df2[,2]&gt;0),]\n\ndf3 &lt;- data.frame(\n  'x' = avgexp_sc$Adult2,\n  'y' = avgexp_sc$Adult3,\n  'type' = 'Adult2 VS Adult3'\n)\ndf3 &lt;- df3[which(df3[,1]&gt;0 & df3[,2]&gt;0),]\n\ndf &lt;- rbind(df1,df2,df3)\n\ncor &lt;- cor.test(df$x, df$y, \"two.sided\", \"pearson\")\nR &lt;- round(cor$estimate,2)\nP &lt;- format(cor$p.value, digits = 2) \n\nFigureS1_M &lt;- \n  ggplot(df, aes(x=x, y=y)) +\n  geom_point(size=2, color=\"black\") +\n  geom_smooth(method = \"lm\", color='red', se = F) +\n  xlim(0,1) +\n  ylim(0,1) +\n  theme_bw() +\n  theme(panel.grid = element_blank(), text = element_text(size = 12)) +\n  labs(x='Projection strength (scRNAseq sample1)', y='Projection strength (scRNAseq sample2)',\n       title = paste('R =',R,',','P =',P,sep=' '))\n\nFigureS1_M\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS1/FigureS1_M.pdf\", plot = FigureS1_M, \n       height = 4, width = 4, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>FigureS1</span>"
    ]
  },
  {
    "objectID": "FigureS1.html#figures1_n",
    "href": "FigureS1.html#figures1_n",
    "title": "8  FigureS1",
    "section": "8.14 FigureS1_N",
    "text": "8.14 FigureS1_N\n\n\nCode\nbarcode &lt;- c('VIS-I','ACB-I','CP-C','AId-I','CP-I','ECT-C','AId-C','ECT-I',\n             'BLA-I','AUD-I','RSP-C','SSp-I','RSP-I','ACB-C','LHA-I')\nseu &lt;- subset(\n  sp.PFC, \n  cells = colnames(sp.PFC)[which(sp.PFC$ABA_hemisphere==\"Left\")]\n  )\nseu$BC_num &lt;- apply(seu@meta.data[,barcode]&gt;0,1,sum)\navgexp_sp &lt;- seu@meta.data[seu$BC_num&gt;0, c(barcode,'slice')]\navgexp_sp &lt;- \n  avgexp_sp |&gt;\n  dplyr::summarize(across(1:15, ~sum(.x&gt;0, na.rm = TRUE)))\navgexp_sp_sum &lt;- as.numeric(avgexp_sp/max(avgexp_sp))\n\nseu &lt;- Adult.Ex\nseu@meta.data[,barcode][is.na(seu@meta.data[,barcode])] &lt;- 0\nseu$BC_num &lt;- apply(seu@meta.data[,barcode]&gt;0,1,sum)\navgexp_sc &lt;- seu@meta.data[seu$BC_num&gt;0, c(barcode,'sample')]\navgexp_sc &lt;- \n  avgexp_sc |&gt;\n  group_by(sample) |&gt;\n  dplyr::summarize(across(1:15, ~sum(.x&gt;0, na.rm = TRUE)))\navgexp_sc &lt;- t(apply(avgexp_sc[,2:16],1,function(x){x/max(x)}))\navgexp_sc_sum &lt;- as.numeric(colMeans(avgexp_sc))\n\ncor &lt;- cor.test(avgexp_sp_sum, avgexp_sc_sum, \"two.sided\", \"pearson\")\nR &lt;- round(cor$estimate,2)\nP &lt;- format(cor$p.value, digits = 2) \n\ndf &lt;- data.frame(\n  'sp_value' = avgexp_sp_sum,\n  'sc_value' = avgexp_sc_sum\n)\n\nFigureS1_N &lt;- \n  ggplot(df, aes(x=sp_value, y=sc_value)) +\n  geom_point(size=2, color='black') +\n  geom_smooth(method = \"lm\", color='red', se = F) +\n  xlim(0,1) +\n  ylim(0,1) +\n  theme_bw() +\n  theme(panel.grid = element_blank(), text = element_text(size = 12)) +\n  labs(x='Projection strength (in situ sequencing)', y='Projection strength (scRNAseq)',\n       title = paste('R =',R,',','P =',P,sep=' '))\nFigureS1_N\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS1/FigureS1_N.pdf\", plot = FigureS1_N, \n       height = 4, width = 4, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>FigureS1</span>"
    ]
  },
  {
    "objectID": "FigureS1.html#figures1_o",
    "href": "FigureS1.html#figures1_o",
    "title": "8  FigureS1",
    "section": "8.15 FigureS1_O",
    "text": "8.15 FigureS1_O\n\n\nCode\nfmost &lt;- c('CP-I'=5916,'ACB-I'=3099,'RSP-I'=1092,'VIS-I'=660,'SSp-I'=1156,'AUD-I'=353,'BLA-I'=835,'AId-I'=2746,'ECT-I'=552,'ENTl-I'=530)\nfmost_sum &lt;- as.numeric(fmost/max(fmost))\n\nseu &lt;- Adult.Ex\nseu@meta.data[,names(fmost)][is.na(seu@meta.data[,names(fmost)])] &lt;- 0\nseu$BC_num &lt;- apply(seu@meta.data[,names(fmost)]&gt;0,1,sum)\navgexp_sc &lt;- seu@meta.data[seu$BC_num&gt;0, c(names(fmost),'sample')]\navgexp_sc &lt;- \n  avgexp_sc |&gt;\n  group_by(sample) |&gt;\n  dplyr::summarize(across(1:length(fmost), ~sum(.x&gt;0, na.rm = TRUE)))\navgexp_sc &lt;- t(apply(avgexp_sc[,2:(length(fmost)+1)],1,function(x){x/max(x)}))\navgexp_sc_sum &lt;- as.numeric(colMeans(avgexp_sc))\n\ncor &lt;- cor.test(fmost_sum, avgexp_sc_sum, \"two.sided\", \"pearson\")\nR &lt;- round(cor$estimate,2)\nP &lt;- format(cor$p.value, digits = 2) \n\ndf &lt;- data.frame(\n  'fmost_value' = fmost_sum,\n  'sc_value' = avgexp_sc_sum\n)\n\nFigureS1_O &lt;- \n  ggplot(df, aes(x=fmost_value, y=sc_value)) +\n  geom_point(size=2, color='black') +\n  geom_smooth(method = \"lm\", color='red', se = F) +\n  xlim(0,1) +\n  ylim(0,1) +\n  theme_bw() +\n  theme(panel.grid = element_blank(), text = element_text(size = 15)) +\n  labs(x='Gao et al. fMOST Projection', y='our scRNAseq Projection',\n       title = paste('R =',R,',','P =',P,sep=' '))\nFigureS1_O\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS1/FigureS1_O.pdf\", plot = FigureS1_O, \n       height = 4, width = 4, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>FigureS1</span>"
    ]
  },
  {
    "objectID": "FigureS2.html",
    "href": "FigureS2.html",
    "title": "9  FigureS2",
    "section": "",
    "text": "9.1 FigureS2_A\nCode\nknitr::include_graphics(\"images/FigureS2_A.png\", dpi = 300)",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>FigureS2</span>"
    ]
  },
  {
    "objectID": "FigureS2.html#figures2_b",
    "href": "FigureS2.html#figures2_b",
    "title": "9  FigureS2",
    "section": "9.2 FigureS2_B",
    "text": "9.2 FigureS2_B\n\n\nCode\nseu &lt;- sp.PFC\nseu$SubType &lt;- factor(\n  seu$SubType,\n  levels = c(\"L2/3_IT_1\",\"L2/3_IT_2\",\"L4/5_IT_1\",\"L4/5_IT_2\",\"L5_IT_1\",\"L5_IT_2\",\n             \"L6_IT_1\",\"L6_IT_2\",\"L5_PT_1\",\"L5_PT_2\",\"L5_NP\",\"L6_CT_1\",\"L6_CT_2\"\n             ))\nfeatures &lt;- c(\"Ddit4l\",\"Calb1\",\"Otof\",\"Hap1\",\"Dio3\",\"Cux2\",\"Rorb\",\"Tnnc1\",\"Rspo1\",\"Bdnf\",\n              \"Ptn\",\"Sema3d\",\"Cpne7\",\"Deptor\",\"Fstl5\",\"Slc24a2\",\"Oprk1\",\"Penk\",\"Nnat\",\n              \"Pou3f1\",\"S100b\",\"Etv1\",\"Scn4b\",\"Adamts2\",\"Cdh13\",\"Dlk1\",\"Efnb3\",\n              \"Tshz2\",\"Cbln2\",\"Grp\",\"Syt6\",\"Pcp4\")\nFigureS2_B &lt;- DotPlot(\n  seu,\n  features = features,\n  group.by = 'SubType',\n  col.min=0, col.max=2, dot.scale = 10) +\n  scale_y_discrete(limits=rev) +\n  scale_color_gradientn(colours = c(\"lightblue3\", \"lightblue\", \"white\", \"red\", \"red4\")) +\n  theme(axis.title.x=element_blank(), axis.title.y=element_blank(),\n        axis.line=element_blank(),\n        axis.text.x=element_text(angle = 45, hjust = 1, size = 17),\n        axis.text.y=element_text(size = 17),\n        legend.text = element_text(size = 17),\n        legend.title = element_text(size = 17)\n        ) +\n  guides(colour = guide_colorbar(title = \"Expression\"),\n         size = guide_legend(title = \"Percent\")\n         )\n  \nFigureS2_B\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS2/FigureS2_B.pdf\", plot = FigureS2_B, \n       height = 6, width = 18, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>FigureS2</span>"
    ]
  },
  {
    "objectID": "FigureS2.html#figures2_c",
    "href": "FigureS2.html#figures2_c",
    "title": "9  FigureS2",
    "section": "9.3 FigureS2_C",
    "text": "9.3 FigureS2_C\n\n\nCode\nseu &lt;- sp.all\nslice &lt;- 'IT_slice_15'\nfeatures &lt;- c(\"Ddit4l\",\"Calb1\",\"Otof\",\"Hap1\",\"Dio3\",\"Cux2\",\"Rorb\",\"Tnnc1\",\"Rspo1\",\"Bdnf\",\"Ptn\",\"Sema3d\",\"Cpne7\",\"Deptor\",\"Fstl5\",\"Slc24a2\",\"Oprk1\",\"Penk\",\"Nnat\",\"Pou3f1\",\"S100b\",\"Etv1\",\"Scn4b\",\"Adamts2\",\"Cdh13\",\"Dlk1\",\"Efnb3\",\"Tshz2\",\"Cbln2\",\"Grp\",\"Syt6\",\"Pcp4\")\ngene &lt;- features[2]\nlimits &lt;- c(0,3)\n\ndf &lt;- data.frame(\n  X = seu$X,\n  Y = seu$Y,\n  Zscore = scale(log1p(seu@assays$RNA@counts[gene,]))\n)\ndf &lt;- df[which(seu$slice==slice),]\ndf$Zscore[df$Zscore&lt;limits[1]] &lt;- limits[1]\ndf$Zscore[df$Zscore&gt;limits[2]] &lt;- limits[2]\ndf &lt;- df[order(df$Zscore),]\n\nFigureS2_C &lt;- \n  ggplot(df,aes(x=X,y=Y)) +\n  geom_point(aes(colour=Zscore), size=0.5) +\n  scale_color_gradientn(colours = viridis(n = 256, option = \"D\", direction = 1),\n                       limits = limits) +\n  #labs(title = gene) +\n  ggdark::dark_theme_void() +\n  theme(plot.title = element_text(size = 20, hjust = 0.5),\n        legend.position = \"none\") +\n  coord_fixed()\nFigureS2_C\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS2/FigureS2_C/02.Calb1.png\", plot = FigureS2_C, \n       height = 4, width = 4, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>FigureS2</span>"
    ]
  },
  {
    "objectID": "FigureS2.html#figures2_d",
    "href": "FigureS2.html#figures2_d",
    "title": "9  FigureS2",
    "section": "9.4 FigureS2_D",
    "text": "9.4 FigureS2_D\n\n\nCode\nknitr::include_graphics(\"images/FigureS2_D.png\", dpi = 300)",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>FigureS2</span>"
    ]
  },
  {
    "objectID": "FigureS3.html",
    "href": "FigureS3.html",
    "title": "10  FigureS3",
    "section": "",
    "text": "10.1 FigureS3_A\nCode\ndf &lt;- fread('../data/csv/all_3mismatch_reads.txt', header = T)\nFigureS3_A &lt;- \n  ggplot(df, aes(x=mismatch, fill=Type)) +\n    geom_bar(color=\"black\",width = 0.8) +\n    scale_x_continuous(breaks = seq(0,20,5)) +\n    scale_fill_manual(values = c(\"black\",\"white\")) +\n    labs(x=\"number of mismatch\", y=\"UMI counts\") +\n    theme_classic() +\n    theme(text = element_text(size = 15))\nFigureS3_A\nCode\nggsave(\"../pdf/FigureS3/FigureS3_A.pdf\", plot = FigureS3_A, \n       height = 4, width = 6, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>FigureS3</span>"
    ]
  },
  {
    "objectID": "FigureS3.html#figures3_b",
    "href": "FigureS3.html#figures3_b",
    "title": "10  FigureS3",
    "section": "10.2 FigureS3_B",
    "text": "10.2 FigureS3_B\n\n\nCode\nBC_order &lt;- c(\"AId-C\",\"ECT-C\",\"ENTl-C\",\"ENTl-I\",\"DR-I\",\"LHA-I\",\"VTA-I\",\"RE-I\",\"SC-I\",\"MD-I\",\"AId-I\",\"PL-C\",\"VIS-I\",\"BLA-I\",\"BLA-C\",\"ECT-I\",\"SSp-I\",\"ACB-I\",\"CP-I\",\"ACB-C\",\"RSP-I\",\"RSP-C\",\"AUD-I\",\"CP-C\")\nBC_mat &lt;- all.Adult@meta.data[,BC_order]\nBC_mat$cellid &lt;- rownames(BC_mat)\ndf &lt;- pivot_longer(BC_mat, !cellid, names_to = \"Target\", values_to = \"Expression\")\ndf &lt;- df[which(df$Expression&gt;0),]\n\nFigureS3_B &lt;- \n  df |&gt;\n  mutate(class = fct_reorder(Target, Expression, .fun='median')) |&gt;\n  ggplot(aes(x=reorder(Target, Expression), y=Expression, fill=Target)) +\n  geom_boxplot() +\n  scale_y_log10() +\n  scale_fill_manual(values = col_Barcode) +\n  labs(y=\"UMI counts\", x= \"Projection targets\") +\n  theme_classic() +\n  theme(legend.position=\"none\", text = element_text(size = 15),\n        axis.text.x = element_text(angle = 45, hjust = 1, size = 12))\nFigureS3_B\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS3/FigureS3_B.pdf\", plot = FigureS3_B, \n       height = 4, width = 7, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>FigureS3</span>"
    ]
  },
  {
    "objectID": "FigureS3.html#figures3_c",
    "href": "FigureS3.html#figures3_c",
    "title": "10  FigureS3",
    "section": "10.3 FigureS3_C",
    "text": "10.3 FigureS3_C\n\n\nCode\nBarcode &lt;- c(\"CP-I\",\"SSp-I\",\"PL-C\",\"CP-C\",\"ACB-C\",\"RSP-C\",\"AUD-I\",\"RSP-I\",\"LHA-I\",\n             \"DR-I\",\"VTA-I\",\"RE-I\",\"SC-I\",\"MD-I\",\"ECT-I\",\"BLA-I\",\"VIS-I\",\"BLA-C\",\n             \"ACB-I\",\"AId-I\",\"ENTl-I\",\"ENTl-C\",\"ECT-C\",\"AId-C\")\n\nBC_num &lt;- list()\nfor (i in 1:length(Barcode)){\n  BC_num[[i]] &lt;- length(which(Adult.Ex.barcode@meta.data[,Barcode[i]] &gt; 0))\n}\ndf &lt;- data.frame('Barcode' = Barcode, 'Num' = as.numeric(BC_num))\ndf$Barcode &lt;- factor(df$Barcode, \n                     levels = df$Barcode[order(df$Num, decreasing = T)])\n\nFigureS3_C &lt;- \n  ggplot(df, aes(x=Barcode, y=Num)) + \n  geom_col(width=0.7, fill=\"#342f86\") +\n  theme_classic() +\n  theme(panel.grid = element_blank(), \n        axis.text.x = element_text(angle=45, hjust = 1, size = 12),\n        text = element_text(size = 15)) +\n  labs(x='Projection targets', y='Cell number')\nFigureS3_C\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS3/FigureS3_C.pdf\", plot = FigureS3_C, \n       height = 4, width = 7, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>FigureS3</span>"
    ]
  },
  {
    "objectID": "FigureS3.html#figures3_d",
    "href": "FigureS3.html#figures3_d",
    "title": "10  FigureS3",
    "section": "10.4 FigureS3_D",
    "text": "10.4 FigureS3_D\n\n\nCode\nBarcode &lt;- c('ACB-I','ACB-C','AId-I','AId-C','AUD-I','BLA-I','BLA-C','CP-I','CP-C',\n             'ECT-I','ECT-C','ENTl-I','ENTl-C','PL-C','RSP-I','RSP-C','SSp-I','VIS-I',\n             'DR-I','LHA-I','MD-I','RE-I','SC-I','VTA-I')\n\nAdult1_thread &lt;- c('ACB-C'=3,'ACB-I'=9,'BLA-I'=4,'CP-C'=8,'CP-I'=9,'DR-I'=6,'LHA-I'=5,\n                   'MD-I'=3,'RE-I'=5,'SC-I'=4,'VIS-I'=7,'VTA-I'=5)\nAdult2_thread &lt;- c('ACB-C'=5,'ACB-I'=20,'AId-C'=9,'AId-I'=11,'AUD-I'=11,'BLA-I'=11,\n                   'CP-C'=30,'CP-I'=30,'ECT-I'=8,'ENTl-I'=5,'PL-C'=19,'RSP-I'=15,\n                   'SSp-I'=10,'VIS-I'=3)\nAdult3_thread &lt;- c('ACB-C'=7,'ACB-I'=25,'AId-C'=8,'AId-I'=15,'BLA-C'=3,'BLA-I'=11,\n                   'CP-C'=18,'CP-I'=30,'ECT-C'=9,'ECT-I'=11,'ENTl-C'=5,'ENTl-I'=3,\n                   'RSP-C'=5,'RSP-I'=12,'SSp-I'=14,'VIS-I'=3)\nthread &lt;- list('Adult1'=Adult1_thread, 'Adult2'=Adult2_thread, 'Adult3'=Adult3_thread)\n\nBC_mat &lt;- all.inte@meta.data[,c(Barcode,'sample','IfNeuron')]\nBC_mat &lt;- BC_mat |&gt;\n  pivot_longer(!(sample:IfNeuron), names_to = \"Target\", values_to = \"Counts\") |&gt;\n  filter(Counts &gt; 0) |&gt;\n  dplyr::count(sample, IfNeuron, Target, Counts)\nBC_mat$thread &lt;- 0\nfor (i in 1:nrow(BC_mat)){\n  BC_mat$thread[i] &lt;- thread[[BC_mat$sample[i]]][[BC_mat$Target[i]]]\n}\n\nplist &lt;- list()\nsample &lt;- c('Adult1','Adult2','Adult3')\nfor (n in 1:3){\n  sample_n &lt;- sample[n]\n  thread_n &lt;- thread[[n]]\n  for (i in 1:length(thread_n)){\n    df_i &lt;- BC_mat[BC_mat$sample==sample_n & BC_mat$Target==names(thread_n)[i],]\n    thread_i &lt;- as.numeric(thread_n[i])\n    plist[[sample_n]][[i]] &lt;-\n      ggplot(df_i, aes(x=Counts, y=n, color=IfNeuron)) + \n      geom_line(linewidth=1) +\n      geom_vline(xintercept= thread_i, colour=\"#9192ab\", linetype=\"dashed\", linewidth=1) +\n      labs(title = names(thread_n)[i]) +\n      scale_x_continuous(name='', limits=c(0,100), breaks=c(0,thread_i,50,100)) +\n      scale_y_continuous(name = '', limits = c(0,50),\n                         breaks = c(0,10,20,30,40,50)) +\n      theme_bw() +\n      theme(plot.title = element_text(size=20, hjust=0.5),\n            legend.title=element_blank(), legend.position=\"none\") + \n    scale_color_manual(values = c(\"#f89588\",\"#63b2ee\"))\n  }\n}\n\n\nAdult1\n\n\nCode\nAdult1_plot &lt;- plot_grid(plotlist = plist[['Adult1']], ncol=7)\nAdult1_plot\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS3/FigureS3_D_Adult1.pdf\", plot = Adult1_plot, \n       height = 5, width = 16, units = \"in\")\n\n\nAdult2\n\n\nCode\nAdult2_plot &lt;- plot_grid(plotlist = plist[['Adult2']], ncol=7)\nAdult2_plot\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS3/FigureS3_D_Adult2.pdf\", plot = Adult2_plot, \n       height = 5, width = 16, units = \"in\")\n\n\nAdult3\n\n\nCode\nAdult3_plot &lt;- plot_grid(plotlist = plist[['Adult3']], ncol=7)\nAdult3_plot\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS3/FigureS3_D_Adult3.pdf\", plot = Adult3_plot, \n       height = 7.5, width = 16, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>FigureS3</span>"
    ]
  },
  {
    "objectID": "FigureS4.html",
    "href": "FigureS4.html",
    "title": "11  FigureS4",
    "section": "",
    "text": "Code\nknitr::include_graphics(\"images/FigureS4.jpg\", dpi = 300)",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>FigureS4</span>"
    ]
  },
  {
    "objectID": "FigureS5.html",
    "href": "FigureS5.html",
    "title": "12  FigureS5",
    "section": "",
    "text": "12.1 FigureS5_A\nCode\nslice &lt;- 'IT_slice_05'\nbarcode &lt;- 'CP-I'\nlimits &lt;- c(0,3)\n\nseu &lt;- subset(sp.PFC, cells=colnames(sp.PFC)[which(sp.PFC$ABA_hemisphere==\"Left\")])\ndf &lt;- data.frame(\n  X = seu$X,\n  Y = seu$Y,\n  Zscore = scale(log1p(seu@meta.data[,barcode]))\n)\ndf &lt;- df[which(seu$slice==slice),]\ndf$Zscore[df$Zscore&lt;limits[1]] &lt;- limits[1]\ndf$Zscore[df$Zscore&gt;limits[2]] &lt;- limits[2]\ndf &lt;- df[order(df$Zscore),]\n\nFigureS5_A &lt;- \n  ggplot(df, aes(x=X,y=Y)) +\n  geom_point(aes(colour=Zscore), size=1) +\n  scale_color_gradientn(colours = viridis(n = 256, option = \"E\", direction = 1),\n                       limits = limits) +\n  ggdark::dark_theme_void() +\n  labs(title = \"\") +\n  theme(plot.title = element_blank(), legend.position = \"none\") +\n  coord_fixed()\nFigureS5_A\nCode\nggsave(\"../pdf/FigureS5/FigureS5_A/CP_slice05.png\", plot = FigureS5_A, \n       height = 4, width = 4, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>FigureS5</span>"
    ]
  },
  {
    "objectID": "FigureS5.html#figures5_b",
    "href": "FigureS5.html#figures5_b",
    "title": "12  FigureS5",
    "section": "12.2 FigureS5_B",
    "text": "12.2 FigureS5_B\n\n\nCode\nseu &lt;- subset(sp.PFC, cells=colnames(sp.PFC)[which(sp.PFC$ABA_hemisphere==\"Left\")])\nslice &lt;- unique(seu$slice)\ndf &lt;- data.frame('slice'=slice)\nfor (i in 1:length(slice)){\n  df$`ACB-I`[i] &lt;- length(which(seu$slice==slice[i] &\n                              seu$`ACB-I`&gt;0))/\n    length(which(seu$slice==slice[i] & seu$BC_num&gt;0))\n  df$`CP-I`[i] &lt;- length(which(seu$slice==slice[i] &\n                              seu$`CP-I`&gt;0))/\n    length(which(seu$slice==slice[i] & seu$BC_num&gt;0))\n}\ndf$x &lt;- c(1:36)\ndf &lt;- pivot_longer(df, 2:3, names_to = \"target\", values_to = \"value\")\n# RSP.I=\"#6BD76BFF\" BLA=\"#D595A7FF\"\nFigureS5_B_1 &lt;- \n  ggplot(df, aes(x=x, y=value, color=target)) +\n  #geom_line(color=\"#D595A7FF\",size=1) +\n  geom_point(alpha=0.5, size=3) +\n  geom_smooth(se = F, linewidth=1.5) +\n  theme_bw() +\n  scale_x_continuous(breaks = seq(0,35,5)) +\n  scale_color_manual(values = c('ACB-I'=\"#ff7f0e\", 'CP-I'=\"#1f77b4\")) +\n  theme(text = element_text(size=15), \n        plot.title = element_text(size = 20, hjust = 0.5)) +\n  labs(x='A → P',y='Cell proportion')\nFigureS5_B_1\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS5/FigureS5_B_1.pdf\", plot = FigureS5_B_1, \n       height = 2.5, width = 6, units = \"in\")\n\n\n\n\nCode\nbarcode &lt;- c(\"VIS-I\",\"ACB-I\",\"AId-I\",\"CP-I\",\"ECT-I\",\n             \"BLA-I\",\"AUD-I\",\"SSp-I\",\"RSP-I\",\"LHA-I\")\nseu &lt;- subset(sp.PFC, cells=colnames(sp.PFC)[which(sp.PFC$ABA_hemisphere==\"Left\")])\nbc_slice &lt;- seu@meta.data[,c(barcode, 'Y','BC_num')]\nbc_slice &lt;- \n  bc_slice |&gt;\n  mutate(bin = cut(Y, breaks = 36))\nbin &lt;- sort(unique(bc_slice$bin))\nbc_slice$bin_index &lt;- match(bc_slice$bin, bin)\n\n\ndf &lt;- data.frame('bin_index'=c(1:36))\nfor (i in 1:36){\n  df$`ACB-I`[i] &lt;- length(which(bc_slice$bin_index==i & bc_slice$`ACB-I`&gt;0))/\n    length(which(bc_slice$bin_index==i & bc_slice$BC_num&gt;0))\n  df$`CP-I`[i] &lt;- length(which(bc_slice$bin_index==i &\n                              bc_slice$`CP-I`&gt;0))/\n    length(which(bc_slice$bin_index==i & bc_slice$BC_num&gt;0))\n}\ndf$x &lt;- c(1:36)\ndf &lt;- pivot_longer(df, 2:3, names_to = \"target\", values_to = \"value\")\n# RSP.I=\"#6BD76BFF\" BLA=\"#D595A7FF\"\nFigureS5_B_2 &lt;- \n  ggplot(df, aes(x=x, y=value, color=target)) +\n  #geom_line(color=\"#D595A7FF\",size=1) +\n  geom_point(alpha=0.5, size=3) +\n  geom_smooth(se = F, linewidth=1.5) +\n  theme_bw() +\n  scale_x_continuous(breaks = seq(0,35,5)) +\n  scale_color_manual(values = c('ACB-I'=\"#ff7f0e\", 'CP-I'=\"#1f77b4\")) +\n  theme(text = element_text(size=15), \n        plot.title = element_text(size = 20, hjust = 0.5)) +\n  labs(x='V → D',y='Cell proportion')\nFigureS5_B_2\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS5/FigureS5_B_2.pdf\", plot = FigureS5_B_2, \n       height = 2.5, width = 6, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>FigureS5</span>"
    ]
  },
  {
    "objectID": "FigureS5.html#figures5_c",
    "href": "FigureS5.html#figures5_c",
    "title": "12  FigureS5",
    "section": "12.3 FigureS5_C",
    "text": "12.3 FigureS5_C\n\n\nCode\nlibrary(networkD3)\n\nIT_SubType &lt;- c(\"L2/3_IT_1\", \"L4/5_IT_1\", \"L5_IT_1\", \"L6_IT_1\",\n                \"L2/3_IT_2\",\"L4/5_IT_2\", \"L5_IT_2\", \"L6_IT_2\")\nseu &lt;- subset(Adult.IT.PT.barcode, cells=colnames(Adult.IT.PT.barcode)[which(Adult.IT.PT.barcode$SubType %in% IT_SubType)])\nmat &lt;- matrix(nrow = 2, ncol = length(IT_SubType))\nrownames(mat) &lt;- c(\"CP-I\", \"ACB-I\")\ncolnames(mat) &lt;- IT_SubType\n\nfor (i in 1:2){\n  mat[i,] &lt;- as.numeric(table(seu$SubType[which(seu@meta.data[,rownames(mat)[i]]&gt;0)])[IT_SubType])\n}\nmat &lt;- mat/rowSums(mat)\nmat &lt;- as.data.frame(mat)\nmat$Target &lt;- rownames(mat)\n\nlinks &lt;- pivot_longer(mat, !Target, names_to = \"SubType\", values_to = \"value\")\ncolnames(links) &lt;- c('target', 'source', 'value')\n\nlinks &lt;- links[which(links$value != 0),]\nnodes &lt;- c(IT_SubType,\"CP-I\",\"ACB-I\")\nnodes &lt;- data.frame(name=nodes)\nnodes$index &lt;- 0:(nrow(nodes) - 1)\nlinks &lt;- merge(links, nodes, by.x=\"source\", by.y=\"name\")\nlinks &lt;- merge(links, nodes, by.x=\"target\", by.y=\"name\")\nnames(links) &lt;- c(\"target\",\"source\",\"Value\",\"IDsource\",\"IDtarget\")\n\nnodes.colour &lt;- c(\n  \"L2/3_IT_1\"='#ffd600',\"L4/5_IT_1\"='#ff6d00',\"L5_IT_1\"='#0091ea',\"L6_IT_1\"='#c51162',\"L2/3_IT_2\"='#ffff8d',\"L4/5_IT_2\"='#ffd180',\"L5_IT_2\"='#80d8ff',\"L6_IT_2\"='#ff80ab',\"CP-I\"=\"#1f77b4\",\"ACB-I\"=\"#ff7f0e\")\npastecolor &lt;- paste('d3.scaleOrdinal() .domain([\"', nodes$name[1], sep = '')\nfor (i in 2:length(nodes$name)){\n  pastecolor &lt;- paste(pastecolor, '\", \"', nodes$name[i], sep = '')\n}\npastecolor &lt;- paste(pastecolor, '\"]) .range([\"', sep = '')\npastecolor &lt;- paste(pastecolor, nodes.colour[1], sep = '')\nfor (i in 2:length(nodes.colour)){\n  pastecolor &lt;- paste(pastecolor,'\", \"', nodes.colour[i], sep = '')\n  }\npastecolor &lt;- paste(pastecolor,'\"])', sep = '')\ncolourScale &lt;- pastecolor\n\n\nlinks$Group &lt;- links$target\nlinks$Group &lt;- as.factor(links$Group)\ncolnames(links) &lt;- c(\"source\", \"target\", \"Value\", \"IDtarget\", \"IDsource\", \"Group\")\n\nFigureS5_C &lt;- \n  sankeyNetwork(Links=links, Nodes=nodes, Source=\"IDsource\", Target=\"IDtarget\",\n              Value=\"Value\", NodeID=\"name\", fontSize=20,\n              nodeWidth=30, nodePadding=10, margin=NULL,\n              height=600, width=400, sinksRight=TRUE,\n              colourScale=colourScale, LinkGroup=\"Group\",iterations=0)\nFigureS5_C\n\n\n\n\n\n\n\n\nCode\nsaveNetwork(FigureS5_C,\"../pdf/FigureS5/FigureS5_C/FigureS5_C.html\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>FigureS5</span>"
    ]
  },
  {
    "objectID": "FigureS5.html#figures5_d",
    "href": "FigureS5.html#figures5_d",
    "title": "12  FigureS5",
    "section": "12.4 FigureS5_D",
    "text": "12.4 FigureS5_D\n\n\nCode\n#seu &lt;- Adult.IT.PT.barcode\n#ACB_I &lt;- colnames(seu)[which(seu$`ACB-I`&gt;0 & seu$`CP-I`==0)]\n#CP_I &lt;- colnames(seu)[which(seu$`CP-I`&gt;0 & seu$`ACB-I`==0)]\n#DEGs &lt;- FindMarkers(seu, ident.1 = ACB_I, ident.2 = CP_I, logfc.threshold = 0)\n#saveRDS(DEGs, '../data/rds/DEGs_ACB_VS_CP.rds')\nDEGs &lt;- readRDS('../data/rds/DEGs_ACB_VS_CP.rds')\n\n\n\n\nCode\nDEGs$label &lt;- \"\"\ntop5_gene &lt;- rownames(DEGs)[which(DEGs$avg_log2FC&gt;0.5 & DEGs$p_val_adj&lt;1e-2)]\nif(length(top5_gene)&gt;5){\n  top5_gene &lt;- top5_gene[1:5]\n  }\ndown5_gene &lt;- rownames(DEGs)[which(DEGs$avg_log2FC &lt; -0.5 &\n                                   DEGs$p_val_adj &lt; 1e-2)]\nif(length(down5_gene)&gt;5){\n  down5_gene &lt;- down5_gene[1:5]\n  }\n\n#top5_gene &lt;- c(top5_gene,\"Cnr1\")\n#down5_gene &lt;- c(down5_gene,\"Bdnf\")\n\nDEGs$label[match(top5_gene, rownames(DEGs))] &lt;- top5_gene\nDEGs$label[match(down5_gene, rownames(DEGs))] &lt;- down5_gene\nDEGs$Type &lt;- 'not significant'\nDEGs$Type[which(DEGs$avg_log2FC&gt;0.5 & DEGs$p_val_adj&lt;1e-2)] &lt;- \"Up\"\nDEGs$Type[which(DEGs$avg_log2FC &lt; -0.5 & DEGs$p_val_adj&lt;1e-2)] &lt;- \"Down\"\n  \nFigureS5_D &lt;- \n  ggplot(DEGs, aes(x=avg_log2FC, y= -log10(p_val_adj))) +\n  geom_point(aes(color=Type), size=0.5) +\n  geom_vline(aes(xintercept=0.5), colour=\"black\", linetype=\"dashed\", \n               linewidth = 0.5) +\n    geom_vline(aes(xintercept = -0.5), colour=\"black\", linetype=\"dashed\", \n               linewidth = 0.5) +\n    geom_text_repel(aes(label=label, color=Type), size=3, max.overlaps=100) +\n    theme_classic() +\n    theme(plot.title = element_text(size = 20, hjust = 0.5),\n          text = element_text(size = 15), legend.position = \"none\") +\n    scale_color_manual(values = c(\"Up\"='#c82423', \"Down\"='#2878b5',\n                                  'not significant'='lightgray')) +\n    xlim(min(DEGs$avg_log2FC), max(DEGs$avg_log2FC)) +\n    ylim(0,270) +\n    labs(title = \"\", x = 'log2FC', y = '-log10(P value)')\nFigureS5_D\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS5/FigureS5_D.pdf\", plot = FigureS5_D, \n       height = 3, width = 4, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>FigureS5</span>"
    ]
  },
  {
    "objectID": "FigureS5.html#figures5_e",
    "href": "FigureS5.html#figures5_e",
    "title": "12  FigureS5",
    "section": "12.5 FigureS5_E",
    "text": "12.5 FigureS5_E\n\n\nCode\n#cluster_order &lt;- c(\"CP-I\",\"CP-I + CP-C\",\"CP-I + RSP-I\",\"CP-I + AUD-I\", \"SSp-I\", \"PL-C\", \"PL-C + CP-I\", \"PL-C + CP-C\", \"CP-C\", \"CP-C + ACB-I\", \"ACB-C\", \"AUD-I\", \"RSP-I\", \"RSP-I + ACB-I\", \"LHA-I\", \"DR-I\", \"VTA-I\", \"ECT-I\", \"BLA-I\",\"BLA-I + ACB-I\", \"VIS-I\", \"ACB-I + AId-I\",\"ACB-I + PL-C\",\"ACB-I + CP-I\",\"ACB-I\",\"AId-I + CP-I\",\"AId-I\", \"ECT-C\", \"AId-C\")\nBC_order &lt;- c(\"AId-C\",\"ECT-C\",\"ENTl-C\",\"ENTl-I\",\"DR-I\",\"LHA-I\",\"VTA-I\",\"RE-I\",\"SC-I\",\"MD-I\",\"AId-I\",\"PL-C\",\"VIS-I\",\"BLA-I\",\"BLA-C\",\"ECT-I\",\"SSp-I\",\"ACB-I\",\"CP-I\",\"ACB-C\",\"RSP-I\",\"RSP-C\",\"AUD-I\",\"CP-C\")\n\nEx_BC_mat &lt;- Adult.Ex.barcode@meta.data[,BC_order]\nEx_BC_mat[is.na(Ex_BC_mat)] &lt;- 0\nannotation_row &lt;- data.frame(\n  Subtype = factor(Adult.Ex.barcode$Proj_subtype, levels = 1:33),\n  Module = factor(Adult.Ex.barcode$Proj_module,\n                  levels = c('ITi-D', 'ITi-V', 'ITc', 'PTi'))\n)\nrownames(annotation_row) &lt;- rownames(Ex_BC_mat)\nannotation_colors = list(\n  Subtype = col_Proj_subtype,\n  Module = col_Proj_module\n)\n\nFigureS5_E &lt;- \n  pheatmap(Ex_BC_mat[,BC_order], \n           cluster_rows = T, cluster_cols = F, \n           show_rownames=F, \n           color = colorRampPalette(c(\"white\", \"red\"))(50), \n           annotation_row = annotation_row, annotation_colors = annotation_colors,\n           fontsize = 10)\n\nFigureS5_E\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS5/FigureS5_E.pdf\", plot = FigureS5_E, \n       height = 10, width = 12, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>FigureS5</span>"
    ]
  },
  {
    "objectID": "FigureS5.html#figures5_f",
    "href": "FigureS5.html#figures5_f",
    "title": "12  FigureS5",
    "section": "12.6 FigureS5_F",
    "text": "12.6 FigureS5_F\n\n\nCode\nBC_order &lt;- c('CP-I','VIS-I','SSp-I','RSP-I','AUD-I',\n             'ACB-I','AId-I','BLA-I','ECT-I','ENTl-I',\n             'AId-C','ECT-C','ENTl-C','PL-C','ACB-C','CP-C','BLA-C','RSP-C',\n             'DR-I','SC-I','LHA-I','RE-I','MD-I','VTA-I')\n\nseu &lt;- Adult.Ex.barcode\nseu@meta.data[,BC_order][is.na(seu@meta.data[,BC_order])] &lt;- 0\nseu$Proj_subtype &lt;- factor(\n  seu$Proj_subtype,\n  levels = c(1,14,17,22,23,25,26,27,28,29,31,\n             7,8,9,10,15,16,18,19,20,21,\n             2,3,11,12,13,24,30,32,33,\n             4,5,6))\n\nFigureS5_F &lt;- \n  DotPlot(seu, features = BC_order, group.by = 'Proj_subtype',\n          cols = c(\"lightgrey\", \"red\")) + \n  coord_flip() +\n  scale_x_discrete(limits=rev) +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 0, hjust = 0)) +\n  labs(x='', y='')\n\nFigureS5_F\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS5/FigureS5_F.pdf\", plot = FigureS5_F, \n       height = 5, width = 10, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>FigureS5</span>"
    ]
  },
  {
    "objectID": "FigureS5.html#figures5_g",
    "href": "FigureS5.html#figures5_g",
    "title": "12  FigureS5",
    "section": "12.7 FigureS5_G",
    "text": "12.7 FigureS5_G\n\n\nCode\nBarcode_order &lt;- c('MD-I','RE-I','DR-I','VTA-I','LHA-I','SC-I',\n                   'VIS-I','SSp-I','CP-I','AUD-I','RSP-I',\n                   'BLA-I','ACB-I','ENTl-I','AId-I','ECT-I',\n                   'ACB-C','PL-C','ECT-C','ENTl-C',\n                   'BLA-C','CP-C','AId-C','RSP-C'\n             )\n\nEx_BC_mat &lt;- Adult.IT.PT.barcode@meta.data[,c(Barcode_order,'Proj_module')]\nBC_module_mat &lt;- \n  Ex_BC_mat |&gt;\n  group_by(Proj_module) |&gt;\n  dplyr::summarize(across(1:24, ~ mean(.x, na.rm = TRUE))) |&gt; \n  mutate_all(~replace(., is.na(.), 0))\nBC_module_zscore &lt;- scale(BC_module_mat[,2:25])\nrownames(BC_module_zscore) &lt;- BC_module_mat$Proj_module\n\nbreaks &lt;- seq(0,1,0.01)\nFigureS5_G &lt;- \n  pheatmap(BC_module_zscore[c('PTi','ITi-D','ITi-V','ITc'),Barcode_order],\n           cluster_rows = F, cluster_cols = F,\n           show_colnames=T, show_rownames = T,\n           breaks = breaks,\n           color = colorRampPalette(c(\"white\",\"firebrick3\"))(length(breaks))\n         )\n\nFigureS5_G\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS5/FigureS5_G.pdf\", plot = FigureS5_G, \n       height = 4, width = 6, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>FigureS5</span>"
    ]
  },
  {
    "objectID": "FigureS5.html#figures5_h",
    "href": "FigureS5.html#figures5_h",
    "title": "12  FigureS5",
    "section": "12.8 FigureS5_H",
    "text": "12.8 FigureS5_H\n\n\nCode\nUMAP &lt;- Adult.IT.PT.barcode@reductions$umap@cell.embeddings\nseu &lt;- subset(Adult.IT.PT.barcode,\n              cells = colnames(Adult.IT.PT.barcode)[which(UMAP[,'UMAP_1']&lt;1)])\n\np1 &lt;- Plot_Density_Custom(\n  seurat_object = seu, features = 'ITi_D_score',\n  custom_palette = colorRampPalette(c(\"#eeeded\",\"#f0de36\",\"#d71313\"))(100)) + \n  theme_void() +\n  theme(plot.title = element_text(size = 30, hjust = 0.5)) +\n  labs(title = \"ITi-D\")\n\np2 &lt;- Plot_Density_Custom(\n  seurat_object = seu, features = 'ITi_V_score',\n  custom_palette = colorRampPalette(c(\"#eeeded\",\"#f0de36\",\"#d71313\"))(100)) + \n  ##scale_colour_gradientn(colours = c(\"lightgray\",\"yellow\", \"orange\",\"darkred\")) +\n  theme_void() +\n  theme(plot.title = element_text(size = 30, hjust = 0.5)) +\n  labs(title = \"ITi-V\")\n\np3 &lt;- Plot_Density_Custom(\n  seurat_object = seu, features = 'ITc_score',\n  custom_palette = colorRampPalette(c(\"#eeeded\",\"#f0de36\",\"#d71313\"))(100)) + \n  theme_void() +\n  theme(plot.title = element_text(size = 30, hjust = 0.5)) +\n  labs(title = \"ITc\")\n\nseu$PTi_score[is.nan(seu$PTi_score)] &lt;- 0\np4 &lt;- Plot_Density_Custom(\n  seurat_object = seu, features = 'PTi_score',\n  custom_palette = colorRampPalette(c(\"#eeeded\",\"#f0de36\",\"#d71313\"))(100)) + \n  theme_void() +\n  theme(plot.title = element_text(size = 30, hjust = 0.5)) +\n  labs(title = \"PTi\")\n\nFigureS5_H &lt;- plot_grid(p1,p2,p3,p4,ncol = 4)\nFigureS5_H\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS5/FigureS5_H.pdf\", plot = FigureS5_H, \n       height = 4, width = 16, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>FigureS5</span>"
    ]
  },
  {
    "objectID": "FigureS5.html#figures5_i",
    "href": "FigureS5.html#figures5_i",
    "title": "12  FigureS5",
    "section": "12.9 FigureS5_I",
    "text": "12.9 FigureS5_I\n\n\nCode\n#seu &lt;- Adult.IT.PT.barcode\n#Idents(seu) &lt;- \"Proj_module\"\n#DEGs &lt;- FindAllMarkers(seu, logfc.threshold = 0.25, min.pct = 0.1)\n#DEGs$p_val_adj[which(DEGs$p_val_adj==0)] &lt;- 1e-290\n#saveRDS(DEGs, '../data/rds/DEGs_Proj_module.rds')\nDEGs &lt;- readRDS('../data/rds/DEGs_Proj_module.rds')\n\n\n\n\nCode\nproj_module &lt;- c(\"ITi-D\",\"ITi-V\",\"ITc\",\"PTi\")\nplist &lt;- list()\nfor (i in 1:4){\n  DEGs_module &lt;- DEGs[DEGs$cluster == proj_module[i],]\n  DEGs_module$label &lt;- \"\"\n  top5_gene &lt;- DEGs_module$gene[which(DEGs_module$avg_log2FC&gt;0.5 &\n                                      DEGs_module$p_val_adj&lt;1e-2)]\n  if(length(top5_gene)&gt;5){\n    top5_gene &lt;- top5_gene[1:5]\n  }\n  down5_gene &lt;- DEGs_module$gene[which(DEGs_module$avg_log2FC&lt; -0.5 &\n                                       DEGs_module$p_val_adj&lt;1e-2)]\n  if(length(down5_gene)&gt;5){\n    down5_gene &lt;- down5_gene[1:5]\n  }\n\n  DEGs_module$label[match(top5_gene, DEGs_module$gene)] &lt;- top5_gene\n  DEGs_module$label[match(down5_gene, DEGs_module$gene)] &lt;- down5_gene\n  DEGs_module$Type &lt;- 'not significant'\n  DEGs_module$Type[which(DEGs_module$avg_log2FC&gt;0.5 & \n                         DEGs_module$p_val_adj&lt;1e-2)] &lt;- \"Up\"\n  DEGs_module$Type[which(DEGs_module$avg_log2FC &lt; -0.5 & \n                         DEGs_module$p_val_adj&lt;1e-2)] &lt;- \"Down\"\n  \n  plist[[i]] &lt;- \n    ggplot(DEGs_module, aes(x=avg_log2FC, y= -log10(p_val_adj))) +\n    geom_point(aes(color=Type), size=0.5) +\n    geom_vline(aes(xintercept=0.5), colour=\"black\", linetype=\"dashed\", \n               linewidth = 0.5) +\n    geom_vline(aes(xintercept = -0.5), colour=\"black\", linetype=\"dashed\", \n               linewidth = 0.5) +\n    geom_text_repel(aes(label=label, color=Type), size=3, max.overlaps=100) +\n    theme_classic() +\n    theme(plot.title = element_text(size = 20, hjust = 0.5),\n          text = element_text(size = 15), legend.position = \"none\") +\n    scale_color_manual(values = c(\"Up\"='#c82423', \"Down\"='#2878b5',\n                                  'not significant'='lightgray')) +\n    xlim(min(DEGs_module$avg_log2FC), max(DEGs_module$avg_log2FC)) +\n    ylim(0,300) +\n    labs(title = proj_module[i], x = 'log2FC', y = '-log10(P value)')\n}\nFigureS5_I &lt;- plot_grid(plotlist = plist, ncol = 2)\nFigureS5_I\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS5/FigureS5_I.pdf\", plot = FigureS5_I, \n       height = 6, width = 6, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>FigureS5</span>"
    ]
  },
  {
    "objectID": "FigureS5.html#figures5_j",
    "href": "FigureS5.html#figures5_j",
    "title": "12  FigureS5",
    "section": "12.10 FigureS5_J",
    "text": "12.10 FigureS5_J\n\n\nCode\nseu &lt;- Adult.IT.PT.barcode\ndf &lt;- table(seu$SubType_Layer, seu$Proj_subtype)\ndf_norm &lt;- as.data.frame(apply(df, 2, function(x){x/sum(x)}))\ndf_norm$Layer &lt;- rownames(df_norm)\ndf_plot &lt;- \n  df_norm |&gt;\n   pivot_longer(!Layer, names_to = \"Proj_cluster\", values_to = \"value\")\ndf_plot$Proj_cluster &lt;- factor(\n  df_plot$Proj_cluster,\n  levels = names(sort(colSums(df_norm[1:2,1:(ncol(df_norm)-1)]), decreasing = T)))\ndf_plot$Layer &lt;- factor(\n  df_plot$Layer, \n  levels = c(\"L2/3 IT\",\"L4/5 IT\",\"L5 IT\",\"L6 IT\",\"L5 PT\"))\n\nFigureS5_J &lt;- \n  ggplot(data=df_plot, aes(x=Proj_cluster, y=value, fill=Layer)) + \n  geom_bar(stat=\"identity\", width=0.7) +\n  theme_classic() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  scale_fill_manual(values = col_SubType_Layer) +\n  labs(x='', y='')\nFigureS5_J\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS5/FigureS5_J.pdf\", plot = FigureS5_J, \n       height = 4, width = 7, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>FigureS5</span>"
    ]
  },
  {
    "objectID": "FigureS5.html#figures5_k",
    "href": "FigureS5.html#figures5_k",
    "title": "12  FigureS5",
    "section": "12.11 FigureS5_K",
    "text": "12.11 FigureS5_K\n\n\nCode\nseu &lt;- Adult.IT.PT.barcode\ndf &lt;- table(seu$SubType, seu$Proj_subtype)\ndf_norm &lt;- apply(df, 2, function(x){x/sum(x)})\ndf_plot &lt;- as.data.frame(df_norm)\ndf_plot$Cluster &lt;- rownames(df_plot)\ndf_plot &lt;- \n  df_plot |&gt;\n  pivot_longer(!Cluster, names_to = \"Proj_cluster\", values_to = \"Value\")\ndf_plot$Cluster &lt;- factor(\n  df_plot$Cluster,\n  levels = c('L2/3_IT_1', 'L4/5_IT_1', 'L5_IT_1', 'L6_IT_1', \n             'L2/3_IT_2', 'L4/5_IT_2', 'L5_IT_2', 'L6_IT_2',\n             \"L5_PT_1\",\"L5_PT_2\")\n)\ndf_plot$Proj_cluster &lt;- factor(\n  df_plot$Proj_cluster,\n  levels = names(sort(colSums(df_norm[c(1,3,5,9),]),decreasing = T))\n)\n\nFigureS5_K &lt;- \n  ggplot(data=df_plot, aes(x=Proj_cluster, y=Value, fill=Cluster)) + \n  geom_bar(stat=\"identity\", width=0.7) +\n  theme_classic() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_fill_manual(values = col_SubType) +\n  labs(x='', y='')\nFigureS5_K\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS5/FigureS5_K.pdf\", plot = FigureS5_K, \n       height = 4, width = 7, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>FigureS5</span>"
    ]
  },
  {
    "objectID": "FigureS5.html#figures5_l",
    "href": "FigureS5.html#figures5_l",
    "title": "12  FigureS5",
    "section": "12.12 FigureS5_L",
    "text": "12.12 FigureS5_L\n\n\nCode\nslice &lt;- 'IT_slice_05'\n## ITi_D ITi_V ITc PTi\nbarcode &lt;- 'PTi'\nlimits &lt;- c(0,2)\nseu &lt;- subset(sp.PFC, cells=colnames(sp.PFC)[which(sp.PFC$ABA_hemisphere==\"Left\")])\nseu$PTi[is.na(seu$PTi)] &lt;- 0\nseu$ITi_D[is.na(seu$ITi_D)] &lt;- 0\nseu$ITi_V[is.na(seu$ITi_V)] &lt;- 0\nseu$ITc[is.na(seu$ITc)] &lt;- 0\n\ndf &lt;- data.frame(\n  X = seu$X,\n  Y = seu$Y,\n  Zscore = scale(log1p(seu@meta.data[,barcode]))\n)\ndf &lt;- df[which(seu$slice==slice),]\ndf$Zscore[df$Zscore&lt;limits[1]] &lt;- limits[1]\ndf$Zscore[df$Zscore&gt;limits[2]] &lt;- limits[2]\ndf &lt;- df[order(df$Zscore),]\n\nFigureS5_L &lt;- \n  ggplot(df, aes(x=X,y=Y)) +\n  geom_point(aes(colour=Zscore), size=1) +\n  scale_color_gradientn(colours = viridis(n = 256, option = \"E\", direction = 1),\n                       limits = limits) +\n  ggdark::dark_theme_void() +\n  theme(plot.title = element_blank(), legend.position = \"none\") +\n  coord_fixed()\nFigureS5_L\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS5/FigureS5_L/PTi_slice05.png\", plot = FigureS5_L, \n       height = 4, width = 3, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>FigureS5</span>"
    ]
  },
  {
    "objectID": "FigureS5.html#figures5_m",
    "href": "FigureS5.html#figures5_m",
    "title": "12  FigureS5",
    "section": "12.13 FigureS5_M",
    "text": "12.13 FigureS5_M\n\n\nCode\nseu &lt;- sp.PFC\nslice &lt;- unique(seu$slice)\ndf &lt;- data.frame('slice'=slice)\nfor (i in 1:length(slice)){\n  df$`ITi-D`[i] &lt;- length(which(seu$slice==slice[i] &\n                                seu$ITi_D&gt;0))/\n    length(which(seu$slice==slice[i] & seu$BC_num&gt;0))\n  df$`ITi-V`[i] &lt;- length(which(seu$slice==slice[i] &\n                                seu$ITi_V&gt;0))/\n    length(which(seu$slice==slice[i] & seu$BC_num&gt;0))\n  df$`ITc`[i] &lt;- length(which(seu$slice==slice[i] &\n                              seu$ITc&gt;0))/\n    length(which(seu$slice==slice[i] & seu$BC_num&gt;0))\n  df$`PTi`[i] &lt;- length(which(seu$slice==slice[i] &\n                              seu$PTi&gt;0))/\n    length(which(seu$slice==slice[i] & seu$BC_num&gt;0))\n}\ndf$x &lt;- c(1:36)\ndf &lt;- pivot_longer(df, 2:5, names_to = \"target\", values_to = \"value\")\n# RSP.I=\"#6BD76BFF\" BLA=\"#D595A7FF\"\nFigureS5_M_1 &lt;- \n  ggplot(df, aes(x=x, y=value, color=target)) +\n  #geom_line(color=\"#D595A7FF\",size=1) +\n  geom_point(alpha=0.5, size=3) +\n  geom_smooth(se = F, linewidth=1.5) +\n  theme_bw() +\n  scale_x_continuous(breaks = seq(0,35,5)) +\n  scale_color_manual(values = col_Proj_module) +\n  theme(text = element_text(size=15), \n        plot.title = element_text(size = 20, hjust = 0.5)) +\n  labs(x='A → P',y='Cell proportion')\nFigureS5_M_1\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS5/FigureS5_M_1.pdf\", plot = FigureS5_M_1, \n       height = 2.5, width = 6, units = \"in\")\n\n\n\n\nCode\nbc_slice &lt;- seu@meta.data[,c(c(\"ITi_D\", \"ITi_V\", \"ITc\", \"PTi\"), 'Y','BC_num')]\nbc_slice &lt;- \n  bc_slice |&gt;\n  mutate(bin = cut(Y, breaks = 36))\nbin &lt;- sort(unique(bc_slice$bin))\nbc_slice$bin_index &lt;- match(bc_slice$bin, bin)\n\n\ndf &lt;- data.frame('bin_index'=c(1:36))\nfor (i in 1:36){\n  df$`ITi-D`[i] &lt;- length(which(bc_slice$bin_index==i & bc_slice$ITi_D&gt;0))/\n    length(which(bc_slice$bin_index==i & bc_slice$BC_num&gt;0))\n  df$`ITi-V`[i] &lt;- length(which(bc_slice$bin_index==i & bc_slice$ITi_V&gt;0))/\n    length(which(bc_slice$bin_index==i & bc_slice$BC_num&gt;0))\n  df$`ITc`[i] &lt;- length(which(bc_slice$bin_index==i & bc_slice$ITc&gt;0))/\n    length(which(bc_slice$bin_index==i & bc_slice$BC_num&gt;0))\n  df$`PTi`[i] &lt;- length(which(bc_slice$bin_index==i & bc_slice$PTi&gt;0))/\n    length(which(bc_slice$bin_index==i & bc_slice$BC_num&gt;0))\n}\ndf$x &lt;- c(1:36)\ndf &lt;- pivot_longer(df, 2:5, names_to = \"target\", values_to = \"value\")\n# RSP.I=\"#6BD76BFF\" BLA=\"#D595A7FF\"\nFigureS5_M_2 &lt;- \n  ggplot(df, aes(x=x, y=value, color=target)) +\n  #geom_line(color=\"#D595A7FF\",size=1) +\n  geom_point(alpha=0.5, size=3) +\n  geom_smooth(se = F, linewidth=1.5) +\n  theme_bw() +\n  scale_x_continuous(breaks = seq(0,35,5)) +\n  scale_color_manual(values = col_Proj_module) +\n  theme(text = element_text(size=15), \n        plot.title = element_text(size = 20, hjust = 0.5)) +\n  labs(x='D → V',y='Cell proportion') +\n  xlim(36, 0)\nFigureS5_M_2\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS5/FigureS5_M_2.pdf\", plot = FigureS5_M_2, \n       height = 2.5, width = 6, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>FigureS5</span>"
    ]
  },
  {
    "objectID": "FigureS6.html",
    "href": "FigureS6.html",
    "title": "13  FigureS6",
    "section": "",
    "text": "13.1 FigureS6_A\nCode\nAId_motifs &lt;- top50_motif[grep(\"AId-I\",top50_motif)]\nAId_motifs &lt;- AId_motifs[-match(\"AId-I\",AId_motifs)]\nAId_motifs_order &lt;- c(\"AId-I,CP-I\", \"AId-I,CP-I,AId-C\",\n                      \"AId-I,ACB-I,CP-I,ACB-C,CP-C,AId-C\",\n                      \"AId-I,ACB-I,CP-I\", \"AId-I,ECT-I\", \"AId-I,ACB-I,CP-I,BLA-I\",\n                      \"AId-I,ACB-I,CP-I,BLA-I,ECT-I\", \"AId-I,ACB-I,AId-C\",\n                      \"AId-I,ACB-I\",\"AId-I,ACB-I,ACB-C\",\"AId-I,ACB-I,BLA-I\",\n                      \"AId-I,ACB-I,ECT-I\")\n\ndf &lt;- sp_seu@meta.data[which(sp_seu$BC_motif %in% AId_motifs),c(\"DV_new\",\"BC_motif\")]\ndf_mean &lt;- \n  df |&gt;\n  group_by(BC_motif) |&gt;\n  dplyr::summarize(across(1, ~ mean(.x, na.rm = TRUE)))\ndf_mean &lt;- df_mean[order(df_mean$DV_new, decreasing = F),]\ndf_mean$rename &lt;- factor(rev(AId_motifs_order), levels = rev(AId_motifs_order))\n\ncell_DV1 &lt;- sp_seu$DV_new[which(sp_seu$BC_motif==df_mean$BC_motif[1])]\ndf &lt;- data.frame(as.numeric(cell_DV1), row.names = 1:length(cell_DV1))\ncolnames(df) &lt;- df_mean$rename[1]\nfor (i in 2:12){\n  cell_DVi &lt;- sp_seu$DV_new[which(sp_seu$BC_motif==df_mean$BC_motif[i])]\n  df_i &lt;- data.frame(as.numeric(cell_DVi), row.names = 1:length(cell_DVi))\n  colnames(df_i) &lt;- df_mean$rename[i]\n  df &lt;- merge(df, df_i, by=\"row.names\", all=T)\n  df &lt;- df[,-1]\n}\n\np1 &lt;- ComplexHeatmap::densityHeatmap(df, ylab=\"Ventral  →  Dorso\", title=\"\",ylim=c(-5,-1),\n                               show_quantiles =T, \n                               show_column_names = FALSE)\nCode\ndf &lt;- sc_seu@meta.data[which(sc_seu$BC_motif %in% AId_motifs),c(\"BC_motif\",\"SubType\")]\ndf &lt;- as.data.frame.array(table(df$BC_motif, df$SubType))\ndf_norm &lt;- df/rowSums(df)\ndf_norm$motifs &lt;- rownames(df_norm)\ndf_norm &lt;- pivot_longer(df_norm, !motifs, names_to = \"SubType\", values_to = \"Value\")\n\ndf_norm$motifs &lt;- factor(df_norm$motifs, levels = df_mean$BC_motif, labels = df_mean$rename)\nIT_SubType &lt;- c(\"L2/3_IT_1\", \"L4/5_IT_1\", \"L5_IT_1\", \"L6_IT_1\",\n                \"L2/3_IT_2\",\"L4/5_IT_2\", \"L5_IT_2\", \"L6_IT_2\")\ndf_norm$SubType &lt;- factor(df_norm$SubType, levels = IT_SubType)\n\np2 &lt;- \n  Bior_BarPlot(df_norm, \"motifs\", \"Value\", fill = \"SubType\", color = \"SubType\", \n             label = F, palette = col_SubType, lab.pos = \"in\") +\n  theme(legend.position = \"right\", legend.key.size=unit(0.5, \"cm\"),\n        axis.text.x = element_text(angle = 25, hjust = 1, size = 10),\n        plot.margin = margin(0,0,0,10)) +\n  labs(x=\"\", y=\"Fraction in Subtype\")\n#p2\nCode\nFigureS6_A &lt;- \n  cowplot::plot_grid(ggplotify::as.ggplot(p1),p2,nrow = 2, align = \"v\",\n                   rel_heights = c(0.9,1))\nFigureS6_A\nCode\nggsave(\"../pdf/FigureS6/FigureS6_A.pdf\", plot = FigureS6_A,\n       height = 15, width = 10, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>FigureS6</span>"
    ]
  },
  {
    "objectID": "FigureS6.html#figures6_b",
    "href": "FigureS6.html#figures6_b",
    "title": "13  FigureS6",
    "section": "13.2 FigureS6_B",
    "text": "13.2 FigureS6_B\n\n\nCode\nseu &lt;- subset(\n  Adult.Ex, \n  cells=colnames(Adult.Ex)[which(Adult.Ex$Ex_subtype==\"IT\" &\n                                 Adult.Ex$BC_num&gt;0)])\n\nseu$group &lt;- \"Other\"\nseu$group[which(seu$`BLA-I`&gt;0 & seu$`ACB-I`&gt;0 & seu$BC_num==2)] &lt;- \"BLA-I + ACB-I\"\nseu$group[which(seu$`BLA-I`&gt;0 & seu$`CP-I`&gt;0 & seu$BC_num==2)] &lt;- \"BLA-I + CP-I\"\nseu$group[which(seu$`BLA-I`&gt;0 & seu$`ACB-I`&gt;0 & seu$`AId-I`&gt;0 & seu$BC_num==3)] &lt;- \"BLA-I + ACB-I + AId-I\"\nseu$group[which(seu$`BLA-I`&gt;0 & seu$`ACB-I`&gt;0 & seu$`CP-I`&gt;0 & seu$BC_num==3)] &lt;- \"BLA-I + ACB-I + CP-I\"\nseu$group[which(seu$`BLA-I`&gt;0 & seu$`ACB-I`&gt;0 & seu$`CP-I`&gt;0 & seu$`AId-I`&gt;0 & seu$`ECT-I`&gt;0 & seu$BC_num==5)] &lt;- \"BLA-I + ACB-I + CP-I + AId-I + ECT-I\"\n#seu &lt;- subset(seu, cells=colnames(seu)[which(!seu$group==\"\")])\nseu$group &lt;- factor(seu$group, levels = c(\"BLA-I + ACB-I + AId-I\", \"BLA-I + ACB-I + CP-I + AId-I + ECT-I\", \"BLA-I + ACB-I\", \"BLA-I + ACB-I + CP-I\", \"BLA-I + CP-I\", \"Other\"))\n\n#Idents(seu) &lt;- \"group\"\n#DEGs &lt;- FindAllMarkers(seu, logfc.threshold = 0.1, min.pct = 0.1, only.pos = T)\n#DEGs$Group &lt;- \"not\"\n#DEGs$Group[which(DEGs$avg_log2FC&gt;0.5 & DEGs$p_val_adj &lt; 0.01)] &lt;- \"Up\"\n#DEGs &lt;- DEGs[which(DEGs$cluster != \"Other\"),]\n#saveRDS(DEGs, '../data/rds/DEGs_BLA_motifs.rds')\nDEGs &lt;- readRDS('../data/rds/DEGs_BLA_motifs.rds')\n\n\n\n\nCode\nFigureS6_B_1 &lt;- \n  jjVolcano(diffData = DEGs,\n          topGeneN = 3,\n          tile.col = rep(\"lightgray\",6),\n          aesCol = c(\"navy\",\"firebrick3\"),\n          angle=0,\n          size=3,\n          pSize=1.5,\n          log2FC.cutoff = 0.1,\n          fontface = 'italic',\n          legend.position = c(0.8,0.2),\n          flip = F,\n          min.segment.length = 0) +\n  theme(legend.position = \"none\")\nFigureS6_B_1\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS6/FigureS6_B_1.pdf\", plot = FigureS6_B_1,\n       height = 4, width = 12, units = \"in\")\n\n\n\n\nCode\nseu &lt;- sp_seu\ndf &lt;- seu@meta.data[,c(\"ML_new\",\"DV_new\",\"slice\",\"BC_motif\")]\n# \"BLA-I,ACB-I,AId-I\"  \"CP-I,BLA-I,ACB-I,AId-I\"  \"BLA-I,ACB-I\"  \"CP-I,BLA-I,ACB-I\"  \"CP-I,BLA-I\"\ndf_motif &lt;- df[which(df$BC_motif==\"BLA-I,ACB-I,AId-I\"),]\n\ncolormap &lt;- colorRampPalette(rev(brewer.pal(11,'Spectral')))(85)\n\nFigureS6_B_2 &lt;- \n  ggplot(df, aes(ML_new, DV_new)) +\n  geom_point(color=\"black\", size=1) +\n  stat_density2d(data=df_motif, geom = \"raster\", aes(fill = ..density..), \n                 contour = FALSE) +\n  scale_fill_gradientn(colours = c(rep(\"transparent\",15),colormap)) +\n  theme_void() +\n  #theme(legend.position = \"none\") +\n  ylim(-5,0) +\n  xlim(0,3) +\n  coord_fixed()\nFigureS6_B_2\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS6/FigureS6_B_2/BLA-I,ACB-I,AId-I.pdf\", plot = FigureS6_B_2,\n       height = 6, width = 6, units = \"in\", bg=\"transparent\")\n\n\n\n\nCode\nBLA_motif &lt;- c(\"BLA-I,ACB-I,AId-I\",\"CP-I,BLA-I,ACB-I,AId-I\",\"BLA-I,ACB-I\",\"CP-I,BLA-I,ACB-I\",\"CP-I,BLA-I\")\nseu &lt;- subset(sp_seu, cells = colnames(sp_seu)[which(sp_seu$BC_motif %in% BLA_motif)])\nseu$ABA_metaRegion &lt;- factor(\n  seu$ABA_metaRegion, \n  levels = c(\"MOs\",\"ACAd\",\"ACAv\",\"PL\",\"ORBm\",\"ILA\",\"DP\"))\nmat &lt;- table(seu$BC_motif, seu$ABA_metaRegion)\nmat &lt;- t(apply(mat, 1, function(x){(x-min(x))/(max(x)-min(x))}))\nmat &lt;- mat[BLA_motif,]\nmat &lt;- as_tibble(mat, rownames = \"group\")\n\nplist &lt;- list()\nfor (i in 1:length(BLA_motif)){\n  plist[[i]] &lt;- \n    ggradar(mat[i,], fill = T,\n        group.point.size = 2, group.line.width = 0.5,\n        background.circle.colour = \"white\", \n        group.colours = \"blue\") +\n    theme(plot.title = element_text(hjust=0.5))\n}\nFigureS6_B_3 &lt;- plot_grid(plotlist=plist, ncol=5)\nFigureS6_B_3\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS6/FigureS6_B_3.pdf\", plot = FigureS6_B_3,\n       height = 3, width = 25, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>FigureS6</span>"
    ]
  },
  {
    "objectID": "FigureS6.html#figures6_c",
    "href": "FigureS6.html#figures6_c",
    "title": "13  FigureS6",
    "section": "13.3 FigureS6_C",
    "text": "13.3 FigureS6_C\n\n\nCode\nBLA_motifs &lt;- top50_motif[grep(\"BLA-I\",top50_motif)]\nBLA_motifs &lt;- BLA_motifs[-match(\"BLA-I\",BLA_motifs)]\nBLA_motifs_order &lt;- c('BLA-I,CP-I','BLA-I,CP-I,ACB-I','BLA-I,CP-I,ACB-I,AId-I',\n                      'BLA-I,ACB-I','BLA-I,CP-I,ACB-I,AId-I,ECT-I','BLA-I,ACB-I,AId-I'\n                      )\n\ndf &lt;- sp_seu@meta.data[which(sp_seu$BC_motif %in% BLA_motifs),c(\"DV_new\",\"BC_motif\")]\ndf_mean &lt;- \n  df |&gt;\n  group_by(BC_motif) |&gt;\n  dplyr::summarize(across(1, ~ mean(.x, na.rm = TRUE)))\ndf_mean &lt;- df_mean[order(df_mean$DV_new, decreasing = F),]\ndf_mean$rename &lt;- factor(rev(BLA_motifs_order), levels = rev(BLA_motifs_order))\n\ncell_DV1 &lt;- sp_seu$DV_new[which(sp_seu$BC_motif==df_mean$BC_motif[1])]\ndf &lt;- data.frame(as.numeric(cell_DV1), row.names = 1:length(cell_DV1))\ncolnames(df) &lt;- df_mean$rename[1]\nfor (i in 2:6){\n  cell_DVi &lt;- sp_seu$DV_new[which(sp_seu$BC_motif==df_mean$BC_motif[i])]\n  df_i &lt;- data.frame(as.numeric(cell_DVi), row.names = 1:length(cell_DVi))\n  colnames(df_i) &lt;- df_mean$rename[i]\n  df &lt;- merge(df, df_i, by=\"row.names\", all=T)\n  df &lt;- df[,-1]\n}\n\np1 &lt;- ComplexHeatmap::densityHeatmap(df, ylab=\"Ventral  →  Dorso\", title=\"\",ylim=c(-5,-1),\n                               show_quantiles =T, \n                               show_column_names = FALSE)\n\n\n\n\nCode\ndf &lt;- sc_seu@meta.data[which(sc_seu$BC_motif %in% BLA_motifs),c(\"BC_motif\",\"SubType\")]\ndf &lt;- as.data.frame.array(table(df$BC_motif, df$SubType))\ndf_norm &lt;- df/rowSums(df)\ndf_norm$motifs &lt;- rownames(df_norm)\ndf_norm &lt;- pivot_longer(df_norm, !motifs, names_to = \"SubType\", values_to = \"Value\")\n\ndf_norm$motifs &lt;- factor(df_norm$motifs, levels = df_mean$BC_motif, labels = df_mean$rename)\nIT_SubType &lt;- c(\"L2/3_IT_1\", \"L4/5_IT_1\", \"L5_IT_1\", \"L6_IT_1\",\n                \"L2/3_IT_2\",\"L4/5_IT_2\", \"L5_IT_2\", \"L6_IT_2\")\ndf_norm$SubType &lt;- factor(df_norm$SubType, levels = IT_SubType)\n\np2 &lt;- \n  Bior_BarPlot(df_norm, \"motifs\", \"Value\", fill = \"SubType\", color = \"SubType\", \n             label = F, palette = col_SubType, lab.pos = \"in\") +\n  theme(legend.position = \"right\", legend.key.size=unit(0.5, \"cm\"),\n        axis.text.x = element_text(angle = 15, hjust = 1, size = 10),\n        plot.margin = margin(0,0,0,10)) +\n  labs(x=\"\", y=\"Fraction in Subtype\")\n#p2\n\n\n\n\nCode\nFigureS6_C &lt;- \n  cowplot::plot_grid(ggplotify::as.ggplot(p1),p2,nrow = 2, align = \"v\",\n                   rel_heights = c(0.7,1))\nFigureS6_C\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS6/FigureS6_C.pdf\", plot = FigureS6_C,\n       height = 15, width = 10, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>FigureS6</span>"
    ]
  },
  {
    "objectID": "FigureS6.html#figures6_d",
    "href": "FigureS6.html#figures6_d",
    "title": "13  FigureS6",
    "section": "13.4 FigureS6_D",
    "text": "13.4 FigureS6_D\n\n\nCode\nBarcode &lt;- c('VIS-I','SSp-I','CP-I','AUD-I','RSP-I',\n             'BLA-I','ACB-I','ENTl-I','AId-I','ECT-I',\n             'ACB-C','PL-C','ECT-C','ENTl-C',\n             'BLA-C','CP-C','AId-C','RSP-C',\n             'MD-I','RE-I','DR-I','VTA-I','LHA-I','SC-I')\n\ncortex &lt;- c('VIS-I','SSp-I','AUD-I','RSP-I',\n             'BLA-I','ENTl-I','AId-I','ECT-I',\n            'PL-C','ECT-C','ENTl-C','BLA-C','AId-C','RSP-C')\nstriatal &lt;- c('CP-I','ACB-I','ACB-C','CP-C')\n\nBC_mat &lt;- Adult.IT.barcode@meta.data[,c(cortex, striatal)]\ndf &lt;- data.frame(\n  'Type' = c('cortex + striatal -', 'cortex - striatal +', 'cortex + striatal +'),\n  'Cellnum' = c(\n    length(which(rowSums(Adult.IT.barcode@meta.data[,cortex],na.rm = T)&gt;0 &\n                 rowSums(Adult.IT.barcode@meta.data[,striatal],na.rm = T)==0)),\n    length(which(rowSums(Adult.IT.barcode@meta.data[,cortex],na.rm = T)==0 &\n                 rowSums(Adult.IT.barcode@meta.data[,striatal],na.rm = T)&gt;0)),\n    length(which(rowSums(Adult.IT.barcode@meta.data[,cortex],na.rm = T)&gt;0 &\n                 rowSums(Adult.IT.barcode@meta.data[,striatal],na.rm = T)&gt;0))\n  )\n)\ndf &lt;- df[c(1,3),]\ndf$Cellnum &lt;- df$Cellnum/sum(df$Cellnum)\ndf$label &lt;- paste0(round(df$Cellnum,3)*100,'%')\n\nFigureS6_D &lt;- \n  ggplot(df, aes(x='', y=Cellnum, fill=Type)) + \n  geom_bar(stat=\"identity\", width=1,color=\"white\",\n           position = position_stack(reverse =T)) +\n  coord_polar(\"y\", start=0) +\n  theme_void() + \n  theme(text = element_text(size = 15),\n        plot.title = element_text(size=20, hjust = 0.5),\n        legend.title = element_blank(),\n        legend.position = \"top\") +\n  geom_text(aes(x = 1.2, label = label), color = \"white\", size=5,\n            position = position_stack(reverse =T,vjust=0.5)) +\n  scale_fill_manual(values = c(\"cortex + striatal -\"=\"#1c73b4\",\n                               \"cortex + striatal +\"=\"#d75426\")) + \n  guides(fill = guide_legend(ncol = 2,byrow = TRUE,reverse = T))\nFigureS6_D\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS6/FigureS6_D.pdf\", plot = FigureS6_D,\n       height = 3.5, width = 3.5, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>FigureS6</span>"
    ]
  },
  {
    "objectID": "FigureS6.html#figures6_e",
    "href": "FigureS6.html#figures6_e",
    "title": "13  FigureS6",
    "section": "13.5 FigureS6_E",
    "text": "13.5 FigureS6_E\n\n\nCode\nslice &lt;- 'IT_slice_15'\n# 'Cbln2','Ptn',\"Nnat\",\"Efnb3\"\ngene &lt;- 'Ptn'\nlimits &lt;- c(0,3)\n\ndf &lt;- data.frame(\n  X = sp.PFC$X,\n  Y = sp.PFC$Y,\n  Zscore = scale(log1p(sp.PFC@assays$RNA@counts[gene,]))\n)\ndf &lt;- df[which(sp.PFC$slice==slice & sp.PFC$ABA_PFC=='PFC'),]\ndf$Zscore[df$Zscore&lt;limits[1]] &lt;- limits[1]\ndf$Zscore[df$Zscore&gt;limits[2]] &lt;- limits[2]\ndf &lt;- df[order(df$Zscore),]\nFigureS6_E &lt;- \n  ggplot(df,aes(x=X,y=Y)) +\n  geom_point(aes(colour=Zscore), size=1) +\n  scale_color_gradientn(colours = viridis(n = 256, option = \"D\", direction = 1),\n                       limits = limits) +\n  ggdark::dark_theme_void() +\n  labs(title = gene) +\n  theme(plot.title = element_text(size = 20, hjust = 0.5)) +\n  coord_fixed()\nFigureS6_E\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS6/FigureS6_E/Ptn.png\", plot = FigureS6_E,\n       height = 4, width = 4.22, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>FigureS6</span>"
    ]
  },
  {
    "objectID": "FigureS7.html",
    "href": "FigureS7.html",
    "title": "14  FigureS7",
    "section": "",
    "text": "14.1 FigureS7_A\nCode\nBarcode_order &lt;- c('VIS-I','SSp-I','CP-I','RSP-I',\n                   'BLA-I','ACB-I','ENTl-I','AId-I','ECT-I',\n                   'ACB-C','PL-C','ECT-C','ENTl-C',\n                   'BLA-C','CP-C','AId-C','RSP-C',\n                   'MD-I','RE-I','DR-I','VTA-I','LHA-I')\nBarcode_order &lt;- Barcode_order[-match(\n  c('MD-I','RSP-C','BLA-C','ECT-C','ENTl-C'),\n  Barcode_order)\n  ]\nEx_BC_mat &lt;- Adult.Ex.barcode@meta.data[, Barcode_order]\nEx_BC_mat &lt;- Ex_BC_mat[rowSums(Ex_BC_mat, na.rm=T)&gt;0,]\n\n# Projection Motif Observed\nProj_motifs &lt;- as.character(apply(Ex_BC_mat, 1, function(x){\n  paste(colnames(Ex_BC_mat)[which(x&gt;0)], collapse=',')\n  }))\nProj_motifs_counts &lt;- table(Proj_motifs)\nProj_motifs_counts &lt;- Proj_motifs_counts[order(Proj_motifs_counts, decreasing = T)]\nProj_motifs_counts &lt;- as.data.frame(Proj_motifs_counts)\ncolnames(Proj_motifs_counts) &lt;- c('Motif', 'Observed')\nProj_motifs_counts$Motif &lt;- as.character(Proj_motifs_counts$Motif)\n\n# create Null Modle\nBarcode_num &lt;- apply(Ex_BC_mat, 2, function(x){\n  length(which(x&gt;0))\n})\n\nfun &lt;- function(N_total){\n  nrow(Ex_BC_mat)/N_total + \n    cumprod(1 - Barcode_num/N_total)[length(Barcode_num)] - 1\n}\n# N_total\nroot &lt;- uniroot(fun, lower = nrow(Ex_BC_mat), upper = nrow(Ex_BC_mat)*10)\nN_total &lt;- round(root$root)\nP_Ai_list &lt;- Barcode_num/N_total\n# P_expected\nfor (i in 1:nrow(Proj_motifs_counts)){\n  Motif_i &lt;- strsplit(as.character(Proj_motifs_counts$Motif[i]),',')[[1]]\n  P_proj &lt;- P_Ai_list[Motif_i]\n  P_notproj &lt;- 1 - P_Ai_list[which(!names(P_Ai_list) %in% Motif_i)]\n  Proj_motifs_counts$P_expected[i] &lt;-\n    cumprod(c(P_proj,P_notproj))[ncol(Ex_BC_mat)]\n  # Expected\n  Proj_motifs_counts$Expected[i] &lt;- \n    round(Proj_motifs_counts$P_expected[i]*N_total)\n  # two.sided binom.test\n  Proj_motifs_counts$P_value[i] &lt;- \n    binom.test(x=Proj_motifs_counts$Observed[i], n=N_total,\n               p=Proj_motifs_counts$P_expected[i],\n               alternative=\"two.sided\")$p.value\n}\n# Bonferroni correction\nProj_motifs_counts$P_Bonferroni &lt;- p.adjust(Proj_motifs_counts$P_value,\n                                            method=\"bonferroni\")\n# Fold Change\nProj_motifs_counts$log2FC &lt;- log2(Proj_motifs_counts$Observed + 1) -\n  log2(Proj_motifs_counts$Expected + 1)\n\n# Significance\nProj_motifs_counts$Significance &lt;- 'not significant'\nProj_motifs_counts$Significance[which(Proj_motifs_counts$P_Bonferroni&lt;0.01 &\n                                      Proj_motifs_counts$log2FC&gt;1)] &lt;- 'Up'\nProj_motifs_counts$Significance[which(Proj_motifs_counts$P_Bonferroni&lt;0.01 &\n                                      Proj_motifs_counts$log2FC &lt; -1)] &lt;- 'Down'\n\n#Proj_motifs_counts &lt;- Proj_motifs_counts[which(Proj_motifs_counts$Observed &gt;= 10),]\n# Target_num\nfor (i in 1:nrow(Proj_motifs_counts)){\n  Proj_motifs_counts$Target_num[i] &lt;-\n    length(strsplit(Proj_motifs_counts$Motif[i],',')[[1]])\n}\nProj_motifs_counts &lt;- Proj_motifs_counts[order(Proj_motifs_counts$Observed,decreasing = T),]\nCode\nDEGs &lt;- Proj_motifs_counts[which(Proj_motifs_counts$Target_num&gt;1),]\nDEGs$label &lt;- \"\"\nDEGs &lt;- DEGs[order(DEGs$P_Bonferroni, decreasing = F),]\ntop5_gene &lt;- DEGs$Motif[which(DEGs$log2FC&gt;1 & DEGs$P_Bonferroni&lt;1e-2)]\nif(length(top5_gene)&gt;5){\n  top5_gene &lt;- top5_gene[1:5]\n  }\ndown5_gene &lt;- DEGs$Motif[which(DEGs$log2FC &lt; -1 &\n                                   DEGs$P_Bonferroni &lt; 1e-2)]\nif(length(down5_gene)&gt;5){\n  down5_gene &lt;- down5_gene[1:5]\n  }\n\n#top5_gene &lt;- c(top5_gene,\"Cnr1\")\n#down5_gene &lt;- c(down5_gene,\"Bdnf\")\n\nDEGs$label[match(top5_gene, DEGs$Motif)] &lt;- top5_gene\nDEGs$label[match(down5_gene, DEGs$Motif)] &lt;- down5_gene\n\nFigureS7_A &lt;- \n  ggplot(DEGs, aes(x=log2FC, y= -log10(P_Bonferroni))) +\n  geom_point(aes(color=Significance), size=0.5) +\n  geom_vline(aes(xintercept=1), colour=\"black\", linetype=\"dashed\", \n               linewidth = 0.5) +\n    geom_vline(aes(xintercept = -1), colour=\"black\", linetype=\"dashed\", \n               linewidth = 0.5) +\n    geom_text_repel(aes(label=label, color=Significance), size=3, max.overlaps=Inf) +\n    theme_classic() +\n    theme(plot.title = element_text(size = 20, hjust = 0.5),\n          text = element_text(size = 15), legend.position = \"none\") +\n    scale_color_manual(values = c(\"Up\"='#c82423', \"Down\"='#2878b5',\n                                  'not significant'='lightgray')) +\n    xlim(-5, 6.2) +\n    ylim(0,210) +\n    labs(title = \"\", x = 'log2FC', y = '-log10(P value)')\nFigureS7_A\nCode\nggsave(\"../pdf/FigureS7/FigureS7_A.pdf\", plot = FigureS7_A, \n       height = 3, width = 4, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>FigureS7</span>"
    ]
  },
  {
    "objectID": "FigureS7.html#figures7_b",
    "href": "FigureS7.html#figures7_b",
    "title": "14  FigureS7",
    "section": "14.2 FigureS7_B",
    "text": "14.2 FigureS7_B\n\n\nCode\nseu &lt;- Adult.IT.PT.barcode\nBarcode_use &lt;- c('VIS-I','SSp-I','RSP-I','AUD-I','CP-I',\n                 'AId-I','BLA-I','ACB-I','ENTl-I','ECT-I')\nACB_BLA &lt;- seu@meta.data[\n  which(seu$`ACB-I`&gt;0 & seu$`BLA-I`&gt;0 & seu$BC_num==2), \n  Barcode_use]\nACB_BLA[is.na(ACB_BLA)] &lt;- 0\nACB_BLA$cellid &lt;- rownames(ACB_BLA)\ndf_ACB_BLA &lt;- pivot_longer(ACB_BLA, !cellid, names_to = \"Target\", values_to = \"Value\")\n\nFigureS7_B_1 &lt;- \n  ggline(df_ACB_BLA, \"Target\", \"Value\", color = \"cellid\", shape=21,\n       palette=colorRampPalette(pal_ucscgb(\"default\")(20))(nrow(ACB_BLA))) + \n  geom_text(label=\"Observed: 112 \\n Expected: 54\", x=2, y=0.9, size=5) +\n  theme(legend.position = \"none\") +\n  labs(x=\"\", y=\"Projection strength\")\nFigureS7_B_1\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS7/FigureS7_B_1.pdf\", plot = FigureS7_B_1, \n       height = 3, width = 6, units = \"in\")\n\n\n\n\nCode\nseu &lt;- Adult.IT.PT.barcode\nBarcode_use &lt;- c('VIS-I','SSp-I','RSP-I','AUD-I','CP-I',\n                 'AId-I','BLA-I','ACB-I','ENTl-I','ECT-I')\nCP_AId &lt;- seu@meta.data[\n  which(seu$`CP-I`&gt;0 & seu$`AId-I`&gt;0 & seu$BC_num==2), \n  Barcode_use]\nCP_AId[is.na(CP_AId)] &lt;- 0\nCP_AId$cellid &lt;- rownames(CP_AId)\ndf_CP_AId &lt;- pivot_longer(CP_AId, !cellid, names_to = \"Target\", values_to = \"Value\")\n\nFigureS7_B_2 &lt;- \n  ggline(df_CP_AId, \"Target\", \"Value\", color = \"cellid\", shape=21,\n       palette=colorRampPalette(pal_ucscgb(\"default\")(20))(nrow(CP_AId))) + \n  geom_text(label=\"Observed: 23 \\n Expected: 79\", x=2, y=0.9, size=5) +\n  theme(legend.position = \"none\") +\n  labs(x=\"\", y=\"Projection strength\")\nFigureS7_B_2\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS7/FigureS7_B_2.pdf\", plot = FigureS7_B_2, \n       height = 3, width = 6, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>FigureS7</span>"
    ]
  },
  {
    "objectID": "FigureS7.html#figures7_c",
    "href": "FigureS7.html#figures7_c",
    "title": "14  FigureS7",
    "section": "14.3 FigureS7_C",
    "text": "14.3 FigureS7_C\n\n\nCode\nknitr::include_graphics(\"images/FigureS7_C.png\", dpi = 300)",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>FigureS7</span>"
    ]
  },
  {
    "objectID": "FigureS7.html#figures7_d",
    "href": "FigureS7.html#figures7_d",
    "title": "14  FigureS7",
    "section": "14.4 FigureS7_D",
    "text": "14.4 FigureS7_D\n\n\nCode\nknitr::include_graphics(\"images/FigureS7_D.png\", dpi = 300)",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>FigureS7</span>"
    ]
  },
  {
    "objectID": "FigureS8.html",
    "href": "FigureS8.html",
    "title": "15  FigureS8",
    "section": "",
    "text": "15.1 FigureS8_A\nCode\ndf &lt;- data.frame(\n  \"gene\" = all_gene,\n  \"max_exp\" = as.numeric(all_gene_exp$max[match(all_gene, rownames(all_gene_exp))]),\n  \"max_pct\" = as.numeric(all_gene_pct$max[match(all_gene, rownames(all_gene_exp))])\n)\ndf$gene_type &lt;- \"\"\ndf$gene_type[which(df$gene %in% Monoamine_R)] &lt;- \"Monoamine_R\"\ndf$gene_type[which(df$gene %in% Neuropeptides_R)] &lt;- \"Neuropeptides_R\"\ndf$gene_type[which(df$gene %in% mGluR)] &lt;- \"mGluR\"\ndf$gene_type[which(df$gene %in% GABA_R)] &lt;- \"GABA_R\"\ndf$gene_type[which(df$gene %in% AMPA_NMDA_R)] &lt;- \"AMPA_NMDA_R\"\ndf$gene_type[which(df$gene %in% Neurotransmitter)] &lt;- \"Neurotransmitter\"\ndf$gene_type[which(df$gene %in% Neuropeptides)] &lt;- \"Neuropeptides\"\n\ndf$gene &lt;- factor(df$gene, levels = df$gene[order(df$max_exp)])\nP1 &lt;- \n  ggplot(df, aes(x=max_exp, y=gene, color=gene_type)) +\n  geom_point() +\n  scale_color_manual(values = c(\"Monoamine_R\"=\"#9DD0C7\",\"Neuropeptides_R\"=\"#9180AC\",\n                               \"mGluR\"=\"#D9BDD8\",\"GABA_R\"=\"#E58579\",\n                               \"AMPA_NMDA_R\"=\"#8AB1D2\",\n                               \"Neurotransmitter\"=\"#d8b847\", \"Neuropeptides\"=\"#1e395f\")) +\n  scale_x_continuous(breaks = c(0.1,1,2,3), limits = c(0.1,3.5)) +\n  theme_classic() +\n  theme(axis.text.y = element_text(size = 8))\n\ndf$gene &lt;- factor(df$gene, levels = df$gene[order(df$max_pct)])\nP2 &lt;- \n  ggplot(df, aes(x=max_pct, y=gene, color=gene_type)) +\n  geom_point() +\n  scale_color_manual(values = c(\"Monoamine_R\"=\"#9DD0C7\",\"Neuropeptides_R\"=\"#9180AC\",\n                               \"mGluR\"=\"#D9BDD8\",\"GABA_R\"=\"#E58579\",\n                               \"AMPA_NMDA_R\"=\"#8AB1D2\",\n                               \"Neurotransmitter\"=\"#d8b847\", \"Neuropeptides\"=\"#1e395f\")) +\n  scale_x_continuous(breaks = c(0.1,0.5,1), limits = c(0.1,1)) +\n  theme_classic() +\n  theme(axis.text.y = element_text(size = 8))\n\nlegend &lt;- get_legend(P1)\n\nFigureS8_A &lt;- \n  plot_grid(P1 + theme(legend.position=\"none\"),\n          P2 + theme(legend.position=\"none\"),\n          legend, nrow = 1)\nFigureS8_A\nCode\nggsave(\"../pdf/FigureS8/FigureS8_A.pdf\", plot = FigureS8_A,\n       height = 10, width = 6, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>FigureS8</span>"
    ]
  },
  {
    "objectID": "FigureS8.html#figures8_b",
    "href": "FigureS8.html#figures8_b",
    "title": "15  FigureS8",
    "section": "15.2 FigureS8_B",
    "text": "15.2 FigureS8_B\n\n\nCode\nseu &lt;- Adult.IT.PT.barcode\ngene &lt;- all_gene\navg_exp &lt;- AverageExpression(seu, features = gene, group.by = 'Proj_subtype',\n                             assays = \"RNA\", slot = \"data\")\navg_exp &lt;- avg_exp$RNA\navg_exp_zscore &lt;- as.matrix(scale(t(avg_exp)))\n\n# gene_order\nPTi_gene &lt;- c(\"Chrnb2\",\"Oprl1\",\"Grm8\",\"Ramp3\",\"Cckbr\",\"Adcyap1\",\"Sst\",\"Ramp1\",\"Grp\",\n              \"Grik2\",\"Gria2\",\"Htr4\",\"Mc4r\",\"Mchr1\",\"Ednra\",\"Pdyn\",\"Adra2a\",\"Grm5\",\n              \"Gria1\",\"Slc17a6\",\"Gabra1\",\"Gabrb2\",\"Gabbr1\",\"Grin1\",\"Grm4\",\"Gabra5\",\n              \"Npr3\",\"Gria3\",\"Htr1f\",\"Npsr1\",\"Adra1a\",\"Chrna4\",\"Ramp2\",\"Grin2a\",\n              \"Gabrb3\",\"Grin2b\" )\nITi_D_gene &lt;- c(\"Adipor2\",\"Gabrb1\",\"Adipor1\",\"Nppc\",\"Grm2\",\"Grm3\",\"Pomc\",\"Oprd1\",\n                \"Sstr3\",\"Cck\",\"Gria4\",\"Npy1r\",\"Chrm3\",\"Htr2a\",\"Gabra4\",\"Chrm1\",\n                \"Gabbr2\",\"Htr1a\",\"Gabrg2\",\"Adra1b\",\"Crhr1\",\"Htr7\",\"Adrb1\",\"Gabra3\",\n                \"Sstr2\",\"Slc17a7\",\"Gabrg3\",\"Grik3\",\"Sstr1\",\"Drd1\",\"Penk\",\"Chrm2\",\n                \"Oprk1\",\"Grik5\",\"Ntsr2\",\"Htr1b\",\"Rxfp1\",\"Htr5a\",\"Nts\",\"Gabrd\",\"Vipr1\",\n                \"Npy5r\")\nITi_V_gene &lt;- c(\"Drd2\",\"Gad1\",\"Gad2\",\"Npy\",\"Ntsr1\",\"Grm1\",\"Oxtr\",\"Prokr2\",\"Npy2r\", \n                \"Ednrb\",\"Dbi\",\"Htr2c\",\"Cnr1\",\"Trhr\",\"Grin3a\",\"Npr2\",\"Adra2c\",\"Grin2d\",\n                \"Grik4\",\"Gabra2\",\"Gabrg1\",\"Grm7\",\"Glp2r\",\"Vip\",\"Tac2\" )\ngene_order &lt;- c(PTi_gene,ITi_D_gene,ITi_V_gene)\n\n# annotation_col\nITi_D &lt;- c(1,14,17,22,23,25,26,27,28,29,31)\nITi_V &lt;- c(7,8,9,10,15,16,18,19,20,21)\nITc &lt;- c(2,3,11,12,13,24,30,32,33)\nPTi &lt;- c(4,5,6)\nProj_subtype_order &lt;- c(PTi,ITi_D,ITi_V)\nannotation_col = data.frame(\n  Gene_module = rep(c(\"module1\",\"module2\",\"module3\"),\n                    c(length(PTi_gene),length(ITi_D_gene),length(ITi_V_gene))),\n  Gene_type = factor(\n    rep(c(\"Monoamine_R\",\"Neuropeptides_R\",\"mGluR\",\"GABA_R\",\"AMPA_NMDA_R\",\n          \"Neurotransmitter\",\"Neuropeptides\"),\n        c(length(Monoamine_R),length(Neuropeptides_R),length(mGluR),\n          length(GABA_R),length(AMPA_NMDA_R),\n          length(Neurotransmitter),length(Neuropeptides))), \n    levels = c(\"Monoamine_R\",\"Neuropeptides_R\",\"mGluR\",\"GABA_R\",\"AMPA_NMDA_R\",\n               \"Neurotransmitter\",\"Neuropeptides\")),\n  row.names = c(Monoamine_R, Neuropeptides_R, mGluR, GABA_R, AMPA_NMDA_R,\n                Neurotransmitter, Neuropeptides)\n)\nannotation_col$Gene_module &lt;- \"\"\nannotation_col$Gene_module[which(rownames(annotation_col) %in% PTi_gene)] &lt;- \"module1\"\nannotation_col$Gene_module[which(rownames(annotation_col) %in% ITi_D_gene)] &lt;- \"module2\"\nannotation_col$Gene_module[which(rownames(annotation_col) %in% ITi_V_gene)] &lt;- \"module3\"\n\n# annotation_row\nannotation_row = data.frame(\n  Projection_module = factor(rep(c(\"PTi\", \"ITi-D\", \"ITi-V\"), c(3, 11, 10)),\n                  levels = c(\"PTi\", \"ITi-D\", \"ITi-V\")),\n  row.names = Proj_subtype_order\n)\n\n# ann_color\nann_colors = list(\n  Projection_module = c('PTi'='#d62728','ITi-D'='#1f77b4','ITi-V'='#ff7f0e'),\n  Gene_type = c(\"Monoamine_R\"=\"#9DD0C7\",\"Neuropeptides_R\"=\"#9180AC\",\n                  \"mGluR\"=\"#D9BDD8\",\"GABA_R\"=\"#E58579\",\"AMPA_NMDA_R\"=\"#8AB1D2\",\n                 \"Neurotransmitter\"=\"#d8b847\", \"Neuropeptides\"=\"#1e395f\"),\n  Gene_module = c('module1'=\"#ff6666\",'module2'=\"#6666ff\",'module3'='#FDAE6BFF')\n)\n\n\n#dist = dist(t(avg_exp_zscore[Proj_subtype_order,gene_order]))\n#hclust &lt;- hclust(dist)\n#dend = reorder(as.dendrogram(hclust), wts=1:length(gene_order))\n#col_cluster &lt;- as.hclust(dend)\n#col_cluster$order &lt;- 1:length(gene_order)\n\nbreaks &lt;- seq(-2,2,0.01)\nFigureS8_B &lt;- pheatmap::pheatmap(avg_exp_zscore[Proj_subtype_order,gene_order],\n         cluster_rows = F, cluster_cols = F,\n         breaks = breaks,\n         color = colorRampPalette(c(\"navy\", \"white\",\"firebrick3\"))(length(breaks)),\n         annotation_row = annotation_row, annotation_col = annotation_col,\n         annotation_colors = ann_colors,\n         gaps_col = c(36,78),\n         gaps_row = c(3,14,24),\n         fontsize_col = 7,\n         annotation_names_row=F,annotation_names_col=F,\n         show_colnames = F\n         )\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS8/FigureS8_B.pdf\", plot = FigureS8_B,\n       height = 5, width = 10, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>FigureS8</span>"
    ]
  },
  {
    "objectID": "FigureS8.html#figures8_c",
    "href": "FigureS8.html#figures8_c",
    "title": "15  FigureS8",
    "section": "15.3 FigureS8_C",
    "text": "15.3 FigureS8_C\n\n\nCode\nBarcode &lt;- c('VIS-I','SSp-I','CP-I','AUD-I','RSP-I',\n             'BLA-I','ACB-I','ENTl-I','AId-I','ECT-I',\n             'ACB-C','PL-C','ECT-C','ENTl-C',\n             'BLA-C','CP-C','AId-C','RSP-C',\n             'MD-I','RE-I','DR-I','VTA-I','LHA-I','SC-I')\nEx_BC_mat &lt;- Adult.Ex.barcode@meta.data[,Barcode]\nEx_BC_mat[is.na(Ex_BC_mat)] &lt;- 0\nEx_BC_mat &lt;- scale(Ex_BC_mat)\nEx_BC_mat &lt;- Ex_BC_mat[Adult.Ex.barcode$BC_num &gt; 1,]\n#set.seed(20230321)\nset.seed(20240422)\numap_out &lt;- umap(Ex_BC_mat)\numap_result &lt;- as.data.frame(umap_out$layout)\ncolnames(umap_result) = c(\"UMAP_1\",\"UMAP_2\")\n\nseu &lt;- subset(Adult.Ex.barcode, cells = rownames(umap_result))\nseu@reductions$umap@cell.embeddings[,\"UMAP_1\"] &lt;- umap_result$UMAP_1\nseu@reductions$umap@cell.embeddings[,\"UMAP_2\"] &lt;- umap_result$UMAP_2\n\ngene &lt;- c(\"Npr3\",\"Htr2a\",\"Grin3a\")\nplist &lt;- list()\nfor (i in 1:3){\n  plist[[i]] &lt;- Plot_Density_Custom(seurat_object = seu, features = gene[i],\n                    viridis_palette = \"magma\") +\n    theme_void() +\n    theme(plot.title = element_text(hjust = 0.5, size = 25)) +\n    coord_fixed()\n}\nFigureS8_C &lt;- plot_grid(plotlist = plist, nrow = 1)\nFigureS8_C\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS8/FigureS8_C.pdf\", plot = FigureS8_C,\n       height = 3, width = 9, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>FigureS8</span>"
    ]
  },
  {
    "objectID": "FigureS8.html#figures8_d",
    "href": "FigureS8.html#figures8_d",
    "title": "15  FigureS8",
    "section": "15.4 FigureS8_D",
    "text": "15.4 FigureS8_D\n\n\nCode\nGABA &lt;- c(\"Gabra1\",\"Gabra2\",\"Gabra3\",\"Gabra4\",\"Gabra5\",\"Gabrb1\",\"Gabrb2\",\n          \"Gabrb3\",\"Gabrd\",\"Gabrg1\",\"Gabrg2\",\"Gabrg3\",\"Gabbr1\",\"Gabbr2\")\nAMPA_NMDA &lt;- c(\"Grin1\",\"Grin2a\",\"Grin2b\",\"Grin3a\",\"Gria1\",\"Gria2\",\n               \"Gria3\",\"Gria4\")\nGrik_Grm &lt;- c(\"Grik2\",\"Grik3\",\"Grik4\",\"Grik5\",\"Grm1\",\"Grm5\",\"Grm2\",\"Grm3\",\n         \"Grm4\",\"Grm7\",\"Grm8\")\nAmines &lt;- c(\"Drd1\",\"Htr1a\",\"Htr1b\",\"Htr5a\",\"Htr2a\",\"Htr2c\",\n            \"Htr7\",\"Adra1a\",\"Adra1b\",\"Adra1d\",\"Adra2a\",\"Adra2c\",\"Adrb1\",\"Adrb3\",\n            \"Chrna4\",\"Chrnb2\",\"Chrm1\",\"Chrm3\",\"Chrm2\",\"Hrh1\",\"Hrh2\",\"Hrh3\")\nNP &lt;- c(\"Oprd1\",\"Oprl1\",\"Oprk1\",\"Oxtr\",\"Cckbr\",\"Sstr1\",\"Sstr2\",\"Sstr3\",\"Vipr1\",\n        \"Crhr1\",\"Ntsr1\",\"Ntsr2\",\"Npy1r\",\"Npy2r\",\"Npy5r\",\"Ramp1\",\"Ramp2\",\"Ramp3\",\n        \"Npr2\",\"Npr3\",\"Ednra\",\"Rxfp1\",\"Trhr\",\"Mchr1\",\"Mc4r\",\n        \"Adipor1\",\"Adipor2\",\"Cnr1\",\"Penk\",\"Pdyn\",\"Cck\",\"Sst\",\"Npy\",\n        \"Nppc\",\"Grp\",\"Adcyap1\",\"Dbi\")\n\n# filter\nseu &lt;- Adult.IT.PT.barcode\nall_gene &lt;- c(GABA, AMPA_NMDA, Grik_Grm, Amines, NP)\nall_gene &lt;- all_gene[which(all_gene %in% rownames(seu))]\n# gene expression filter\nall_gene_exp &lt;- AverageExpression(\n  seu, features=all_gene, assays=\"RNA\", slot=\"data\", group.by=\"Proj_subtype\"\n  )$RNA\nall_gene_exp &lt;- as.data.frame(log1p(all_gene_exp))\nall_gene_exp$max &lt;- apply(all_gene_exp, 1, max)\n# gene cell percentage filter\nall_gene_pct &lt;- as.data.frame(t(as.matrix(seu@assays$RNA@data[all_gene,])))\nall_gene_pct$Proj_subtype &lt;- as.character(seu$Proj_subtype)\nall_gene_pct &lt;- \n  all_gene_pct |&gt;\n  dplyr::group_by(Proj_subtype) |&gt;\n  dplyr::summarize(across(1:length(all_gene), function(x){\n    length(which(x&gt;0))/length(x)\n    })) |&gt;\n  as.data.frame()\nrownames(all_gene_pct) &lt;- all_gene_pct$Proj_subtype\nall_gene_pct &lt;- as.data.frame(t(all_gene_pct[,-1]))\nall_gene_pct$max &lt;- apply(all_gene_pct, 1, max)\nall_gene &lt;- all_gene[which(all_gene_exp$max&gt;0.1 & all_gene_pct$max&gt;0.25)]\n\n\n\n\nCode\nProj_subtype &lt;- names(col_Proj_subtype)\nseu &lt;- Adult.IT.PT.barcode\nseu$Proj_subtype &lt;- factor(seu$Proj_subtype, levels = Proj_subtype)\n\nFigureS8_D_1 &lt;- \n  DotPlot(seu, features = Amines, group.by = \"Proj_subtype\", \n        dot.scale = 3) +\n  #coord_flip() +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size=5),\n        axis.text.y = element_text(size=10),\n        panel.grid = element_blank()) +\n  scale_color_gradientn(colours = c(\"white\",\"#9dd0c7\")) +\n  labs(x=\"\",y=\"\") +\n  NoLegend()\nFigureS8_D_1\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS8/FigureS8_D_1.pdf\", plot = FigureS8_D_1,\n       height = 5, width = 3, units = \"in\")\n\n\n\n\nCode\nProj_subtype &lt;- names(col_Proj_subtype)\nseu &lt;- Adult.IT.PT.barcode\nseu$Proj_subtype &lt;- factor(seu$Proj_subtype, levels = Proj_subtype)\n\nFigureS8_D_2 &lt;- \n  DotPlot(seu, features = NP, group.by = \"Proj_subtype\", \n        dot.scale = 3) +\n  #coord_flip() +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size=5),\n        axis.text.y = element_blank(),\n        panel.grid = element_blank()) +\n  scale_color_gradientn(colours = c(\"white\",\"#9180ac\")) +\n  labs(x=\"\",y=\"\") +\n  NoLegend()\nFigureS8_D_2\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS8/FigureS8_D_2.pdf\", plot = FigureS8_D_2,\n       height = 5, width = 4.5, units = \"in\")\n\n\n\n\nCode\nProj_subtype &lt;- names(col_Proj_subtype)\nseu &lt;- Adult.IT.PT.barcode\nseu$Proj_subtype &lt;- factor(seu$Proj_subtype, levels = Proj_subtype)\n\nFigureS8_D_3 &lt;- \n  DotPlot(seu, features = Grik_Grm, group.by = \"Proj_subtype\", \n        dot.scale = 3) +\n  #coord_flip() +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size=5),\n        axis.text.y = element_blank(),\n        panel.grid = element_blank()) +\n  scale_color_gradientn(colours = c(\"white\",\"#d9bdd8\")) +\n  labs(x=\"\",y=\"\") +\n  NoLegend()\nFigureS8_D_3\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS8/FigureS8_D_3.pdf\", plot = FigureS8_D_3,\n       height = 5, width = 2, units = \"in\")\n\n\n\n\nCode\nProj_subtype &lt;- names(col_Proj_subtype)\nseu &lt;- Adult.IT.PT.barcode\nseu$Proj_subtype &lt;- factor(seu$Proj_subtype, levels = Proj_subtype)\n\nFigureS8_D_4 &lt;- \n  DotPlot(seu, features = GABA, group.by = \"Proj_subtype\", \n        dot.scale = 3) +\n  #coord_flip() +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size=5),\n        axis.text.y = element_blank(),\n        panel.grid = element_blank()) +\n  scale_color_gradientn(colours = c(\"white\",\"#e58579\")) +\n  labs(x=\"\",y=\"\") +\n  NoLegend()\nFigureS8_D_4\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS8/FigureS8_D_4.pdf\", plot = FigureS8_D_4,\n       height = 5, width = 2.5, units = \"in\")\n\n\n\n\nCode\nProj_subtype &lt;- names(col_Proj_subtype)\nseu &lt;- Adult.IT.PT.barcode\nseu$Proj_subtype &lt;- factor(seu$Proj_subtype, levels = Proj_subtype)\n\nFigureS8_D_5 &lt;- \n  DotPlot(seu, features = AMPA_NMDA, group.by = \"Proj_subtype\", \n        dot.scale = 3) +\n  #coord_flip() +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size=5),\n        axis.text.y = element_blank(),\n        panel.grid = element_blank()) +\n  scale_color_gradientn(colours = c(\"white\",\"#8ab1d2\")) +\n  labs(x=\"\",y=\"\") +\n  NoLegend()\nFigureS8_D_5\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS8/FigureS8_D_5.pdf\", plot = FigureS8_D_5,\n       height = 5, width = 1.5, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>FigureS8</span>"
    ]
  },
  {
    "objectID": "FigureS8.html#figures8_e",
    "href": "FigureS8.html#figures8_e",
    "title": "15  FigureS8",
    "section": "15.5 FigureS8_E",
    "text": "15.5 FigureS8_E\n\n\nCode\nseu &lt;- Adult.IT.PT.barcode\ndf &lt;- seu@meta.data[,c(\"BC_num\",\"SubType\")]\ndf &lt;- df[which(df$BC_num&gt;5),]\ndf &lt;- as.data.frame(table(df$SubType))\ncolnames(df) &lt;- c(\"SubType\", \"Cell_num\")\ndf &lt;- df[df$SubType %in% c(\"L2/3_IT_1\",\"L2/3_IT_2\",\"L4/5_IT_1\",\"L4/5_IT_2\",\"L5_IT_1\",   \"L5_IT_2\",\"L6_IT_1\", \"L6_IT_2\"),]\n\nFigureS8_E &lt;- \n  ggplot(df, aes(x=SubType, y=Cell_num, fill=SubType)) +\n  geom_col() +\n  scale_fill_manual(values = col_SubType) +\n  theme_classic() +\n  theme(axis.text.x = element_text(angle = 25, hjust = 1, size = 12),\n        legend.position = \"none\") +\n  labs(x=\"\", y=\"Cell number (target &gt; 5)\")\nFigureS8_E\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS8/FigureS8_E.pdf\", plot = FigureS8_E,\n       height = 5, width = 6, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>FigureS8</span>"
    ]
  },
  {
    "objectID": "FigureS9.html",
    "href": "FigureS9.html",
    "title": "16  FigureS9",
    "section": "",
    "text": "16.1 FigureS9_A\nCode\n# gene_order\nPTi_gene &lt;- c(\n  \"Sema3e\",\"Sema3c\",\"Spon1\",\"Sdk2\",\"Cntfr\",\"Cntn1\",\"Ntng1\",\"Cdh6\",\"Emb\",\"Cdh20\",\n  \"Ctnna2\",\"Flrt1\",\"Fam19a1\",\"Rgma\",\"Igfbp4\",\"Ephb1\",\"Disp2\",\"Celsr2\",\"Sema6d\",\n  \"Tpbg\",\"Dscaml1\",\"Kirrel3\",\"Wnt5a\",\"Fgfr1\",\"Cntnap5b\",\"Cntnap2\",\"Cdh22\",\"Nrp1\",\n  \"Nrxn3\",\"Ntrk3\",\"Nrcam\",\"Opcml\",\"Clstn3\",\"Cntn2\",\"Cntnap1\",\"Ephb3\",\"Lrrn1\",\"Epha7\"\n  )\nITi_D_gene &lt;- c(\n  \"Robo2\",\"Clstn1\",\"Lrrc8b\",\"Camk2g\",\"Ntm\",\"Tspan5\",\"Dkk3\",\"Cadm4\",\"Pcdh7\",\"Sema7a\",\n  \"Cadm2\",\"Cbln2\",\"Frzb\",\"Tyro3\",\"Rtn4\",\"Ppp3ca\",\"Cdh12\",\"Fstl4\",\"Nptx2\",\"Lingo1\",\n  \"Pcdh9\",\"Unc5d\",\"Il1rap\",\"Rtn4r\",\"Nptx1\",\"Plxna4\",\"Cdh9\",\"Bmp3\",\"Crtac1\",\"Nrp2\",\n  \"Ptprt\",\"Jund\",\"Ubb\",\"Camk1\",\"Lrrc4c\",\"Pcdh15\",\"Matn2\",\"Il1rapl1\"\n  )\nITi_V_gene &lt;- c(\n  \"Edil3\",\"Epha4\",\"Cadm3\",\"Col25a1\",\"Ptprk\",\"Islr2\",\"Lrp8\",\"Il1rapl2\",\"Cdh10\",\"Nbl1\",\n  \"Lrrc4\",\"Ptprd\",\"Coch\",\"Plxnd1\",\"Ptgfrn\",\"Dkkl1\",\"Fat3\",\"Vstm2a\",\"Efnb2\",\"Cdh2\",\n  \"Ncam2\",\"Lsamp\",\"Pcdh10\",\"Sema3d\",\"Rspo2\",\"Jun\",\"Smoc2\",\"Car4\",\"Sdc3\",\"C1ql3\",\n  \"Plxnc1\",\"Cdh13\",\"Efnb3\",\"Nov\",\"Cadm1\"\n)\ngene_order &lt;- c(PTi_gene,ITi_D_gene,ITi_V_gene)\nCode\ndf &lt;- data.frame(\n  \"gene\" = gene_order,\n  \"max_exp\" = as.numeric(all_gene_exp$max[match(gene_order, rownames(all_gene_exp))]),\n  \"max_pct\" = as.numeric(all_gene_pct$max[match(gene_order, rownames(all_gene_exp))])\n)\ndf$gene_type &lt;- \"\"\ndf$gene_type[which(df$gene %in% AG)] &lt;- \"AGMs\"\ndf$gene_type[which(df$gene %in% CAM)] &lt;- \"CAMs\"\n\ndf$gene &lt;- factor(df$gene, levels = df$gene[order(df$max_exp)])\nP1 &lt;- \n  ggplot(df, aes(x=max_exp, y=gene, color=gene_type)) +\n  geom_point() +\n  scale_color_manual(values = c(\"AGMs\"=\"#8ebbda\",\"CAMs\"=\"#e99496\")) +\n  scale_x_continuous(breaks = c(0.1,2,4), limits = c(0.1,4)) +\n  theme_classic() +\n  theme(axis.text.y = element_text(size = 8))\n\ndf$gene &lt;- factor(df$gene, levels = df$gene[order(df$max_pct)])\nP2 &lt;- \n  ggplot(df, aes(x=max_pct, y=gene, color=gene_type)) +\n  geom_point() +\n  scale_color_manual(values = c(\"AGMs\"=\"#8ebbda\",\"CAMs\"=\"#e99496\")) +\n  scale_x_continuous(breaks = c(0.1,0.5,1), limits = c(0.1,1)) +\n  theme_classic() +\n  theme(axis.text.y = element_text(size = 8))\n\nlegend &lt;- get_legend(P1)\n\nFigureS9_A &lt;- \n  plot_grid(P1 + theme(legend.position=\"none\"),\n          P2 + theme(legend.position=\"none\"),\n          legend, nrow = 1)\nFigureS9_A\nCode\nggsave(\"../pdf/FigureS9/FigureS9_A.pdf\", plot = FigureS9_A,\n       height = 12, width = 6, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>FigureS9</span>"
    ]
  },
  {
    "objectID": "FigureS9.html#figures9_b",
    "href": "FigureS9.html#figures9_b",
    "title": "16  FigureS9",
    "section": "16.2 FigureS9_B",
    "text": "16.2 FigureS9_B\n\n\nCode\nload(\"../data/csv/CAMs_AGMs/CAMs_AGMs.hdwgcna.RData\")\n\n\n\n\nCode\nPlotDendrogram(seu.hdwgcna.AGMs_CAMs, main='hdWGCNA Dendrogram')",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>FigureS9</span>"
    ]
  },
  {
    "objectID": "FigureS9.html#figures9_c",
    "href": "FigureS9.html#figures9_c",
    "title": "16  FigureS9",
    "section": "16.3 FigureS9_C",
    "text": "16.3 FigureS9_C\n\n\nCode\ndf &lt;- as.data.frame(seu.hdwgcna.AGMs_CAMs@reductions$umap@cell.embeddings)\ndf$M1 &lt;- seu.hdwgcna.AGMs_CAMs@misc$AGMs_CAMs$MEs$M1\ndf$M2 &lt;- seu.hdwgcna.AGMs_CAMs@misc$AGMs_CAMs$MEs$M2\ndf$M3 &lt;- seu.hdwgcna.AGMs_CAMs@misc$AGMs_CAMs$MEs$M3\ndf$M4 &lt;- seu.hdwgcna.AGMs_CAMs@misc$AGMs_CAMs$MEs$M4\ndf$M5 &lt;- seu.hdwgcna.AGMs_CAMs@misc$AGMs_CAMs$MEs$M5\n#df &lt;- df[which(seu$Ex_subtype==\"IT\"),]\ndf &lt;- df[df$UMAP_1 &lt; 1.2 & df$UMAP_1 &gt; -13,]\n\n\n\n\nCode\nmodule &lt;- c(\"M1\",\"M2\",\"M3\",\"M4\",\"M5\")\ncol &lt;- c(\"turquoise\",\"yellow\",\"green\",\"blue\",\"brown\")\nplist &lt;- list()\nfor (i in 1:5){\n  plist[[i]] &lt;- \n    ggplot() +\n    geom_point(df, mapping = aes(x = UMAP_1, y = UMAP_2), color=\"lightgray\", size=1) +\n    geom_pointdensity(df[which(df[,module[i]]&gt;0),], mapping = aes(x = UMAP_1, y = UMAP_2), size=1) +\n    scale_color_gradientn(colours = c(\"lightgray\",\"white\",col[i]),\n                          na.value = col[i], limits = c(0,50), breaks = c(0,50)) +\n    coord_fixed() +\n    theme_void() +\n    labs(title = module[i], x=\"\", y=\"\", colour = \"\") +\n    theme(plot.title = element_text(hjust = 0.5, size = 20),\n          legend.text = element_text(hjust = 0.5, size = 15),\n          legend.position = \"right\",\n          legend.key.width  = unit(1, \"lines\"),\n          legend.key.height = unit(1.5, \"lines\"))\n}\nFigureS9_C &lt;- plot_grid(plotlist = plist, ncol=5)\nFigureS9_C\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS9/FigureS9_C.pdf\", plot = FigureS9_C,\n       height = 3, width = 15, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>FigureS9</span>"
    ]
  },
  {
    "objectID": "FigureS9.html#figures9_d",
    "href": "FigureS9.html#figures9_d",
    "title": "16  FigureS9",
    "section": "16.4 FigureS9_D",
    "text": "16.4 FigureS9_D\n\n\nCode\nModuleNetworkPlot(\n  seu.hdwgcna.AGMs_CAMs,\n  outdir = '../pdf/FigureS9/ModuleNetworks'\n)\n\n\n\n\nCode\nknitr::include_graphics(\"images/FigureS9_D.png\", dpi = 300)",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>FigureS9</span>"
    ]
  },
  {
    "objectID": "FigureS10.html",
    "href": "FigureS10.html",
    "title": "17  FigureS10",
    "section": "",
    "text": "17.1 FigureS10_A\nCode\nsp_Barcode &lt;- c('VIS-I','SSp-I','CP-I','AUD-I','RSP-I',\n             'BLA-I','ACB-I','AId-I','ECT-I',\n             'ACB-C','ECT-C',\n             'CP-C','AId-C','RSP-C',\n             'LHA-I')\nsp_gene &lt;- rownames(sp.PFC)\n\nsc_seu &lt;- Adult.IT.PT.barcode\nsc_seu$BC_motif &lt;- apply(sc_seu@meta.data[,sp_Barcode], 1, function(x){\n  paste(names(x)[which(x&gt;0)], collapse = ',')\n})\nsc_motif &lt;- unique(sc_seu$BC_motif)\n\nsp_seu &lt;- sp.PFC.Left.ITPT.barcode\nsp_seu$BC_motif &lt;- apply(sp_seu@meta.data[,sp_Barcode], 1, function(x){\n  paste(names(x)[which(x&gt;0)], collapse = ',')\n})\nsp_motif &lt;- unique(sp_seu$BC_motif)\n\nsc_seu &lt;- subset(sc_seu, cells=colnames(sc_seu)[which(sc_seu$BC_motif %in% sp_motif)])\nsp_seu &lt;- subset(sp_seu, cells=colnames(sp_seu)[which(sp_seu$BC_motif %in% sc_motif)])\n\n#sc_mat &lt;- cbind(t(as.matrix(sc_seu@assays$RNA@data[sp_gene,])),sc_seu@meta.data[,sp_Barcode])\nsc_mat &lt;- sc_seu@meta.data[,sp_Barcode]\nsc_mat[is.na(sc_mat)] &lt;- 0\n#sp_mat &lt;- cbind(t(as.matrix(sp_seu@assays$RNA@data[sp_gene,])),sp_seu@meta.data[,sp_Barcode])\nsp_mat &lt;- sp_seu@meta.data[,sp_Barcode]\nmerge_mat &lt;- rbind(sc_mat,sp_mat)\ncor_mat &lt;- cor(t(merge_mat))\n\nsc_seu$sc_cellid &lt;- rownames(sc_seu@meta.data)\nsp_cellid &lt;- \n  apply(sc_seu@meta.data,1,function(x){\n    sc_cell &lt;- x[\"sc_cellid\"]\n    sp_cells &lt;- colnames(sp_seu)[which(sp_seu$BC_motif==x[\"BC_motif\"] &\n                                       sp_seu$SubType==x[\"SubType\"])]\n    if (length(sp_cells)&gt;1){\n      names(which.max(cor_mat[sc_cell,sp_cells]))\n    }else{\n      sp_cells\n    }\n    })\nsp_cellid &lt;- as.character(sp_cellid)\nsc_seu$sp_cellid &lt;- sp_cellid\nsc_seu$ML_new &lt;- as.numeric(sp_seu$ML_new[sc_seu$sp_cellid])\nsc_seu$DV_new &lt;- as.numeric(sp_seu$DV_new[sc_seu$sp_cellid])\nsc_seu$AP_new &lt;- as.numeric(sp_seu$AP_new[sc_seu$sp_cellid])\nCode\nseu &lt;- sc_seu\ntranscriptom_mat &lt;- seu@reductions$pca@cell.embeddings[,1:30]\nspatial_mat &lt;-  seu@meta.data[,c(\"ML_new\",\"DV_new\",\"AP_new\")]\ncolnames(spatial_mat) &lt;- c(\"ML\",\"DV\",\"AP\")\nBarcode &lt;- c('VIS-I','SSp-I','CP-I','AUD-I','RSP-I',\n              'BLA-I','ACB-I','ENTl-I','AId-I','ECT-I',\n              'ACB-C','PL-C','ECT-C','ENTl-C',\n              'BLA-C','CP-C','AId-C','RSP-C',\n             'MD-I','RE-I','DR-I','VTA-I','LHA-I','SC-I')\n\nresult_all &lt;- data.frame()\nfor (i in 1:length(Barcode)){\n  proj_i &lt;- Barcode[i]\n  y &lt;- seu@meta.data[,proj_i]\n  y &lt;- y[!is.na(seu@meta.data[,proj_i])]\n  y[which(y&gt;0)] &lt;- 1\n\n  trainIndex &lt;- createDataPartition(y, p = .7, list = FALSE, times = 1)\n  y_train &lt;- y[trainIndex]\n  y_test &lt;- y[-trainIndex]\n\n    # transcriptom + spatial\n    X &lt;- as.matrix(cbind(transcriptom_mat, spatial_mat))\n    X &lt;- X[!is.na(seu@meta.data[,proj_i]),]\n    X_train &lt;- Matrix(X[trainIndex,], sparse = T)\n    X_test &lt;- Matrix(X[-trainIndex,], sparse = T)\n    dtrain &lt;- xgb.DMatrix(data = X_train, label = y_train)\n    dtest &lt;- xgb.DMatrix(data = X_test, label = y_test)\n    cv &lt;- xgb.cv(data = dtrain, nrounds = 1000, nfold = 5, max_depth = 5, eta = 0.5,\n                 early_stopping_rounds = 5, objective = \"binary:logistic\", \n                 verbose = F)\n    model_xgb &lt;- xgboost(data=dtrain, max_depth=5, eta=0.5, nthread = 5,\n                         nround = cv$best_iteration, objective = \"binary:logistic\",\n                         verbose = F)\n    pre &lt;- predict(model_xgb, newdata = dtest)\n    #y_pre &lt;- as.numeric(pre &gt; 0.5)\n    #conf &lt;- confusionMatrix(factor(y_pre, levels = c(0,1)),\n    #                        factor(y_test, levels = c(0,1)), \n    #                        mode = \"everything\", positive=\"1\")\n    #Accuracy &lt;- as.numeric(conf$overall[\"Accuracy\"])\n    #F1 &lt;- as.numeric(conf$byClass[\"F1\"])\n    #PR &lt;- pr.curve(scores.class0 = pre, weights.class0 = y_test, curve = TRUE)\n    ROC &lt;- roc.curve(scores.class0 = pre, weights.class0 = y_test, curve = TRUE)\n    result1 &lt;- data.frame('ROC_1'=ROC$curve[,1],\n                          'ROC_2'=ROC$curve[,2],\n                          'AUC'=ROC$auc,\n                          'target'=proj_i,\n                          'Experiment'=\"transcriptom + spatial\"\n                         )\n    \n    # transcriptom\n    X &lt;- as.matrix(transcriptom_mat)\n    X &lt;- X[!is.na(seu@meta.data[,proj_i]),]\n    X_train &lt;- Matrix(X[trainIndex,], sparse = T)\n    X_test &lt;- Matrix(X[-trainIndex,], sparse = T)\n    dtrain &lt;- xgb.DMatrix(data = X_train, label = y_train)\n    dtest &lt;- xgb.DMatrix(data = X_test, label = y_test)\n    cv &lt;- xgb.cv(data = dtrain, nrounds = 1000, nfold = 5, max_depth = 5, eta = 0.5,\n                 early_stopping_rounds = 5, objective = \"binary:logistic\", \n                 verbose = F)\n    model_xgb &lt;- xgboost(data=dtrain, max_depth=5, eta=0.5, nthread = 5,\n                         nround = cv$best_iteration, objective = 'binary:logistic',\n                         verbose = F)\n    pre &lt;- predict(model_xgb, newdata = dtest)\n    y_pre &lt;- as.numeric(pre &gt; 0.5)\n    conf &lt;- confusionMatrix(factor(y_pre, levels = c(0,1)),\n                            factor(y_test, levels = c(0,1)), \n                            mode = \"everything\", positive=\"1\")\n    Accuracy &lt;- as.numeric(conf$overall[\"Accuracy\"])\n    F1 &lt;- as.numeric(conf$byClass[\"F1\"])\n    ROC &lt;- roc.curve(scores.class0 = pre, weights.class0 = y_test, curve = TRUE)\n    result2 &lt;- data.frame('ROC_1'=ROC$curve[,1],\n                          'ROC_2'=ROC$curve[,2],\n                          'AUC'=ROC$auc,\n                          'target'=proj_i,\n                          'Experiment'=\"transcriptom\"\n                         )\n    \n    # shuffle y\n    y_shuffle &lt;- sample(y,length(y))\n    y_train &lt;- y_shuffle[trainIndex]\n    y_test &lt;- y_shuffle[-trainIndex]\n    X &lt;- as.matrix(cbind(transcriptom_mat, spatial_mat))\n    X &lt;- X[!is.na(seu@meta.data[,proj_i]),]\n    X_train &lt;- Matrix(X[trainIndex,], sparse = T)\n    X_test &lt;- Matrix(X[-trainIndex,], sparse = T)\n    dtrain &lt;- xgb.DMatrix(data = X_train, label = y_train)\n    dtest &lt;- xgb.DMatrix(data = X_test, label = y_test)\n    cv &lt;- xgb.cv(data = dtrain, nrounds = 1000, nfold = 5, max_depth = 5, eta = 0.5,\n                 early_stopping_rounds = 5, objective = \"binary:logistic\", \n                 verbose = F)\n    model_xgb &lt;- xgboost(data=dtrain, max_depth=5, eta=0.5, nthread = 5,\n                         nround = cv$best_iteration, objective = 'binary:logistic',\n                         verbose = F)\n    pre &lt;- predict(model_xgb, newdata = dtest)\n    y_pre &lt;- as.numeric(pre &gt; 0.5)\n    conf &lt;- confusionMatrix(factor(y_pre, levels = c(0,1)),\n                            factor(y_test, levels = c(0,1)), \n                            mode = \"everything\", positive=\"1\")\n    Accuracy &lt;- as.numeric(conf$overall[\"Accuracy\"])\n    F1 &lt;- as.numeric(conf$byClass[\"F1\"])\n    ROC &lt;- roc.curve(scores.class0 = pre, weights.class0 = y_test, curve = TRUE)\n    result3 &lt;- data.frame('ROC_1'=ROC$curve[,1],\n                          'ROC_2'=ROC$curve[,2],\n                          'AUC'=ROC$auc,\n                          'target'=proj_i,\n                          'Experiment'=\"shuffle\"\n                         )\n    result &lt;- rbind(result1, result2, result3)\n    result_all &lt;- rbind(result_all, result)\n}\n#saveRDS(result_all,'../data/csv/ML/barcode.result_all.rds')\nCode\nBarcode &lt;- c('VIS-I','SSp-I','CP-I','AUD-I','RSP-I',\n              'BLA-I','ACB-I','ENTl-I','AId-I','ECT-I',\n              'ACB-C','PL-C','ECT-C','ENTl-C',\n              'BLA-C','CP-C','AId-C','RSP-C',\n             'MD-I','RE-I','DR-I','VTA-I','LHA-I','SC-I')\nresult_all &lt;- readRDS('../data/rds/ML/result_target.rds')\ndf &lt;- result_all\ndf &lt;- df[which(df$Experiment != \"spatial\"),]\ndf$target &lt;- factor(df$target, levels = Barcode)\ndf$Experiment &lt;- factor(\n  df$Experiment, \n  levels = c(\"transcriptom + spatial\",\"transcriptom\",\"shuffle\"))\n\nFigureS10_A &lt;- \n  ggplot(df, aes(x=ROC_1, y=ROC_2, color=Experiment)) +\n  geom_line(linewidth=1) +\n  #geom_abline(slope = 1,intercept = 0,lty=\"dashed\",color='gray') +\n  facet_wrap(~target, nrow = 4) +\n  theme_bw() +\n  theme(panel.grid=element_blank(),\n        panel.spacing = unit(1,\"lines\"),\n        plot.title = element_text(hjust = 0.5, face = \"bold\"),\n        legend.position = \"top\", legend.title = element_blank()) +\n  scale_color_manual(values = c(\"transcriptom + spatial\"=\"#d73027\",\n                                \"transcriptom\"=\"#4575b4\",\n                                \"spatial\"=\"#ff7f0e\",\n                                \"shuffle\"=\"gray\")) +\n  labs(x='False positive rate', y='Sensitivity', \n       title = \"\")\nFigureS10_A\nCode\nggsave(\"../pdf/FigureS10/FigureS10_A.pdf\", plot = FigureS10_A,\n       height = 8, width = 10, units = \"in\")\nCode\ndf &lt;- df[which(df$Experiment != \"shuffle\"),]\nunique(paste(df$target, df$AUC,df$Experiment))\n\n\n [1] \"VIS-I 0.881488663117901 transcriptom + spatial\" \n [2] \"VIS-I 0.679628018540091 transcriptom\"           \n [3] \"SSp-I 0.889573309698658 transcriptom + spatial\" \n [4] \"SSp-I 0.762996961256014 transcriptom\"           \n [5] \"CP-I 0.938402645992368 transcriptom + spatial\"  \n [6] \"CP-I 0.768775036641258 transcriptom\"            \n [7] \"AUD-I 0.925174825174825 transcriptom + spatial\" \n [8] \"AUD-I 0.82711038961039 transcriptom\"            \n [9] \"RSP-I 0.906869983948636 transcriptom + spatial\" \n[10] \"RSP-I 0.734608079186731 transcriptom\"           \n[11] \"BLA-I 0.890474823188055 transcriptom + spatial\" \n[12] \"BLA-I 0.773131636744645 transcriptom\"           \n[13] \"ACB-I 0.944931942109034 transcriptom + spatial\" \n[14] \"ACB-I 0.7891513828725 transcriptom\"             \n[15] \"ENTl-I 0.833408038248917 transcriptom + spatial\"\n[16] \"ENTl-I 0.817958350230874 transcriptom\"          \n[17] \"AId-I 0.866658916531039 transcriptom + spatial\" \n[18] \"AId-I 0.7286522514144 transcriptom\"             \n[19] \"ECT-I 0.834653875400576 transcriptom + spatial\" \n[20] \"ECT-I 0.752600347618272 transcriptom\"           \n[21] \"ACB-C 0.8892592511239 transcriptom + spatial\"   \n[22] \"ACB-C 0.78734221470515 transcriptom\"            \n[23] \"PL-C 0.778075237072822 transcriptom + spatial\"  \n[24] \"PL-C 0.744822419037395 transcriptom\"            \n[25] \"ECT-C 0.82044866983571 transcriptom + spatial\"  \n[26] \"ECT-C 0.75640063380869 transcriptom\"            \n[27] \"ENTl-C 0.710758377425044 transcriptom + spatial\"\n[28] \"ENTl-C 0.724162257495591 transcriptom\"          \n[29] \"BLA-C 0.622408293460925 transcriptom + spatial\" \n[30] \"BLA-C 0.639314194577353 transcriptom\"           \n[31] \"CP-C 0.937142608342283 transcriptom + spatial\"  \n[32] \"CP-C 0.716493659891529 transcriptom\"            \n[33] \"AId-C 0.82741020975693 transcriptom + spatial\"  \n[34] \"AId-C 0.730626867250086 transcriptom\"           \n[35] \"RSP-C 0.813955342902711 transcriptom + spatial\" \n[36] \"RSP-C 0.664234449760766 transcriptom\"           \n[37] \"MD-I 0.951476310368505 transcriptom + spatial\"  \n[38] \"MD-I 0.94850080109865 transcriptom\"             \n[39] \"RE-I 0.971658986175115 transcriptom + spatial\"  \n[40] \"RE-I 0.967914746543779 transcriptom\"            \n[41] \"DR-I 0.973177636234961 transcriptom + spatial\"  \n[42] \"DR-I 0.970753715498938 transcriptom\"            \n[43] \"VTA-I 0.971886936592819 transcriptom + spatial\" \n[44] \"VTA-I 0.97868601986249 transcriptom\"            \n[45] \"LHA-I 0.98406424493381 transcriptom + spatial\"  \n[46] \"LHA-I 0.980660643704122 transcriptom\"           \n[47] \"SC-I 0.961650485436893 transcriptom + spatial\"  \n[48] \"SC-I 0.965169902912621 transcriptom\"",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>FigureS10</span>"
    ]
  },
  {
    "objectID": "FigureS10.html#figures10_b",
    "href": "FigureS10.html#figures10_b",
    "title": "17  FigureS10",
    "section": "17.2 FigureS10_B",
    "text": "17.2 FigureS10_B\n\n\nCode\nFigureS10_B &lt;- \n  DimPlot_scCustom(seurat_object = seu.inte, group.by = \"Sample\", reduction = \"umap\", figure_plot = TRUE, colors_use = c(\"#f8766d\", \"#00bfc4\"),pt.size = 0.1) +\n  coord_fixed()\nFigureS10_B\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS10/FigureS10_B.pdf\", plot = FigureS10_B,\n       height = 4, width = 6, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>FigureS10</span>"
    ]
  },
  {
    "objectID": "FigureS10.html#figures10_c",
    "href": "FigureS10.html#figures10_c",
    "title": "17  FigureS10",
    "section": "17.3 FigureS10_C",
    "text": "17.3 FigureS10_C\n\n\nCode\nseu &lt;- subset(seu.inte, cells=colnames(seu.inte)[which(seu.inte$Sample==\"scRNAseq\")])\ncolnames(seu@meta.data)[13:36] &lt;- c(\n  \"ACB-C\",\"ACB-I\",\"AId-C\",\"AId-I\",\"AUD-I\",\"BLA-C\",\"BLA-I\",\"CP-C\",\"CP-I\",\"DR-I\",\n  \"ECT-C\",\"ECT-I\",\"ENTl-C\",\"ENTl-I\",\"LHA-I\",\"MD-I\",\"PL-C\",\"RE-I\",\"RSP-C\",\"RSP-I\",\n  \"SC-I\",\"SSp-I\",\"VIS-I\",\"VTA-I\")\nseu$first_target &lt;- \"none\"\nseu$first_target[which(seu$BC_num&gt;0)] &lt;- Barcode[apply(seu@meta.data[which(seu$BC_num&gt;0),Barcode], 1, which.max)]\nseu$first_target &lt;- factor(seu$first_target, levels = c(Barcode,\"none\"))\n\nFigureS10_C &lt;- \n  DimPlot_scCustom(seurat_object = seu, group.by = \"first_target\", reduction = \"umap\",\n                   colors_use = col_Barcode,\n                   figure_plot = TRUE, pt.size = 0.1) +\n  coord_fixed()\nFigureS10_C\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS10/FigureS10_C.pdf\", plot = FigureS10_C,\n       height = 4, width = 6, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>FigureS10</span>"
    ]
  },
  {
    "objectID": "FigureS10.html#figures10_d",
    "href": "FigureS10.html#figures10_d",
    "title": "17  FigureS10",
    "section": "17.4 FigureS10_D",
    "text": "17.4 FigureS10_D\n\n\nCode\nseu &lt;- subset(seu.inte, cells=colnames(seu.inte)[which(seu.inte$Sample==\"MERFISH\")])\n\nFigureS10_D &lt;- \n  DimPlot_scCustom(seurat_object = seu, group.by = \"subcluster\", reduction = \"umap\",\n                   colors_use = scales::hue_pal()(18),\n                   figure_plot = TRUE, pt.size = 0.1) +\n  coord_fixed()\nFigureS10_D\n\n\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"../pdf/FigureS10/FigureS10_D.pdf\", plot = FigureS10_D,\n       height = 6, width = 6, units = \"in\")",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>FigureS10</span>"
    ]
  },
  {
    "objectID": "FigureS10.html#figures10_e",
    "href": "FigureS10.html#figures10_e",
    "title": "17  FigureS10",
    "section": "17.5 FigureS10_E",
    "text": "17.5 FigureS10_E\nSee Figure7_G and Figure7_H",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>FigureS10</span>"
    ]
  },
  {
    "objectID": "FigureS11.html",
    "href": "FigureS11.html",
    "title": "18  FigureS11",
    "section": "",
    "text": "Code\nknitr::include_graphics(\"images/FigureS11.jpg\", dpi = 300)",
    "crumbs": [
      "Supplemental Figure",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>FigureS11</span>"
    ]
  }
]